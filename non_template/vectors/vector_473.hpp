//Name: Jonathan Dullea 
//jdullea@umass.edu
//This header was generatef by generate_vector.cpp

#include <iostream>
#include <x86intrin.h>
#include "immintrin.h"
#include <cstring>
#include <cmath>
using namespace std;

class VectorSIMD473{
public:
		__m256d _avx0;
		__m256d _avx1;
		__m256d _avx2;
		__m256d _avx3;
		__m256d _avx4;
		__m256d _avx5;
		__m256d _avx6;
		__m256d _avx7;
		__m256d _avx8;
		__m256d _avx9;
		__m256d _avx10;
		__m256d _avx11;
		__m256d _avx12;
		__m256d _avx13;
		__m256d _avx14;
		__m256d _avx15;
		__m256d _avx16;
		__m256d _avx17;
		__m256d _avx18;
		__m256d _avx19;
		__m256d _avx20;
		__m256d _avx21;
		__m256d _avx22;
		__m256d _avx23;
		__m256d _avx24;
		__m256d _avx25;
		__m256d _avx26;
		__m256d _avx27;
		__m256d _avx28;
		__m256d _avx29;
		__m256d _avx30;
		__m256d _avx31;
		__m256d _avx32;
		__m256d _avx33;
		__m256d _avx34;
		__m256d _avx35;
		__m256d _avx36;
		__m256d _avx37;
		__m256d _avx38;
		__m256d _avx39;
		__m256d _avx40;
		__m256d _avx41;
		__m256d _avx42;
		__m256d _avx43;
		__m256d _avx44;
		__m256d _avx45;
		__m256d _avx46;
		__m256d _avx47;
		__m256d _avx48;
		__m256d _avx49;
		__m256d _avx50;
		__m256d _avx51;
		__m256d _avx52;
		__m256d _avx53;
		__m256d _avx54;
		__m256d _avx55;
		__m256d _avx56;
		__m256d _avx57;
		__m256d _avx58;
		__m256d _avx59;
		__m256d _avx60;
		__m256d _avx61;
		__m256d _avx62;
		__m256d _avx63;
		__m256d _avx64;
		__m256d _avx65;
		__m256d _avx66;
		__m256d _avx67;
		__m256d _avx68;
		__m256d _avx69;
		__m256d _avx70;
		__m256d _avx71;
		__m256d _avx72;
		__m256d _avx73;
		__m256d _avx74;
		__m256d _avx75;
		__m256d _avx76;
		__m256d _avx77;
		__m256d _avx78;
		__m256d _avx79;
		__m256d _avx80;
		__m256d _avx81;
		__m256d _avx82;
		__m256d _avx83;
		__m256d _avx84;
		__m256d _avx85;
		__m256d _avx86;
		__m256d _avx87;
		__m256d _avx88;
		__m256d _avx89;
		__m256d _avx90;
		__m256d _avx91;
		__m256d _avx92;
		__m256d _avx93;
		__m256d _avx94;
		__m256d _avx95;
		__m256d _avx96;
		__m256d _avx97;
		__m256d _avx98;
		__m256d _avx99;
		__m256d _avx100;
		__m256d _avx101;
		__m256d _avx102;
		__m256d _avx103;
		__m256d _avx104;
		__m256d _avx105;
		__m256d _avx106;
		__m256d _avx107;
		__m256d _avx108;
		__m256d _avx109;
		__m256d _avx110;
		__m256d _avx111;
		__m256d _avx112;
		__m256d _avx113;
		__m256d _avx114;
		__m256d _avx115;
		__m256d _avx116;
		__m256d _avx117;
		__m256d _avx118;
		VectorSIMD473(){};
		VectorSIMD473(double a){
			_avx0=_mm256_set_pd(a,a,a,a);
			_avx1=_mm256_set_pd(a,a,a,a);
			_avx2=_mm256_set_pd(a,a,a,a);
			_avx3=_mm256_set_pd(a,a,a,a);
			_avx4=_mm256_set_pd(a,a,a,a);
			_avx5=_mm256_set_pd(a,a,a,a);
			_avx6=_mm256_set_pd(a,a,a,a);
			_avx7=_mm256_set_pd(a,a,a,a);
			_avx8=_mm256_set_pd(a,a,a,a);
			_avx9=_mm256_set_pd(a,a,a,a);
			_avx10=_mm256_set_pd(a,a,a,a);
			_avx11=_mm256_set_pd(a,a,a,a);
			_avx12=_mm256_set_pd(a,a,a,a);
			_avx13=_mm256_set_pd(a,a,a,a);
			_avx14=_mm256_set_pd(a,a,a,a);
			_avx15=_mm256_set_pd(a,a,a,a);
			_avx16=_mm256_set_pd(a,a,a,a);
			_avx17=_mm256_set_pd(a,a,a,a);
			_avx18=_mm256_set_pd(a,a,a,a);
			_avx19=_mm256_set_pd(a,a,a,a);
			_avx20=_mm256_set_pd(a,a,a,a);
			_avx21=_mm256_set_pd(a,a,a,a);
			_avx22=_mm256_set_pd(a,a,a,a);
			_avx23=_mm256_set_pd(a,a,a,a);
			_avx24=_mm256_set_pd(a,a,a,a);
			_avx25=_mm256_set_pd(a,a,a,a);
			_avx26=_mm256_set_pd(a,a,a,a);
			_avx27=_mm256_set_pd(a,a,a,a);
			_avx28=_mm256_set_pd(a,a,a,a);
			_avx29=_mm256_set_pd(a,a,a,a);
			_avx30=_mm256_set_pd(a,a,a,a);
			_avx31=_mm256_set_pd(a,a,a,a);
			_avx32=_mm256_set_pd(a,a,a,a);
			_avx33=_mm256_set_pd(a,a,a,a);
			_avx34=_mm256_set_pd(a,a,a,a);
			_avx35=_mm256_set_pd(a,a,a,a);
			_avx36=_mm256_set_pd(a,a,a,a);
			_avx37=_mm256_set_pd(a,a,a,a);
			_avx38=_mm256_set_pd(a,a,a,a);
			_avx39=_mm256_set_pd(a,a,a,a);
			_avx40=_mm256_set_pd(a,a,a,a);
			_avx41=_mm256_set_pd(a,a,a,a);
			_avx42=_mm256_set_pd(a,a,a,a);
			_avx43=_mm256_set_pd(a,a,a,a);
			_avx44=_mm256_set_pd(a,a,a,a);
			_avx45=_mm256_set_pd(a,a,a,a);
			_avx46=_mm256_set_pd(a,a,a,a);
			_avx47=_mm256_set_pd(a,a,a,a);
			_avx48=_mm256_set_pd(a,a,a,a);
			_avx49=_mm256_set_pd(a,a,a,a);
			_avx50=_mm256_set_pd(a,a,a,a);
			_avx51=_mm256_set_pd(a,a,a,a);
			_avx52=_mm256_set_pd(a,a,a,a);
			_avx53=_mm256_set_pd(a,a,a,a);
			_avx54=_mm256_set_pd(a,a,a,a);
			_avx55=_mm256_set_pd(a,a,a,a);
			_avx56=_mm256_set_pd(a,a,a,a);
			_avx57=_mm256_set_pd(a,a,a,a);
			_avx58=_mm256_set_pd(a,a,a,a);
			_avx59=_mm256_set_pd(a,a,a,a);
			_avx60=_mm256_set_pd(a,a,a,a);
			_avx61=_mm256_set_pd(a,a,a,a);
			_avx62=_mm256_set_pd(a,a,a,a);
			_avx63=_mm256_set_pd(a,a,a,a);
			_avx64=_mm256_set_pd(a,a,a,a);
			_avx65=_mm256_set_pd(a,a,a,a);
			_avx66=_mm256_set_pd(a,a,a,a);
			_avx67=_mm256_set_pd(a,a,a,a);
			_avx68=_mm256_set_pd(a,a,a,a);
			_avx69=_mm256_set_pd(a,a,a,a);
			_avx70=_mm256_set_pd(a,a,a,a);
			_avx71=_mm256_set_pd(a,a,a,a);
			_avx72=_mm256_set_pd(a,a,a,a);
			_avx73=_mm256_set_pd(a,a,a,a);
			_avx74=_mm256_set_pd(a,a,a,a);
			_avx75=_mm256_set_pd(a,a,a,a);
			_avx76=_mm256_set_pd(a,a,a,a);
			_avx77=_mm256_set_pd(a,a,a,a);
			_avx78=_mm256_set_pd(a,a,a,a);
			_avx79=_mm256_set_pd(a,a,a,a);
			_avx80=_mm256_set_pd(a,a,a,a);
			_avx81=_mm256_set_pd(a,a,a,a);
			_avx82=_mm256_set_pd(a,a,a,a);
			_avx83=_mm256_set_pd(a,a,a,a);
			_avx84=_mm256_set_pd(a,a,a,a);
			_avx85=_mm256_set_pd(a,a,a,a);
			_avx86=_mm256_set_pd(a,a,a,a);
			_avx87=_mm256_set_pd(a,a,a,a);
			_avx88=_mm256_set_pd(a,a,a,a);
			_avx89=_mm256_set_pd(a,a,a,a);
			_avx90=_mm256_set_pd(a,a,a,a);
			_avx91=_mm256_set_pd(a,a,a,a);
			_avx92=_mm256_set_pd(a,a,a,a);
			_avx93=_mm256_set_pd(a,a,a,a);
			_avx94=_mm256_set_pd(a,a,a,a);
			_avx95=_mm256_set_pd(a,a,a,a);
			_avx96=_mm256_set_pd(a,a,a,a);
			_avx97=_mm256_set_pd(a,a,a,a);
			_avx98=_mm256_set_pd(a,a,a,a);
			_avx99=_mm256_set_pd(a,a,a,a);
			_avx100=_mm256_set_pd(a,a,a,a);
			_avx101=_mm256_set_pd(a,a,a,a);
			_avx102=_mm256_set_pd(a,a,a,a);
			_avx103=_mm256_set_pd(a,a,a,a);
			_avx104=_mm256_set_pd(a,a,a,a);
			_avx105=_mm256_set_pd(a,a,a,a);
			_avx106=_mm256_set_pd(a,a,a,a);
			_avx107=_mm256_set_pd(a,a,a,a);
			_avx108=_mm256_set_pd(a,a,a,a);
			_avx109=_mm256_set_pd(a,a,a,a);
			_avx110=_mm256_set_pd(a,a,a,a);
			_avx111=_mm256_set_pd(a,a,a,a);
			_avx112=_mm256_set_pd(a,a,a,a);
			_avx113=_mm256_set_pd(a,a,a,a);
			_avx114=_mm256_set_pd(a,a,a,a);
			_avx115=_mm256_set_pd(a,a,a,a);
			_avx116=_mm256_set_pd(a,a,a,a);
			_avx117=_mm256_set_pd(a,a,a,a);
			_avx118=_mm256_set_pd(0,0,0,a);
		}

		VectorSIMD473(double (&a)[473]){
			_avx0=_mm256_set_pd(a[3],a[2],a[1],a[0]);
			_avx1=_mm256_set_pd(a[7],a[6],a[5],a[4]);
			_avx2=_mm256_set_pd(a[11],a[10],a[9],a[8]);
			_avx3=_mm256_set_pd(a[15],a[14],a[13],a[12]);
			_avx4=_mm256_set_pd(a[19],a[18],a[17],a[16]);
			_avx5=_mm256_set_pd(a[23],a[22],a[21],a[20]);
			_avx6=_mm256_set_pd(a[27],a[26],a[25],a[24]);
			_avx7=_mm256_set_pd(a[31],a[30],a[29],a[28]);
			_avx8=_mm256_set_pd(a[35],a[34],a[33],a[32]);
			_avx9=_mm256_set_pd(a[39],a[38],a[37],a[36]);
			_avx10=_mm256_set_pd(a[43],a[42],a[41],a[40]);
			_avx11=_mm256_set_pd(a[47],a[46],a[45],a[44]);
			_avx12=_mm256_set_pd(a[51],a[50],a[49],a[48]);
			_avx13=_mm256_set_pd(a[55],a[54],a[53],a[52]);
			_avx14=_mm256_set_pd(a[59],a[58],a[57],a[56]);
			_avx15=_mm256_set_pd(a[63],a[62],a[61],a[60]);
			_avx16=_mm256_set_pd(a[67],a[66],a[65],a[64]);
			_avx17=_mm256_set_pd(a[71],a[70],a[69],a[68]);
			_avx18=_mm256_set_pd(a[75],a[74],a[73],a[72]);
			_avx19=_mm256_set_pd(a[79],a[78],a[77],a[76]);
			_avx20=_mm256_set_pd(a[83],a[82],a[81],a[80]);
			_avx21=_mm256_set_pd(a[87],a[86],a[85],a[84]);
			_avx22=_mm256_set_pd(a[91],a[90],a[89],a[88]);
			_avx23=_mm256_set_pd(a[95],a[94],a[93],a[92]);
			_avx24=_mm256_set_pd(a[99],a[98],a[97],a[96]);
			_avx25=_mm256_set_pd(a[103],a[102],a[101],a[100]);
			_avx26=_mm256_set_pd(a[107],a[106],a[105],a[104]);
			_avx27=_mm256_set_pd(a[111],a[110],a[109],a[108]);
			_avx28=_mm256_set_pd(a[115],a[114],a[113],a[112]);
			_avx29=_mm256_set_pd(a[119],a[118],a[117],a[116]);
			_avx30=_mm256_set_pd(a[123],a[122],a[121],a[120]);
			_avx31=_mm256_set_pd(a[127],a[126],a[125],a[124]);
			_avx32=_mm256_set_pd(a[131],a[130],a[129],a[128]);
			_avx33=_mm256_set_pd(a[135],a[134],a[133],a[132]);
			_avx34=_mm256_set_pd(a[139],a[138],a[137],a[136]);
			_avx35=_mm256_set_pd(a[143],a[142],a[141],a[140]);
			_avx36=_mm256_set_pd(a[147],a[146],a[145],a[144]);
			_avx37=_mm256_set_pd(a[151],a[150],a[149],a[148]);
			_avx38=_mm256_set_pd(a[155],a[154],a[153],a[152]);
			_avx39=_mm256_set_pd(a[159],a[158],a[157],a[156]);
			_avx40=_mm256_set_pd(a[163],a[162],a[161],a[160]);
			_avx41=_mm256_set_pd(a[167],a[166],a[165],a[164]);
			_avx42=_mm256_set_pd(a[171],a[170],a[169],a[168]);
			_avx43=_mm256_set_pd(a[175],a[174],a[173],a[172]);
			_avx44=_mm256_set_pd(a[179],a[178],a[177],a[176]);
			_avx45=_mm256_set_pd(a[183],a[182],a[181],a[180]);
			_avx46=_mm256_set_pd(a[187],a[186],a[185],a[184]);
			_avx47=_mm256_set_pd(a[191],a[190],a[189],a[188]);
			_avx48=_mm256_set_pd(a[195],a[194],a[193],a[192]);
			_avx49=_mm256_set_pd(a[199],a[198],a[197],a[196]);
			_avx50=_mm256_set_pd(a[203],a[202],a[201],a[200]);
			_avx51=_mm256_set_pd(a[207],a[206],a[205],a[204]);
			_avx52=_mm256_set_pd(a[211],a[210],a[209],a[208]);
			_avx53=_mm256_set_pd(a[215],a[214],a[213],a[212]);
			_avx54=_mm256_set_pd(a[219],a[218],a[217],a[216]);
			_avx55=_mm256_set_pd(a[223],a[222],a[221],a[220]);
			_avx56=_mm256_set_pd(a[227],a[226],a[225],a[224]);
			_avx57=_mm256_set_pd(a[231],a[230],a[229],a[228]);
			_avx58=_mm256_set_pd(a[235],a[234],a[233],a[232]);
			_avx59=_mm256_set_pd(a[239],a[238],a[237],a[236]);
			_avx60=_mm256_set_pd(a[243],a[242],a[241],a[240]);
			_avx61=_mm256_set_pd(a[247],a[246],a[245],a[244]);
			_avx62=_mm256_set_pd(a[251],a[250],a[249],a[248]);
			_avx63=_mm256_set_pd(a[255],a[254],a[253],a[252]);
			_avx64=_mm256_set_pd(a[259],a[258],a[257],a[256]);
			_avx65=_mm256_set_pd(a[263],a[262],a[261],a[260]);
			_avx66=_mm256_set_pd(a[267],a[266],a[265],a[264]);
			_avx67=_mm256_set_pd(a[271],a[270],a[269],a[268]);
			_avx68=_mm256_set_pd(a[275],a[274],a[273],a[272]);
			_avx69=_mm256_set_pd(a[279],a[278],a[277],a[276]);
			_avx70=_mm256_set_pd(a[283],a[282],a[281],a[280]);
			_avx71=_mm256_set_pd(a[287],a[286],a[285],a[284]);
			_avx72=_mm256_set_pd(a[291],a[290],a[289],a[288]);
			_avx73=_mm256_set_pd(a[295],a[294],a[293],a[292]);
			_avx74=_mm256_set_pd(a[299],a[298],a[297],a[296]);
			_avx75=_mm256_set_pd(a[303],a[302],a[301],a[300]);
			_avx76=_mm256_set_pd(a[307],a[306],a[305],a[304]);
			_avx77=_mm256_set_pd(a[311],a[310],a[309],a[308]);
			_avx78=_mm256_set_pd(a[315],a[314],a[313],a[312]);
			_avx79=_mm256_set_pd(a[319],a[318],a[317],a[316]);
			_avx80=_mm256_set_pd(a[323],a[322],a[321],a[320]);
			_avx81=_mm256_set_pd(a[327],a[326],a[325],a[324]);
			_avx82=_mm256_set_pd(a[331],a[330],a[329],a[328]);
			_avx83=_mm256_set_pd(a[335],a[334],a[333],a[332]);
			_avx84=_mm256_set_pd(a[339],a[338],a[337],a[336]);
			_avx85=_mm256_set_pd(a[343],a[342],a[341],a[340]);
			_avx86=_mm256_set_pd(a[347],a[346],a[345],a[344]);
			_avx87=_mm256_set_pd(a[351],a[350],a[349],a[348]);
			_avx88=_mm256_set_pd(a[355],a[354],a[353],a[352]);
			_avx89=_mm256_set_pd(a[359],a[358],a[357],a[356]);
			_avx90=_mm256_set_pd(a[363],a[362],a[361],a[360]);
			_avx91=_mm256_set_pd(a[367],a[366],a[365],a[364]);
			_avx92=_mm256_set_pd(a[371],a[370],a[369],a[368]);
			_avx93=_mm256_set_pd(a[375],a[374],a[373],a[372]);
			_avx94=_mm256_set_pd(a[379],a[378],a[377],a[376]);
			_avx95=_mm256_set_pd(a[383],a[382],a[381],a[380]);
			_avx96=_mm256_set_pd(a[387],a[386],a[385],a[384]);
			_avx97=_mm256_set_pd(a[391],a[390],a[389],a[388]);
			_avx98=_mm256_set_pd(a[395],a[394],a[393],a[392]);
			_avx99=_mm256_set_pd(a[399],a[398],a[397],a[396]);
			_avx100=_mm256_set_pd(a[403],a[402],a[401],a[400]);
			_avx101=_mm256_set_pd(a[407],a[406],a[405],a[404]);
			_avx102=_mm256_set_pd(a[411],a[410],a[409],a[408]);
			_avx103=_mm256_set_pd(a[415],a[414],a[413],a[412]);
			_avx104=_mm256_set_pd(a[419],a[418],a[417],a[416]);
			_avx105=_mm256_set_pd(a[423],a[422],a[421],a[420]);
			_avx106=_mm256_set_pd(a[427],a[426],a[425],a[424]);
			_avx107=_mm256_set_pd(a[431],a[430],a[429],a[428]);
			_avx108=_mm256_set_pd(a[435],a[434],a[433],a[432]);
			_avx109=_mm256_set_pd(a[439],a[438],a[437],a[436]);
			_avx110=_mm256_set_pd(a[443],a[442],a[441],a[440]);
			_avx111=_mm256_set_pd(a[447],a[446],a[445],a[444]);
			_avx112=_mm256_set_pd(a[451],a[450],a[449],a[448]);
			_avx113=_mm256_set_pd(a[455],a[454],a[453],a[452]);
			_avx114=_mm256_set_pd(a[459],a[458],a[457],a[456]);
			_avx115=_mm256_set_pd(a[463],a[462],a[461],a[460]);
			_avx116=_mm256_set_pd(a[467],a[466],a[465],a[464]);
			_avx117=_mm256_set_pd(a[471],a[470],a[469],a[468]);
			_avx118=_mm256_set_pd(0,0,0,a[472]);
		}

		VectorSIMD473(double _0,double _1,double _2,double _3,double _4,double _5,double _6,double _7,double _8,double _9,double _10,double _11,double _12,double _13,double _14,double _15,double _16,double _17,double _18,double _19,double _20,double _21,double _22,double _23,double _24,double _25,double _26,double _27,double _28,double _29,double _30,double _31,double _32,double _33,double _34,double _35,double _36,double _37,double _38,double _39,double _40,double _41,double _42,double _43,double _44,double _45,double _46,double _47,double _48,double _49,double _50,double _51,double _52,double _53,double _54,double _55,double _56,double _57,double _58,double _59,double _60,double _61,double _62,double _63,double _64,double _65,double _66,double _67,double _68,double _69,double _70,double _71,double _72,double _73,double _74,double _75,double _76,double _77,double _78,double _79,double _80,double _81,double _82,double _83,double _84,double _85,double _86,double _87,double _88,double _89,double _90,double _91,double _92,double _93,double _94,double _95,double _96,double _97,double _98,double _99,double _100,double _101,double _102,double _103,double _104,double _105,double _106,double _107,double _108,double _109,double _110,double _111,double _112,double _113,double _114,double _115,double _116,double _117,double _118,double _119,double _120,double _121,double _122,double _123,double _124,double _125,double _126,double _127,double _128,double _129,double _130,double _131,double _132,double _133,double _134,double _135,double _136,double _137,double _138,double _139,double _140,double _141,double _142,double _143,double _144,double _145,double _146,double _147,double _148,double _149,double _150,double _151,double _152,double _153,double _154,double _155,double _156,double _157,double _158,double _159,double _160,double _161,double _162,double _163,double _164,double _165,double _166,double _167,double _168,double _169,double _170,double _171,double _172,double _173,double _174,double _175,double _176,double _177,double _178,double _179,double _180,double _181,double _182,double _183,double _184,double _185,double _186,double _187,double _188,double _189,double _190,double _191,double _192,double _193,double _194,double _195,double _196,double _197,double _198,double _199,double _200,double _201,double _202,double _203,double _204,double _205,double _206,double _207,double _208,double _209,double _210,double _211,double _212,double _213,double _214,double _215,double _216,double _217,double _218,double _219,double _220,double _221,double _222,double _223,double _224,double _225,double _226,double _227,double _228,double _229,double _230,double _231,double _232,double _233,double _234,double _235,double _236,double _237,double _238,double _239,double _240,double _241,double _242,double _243,double _244,double _245,double _246,double _247,double _248,double _249,double _250,double _251,double _252,double _253,double _254,double _255,double _256,double _257,double _258,double _259,double _260,double _261,double _262,double _263,double _264,double _265,double _266,double _267,double _268,double _269,double _270,double _271,double _272,double _273,double _274,double _275,double _276,double _277,double _278,double _279,double _280,double _281,double _282,double _283,double _284,double _285,double _286,double _287,double _288,double _289,double _290,double _291,double _292,double _293,double _294,double _295,double _296,double _297,double _298,double _299,double _300,double _301,double _302,double _303,double _304,double _305,double _306,double _307,double _308,double _309,double _310,double _311,double _312,double _313,double _314,double _315,double _316,double _317,double _318,double _319,double _320,double _321,double _322,double _323,double _324,double _325,double _326,double _327,double _328,double _329,double _330,double _331,double _332,double _333,double _334,double _335,double _336,double _337,double _338,double _339,double _340,double _341,double _342,double _343,double _344,double _345,double _346,double _347,double _348,double _349,double _350,double _351,double _352,double _353,double _354,double _355,double _356,double _357,double _358,double _359,double _360,double _361,double _362,double _363,double _364,double _365,double _366,double _367,double _368,double _369,double _370,double _371,double _372,double _373,double _374,double _375,double _376,double _377,double _378,double _379,double _380,double _381,double _382,double _383,double _384,double _385,double _386,double _387,double _388,double _389,double _390,double _391,double _392,double _393,double _394,double _395,double _396,double _397,double _398,double _399,double _400,double _401,double _402,double _403,double _404,double _405,double _406,double _407,double _408,double _409,double _410,double _411,double _412,double _413,double _414,double _415,double _416,double _417,double _418,double _419,double _420,double _421,double _422,double _423,double _424,double _425,double _426,double _427,double _428,double _429,double _430,double _431,double _432,double _433,double _434,double _435,double _436,double _437,double _438,double _439,double _440,double _441,double _442,double _443,double _444,double _445,double _446,double _447,double _448,double _449,double _450,double _451,double _452,double _453,double _454,double _455,double _456,double _457,double _458,double _459,double _460,double _461,double _462,double _463,double _464,double _465,double _466,double _467,double _468,double _469,double _470,double _471,double _472){
			_avx0=_mm256_set_pd(_3,_2,_1,_0);
			_avx1=_mm256_set_pd(_7,_6,_5,_4);
			_avx2=_mm256_set_pd(_11,_10,_9,_8);
			_avx3=_mm256_set_pd(_15,_14,_13,_12);
			_avx4=_mm256_set_pd(_19,_18,_17,_16);
			_avx5=_mm256_set_pd(_23,_22,_21,_20);
			_avx6=_mm256_set_pd(_27,_26,_25,_24);
			_avx7=_mm256_set_pd(_31,_30,_29,_28);
			_avx8=_mm256_set_pd(_35,_34,_33,_32);
			_avx9=_mm256_set_pd(_39,_38,_37,_36);
			_avx10=_mm256_set_pd(_43,_42,_41,_40);
			_avx11=_mm256_set_pd(_47,_46,_45,_44);
			_avx12=_mm256_set_pd(_51,_50,_49,_48);
			_avx13=_mm256_set_pd(_55,_54,_53,_52);
			_avx14=_mm256_set_pd(_59,_58,_57,_56);
			_avx15=_mm256_set_pd(_63,_62,_61,_60);
			_avx16=_mm256_set_pd(_67,_66,_65,_64);
			_avx17=_mm256_set_pd(_71,_70,_69,_68);
			_avx18=_mm256_set_pd(_75,_74,_73,_72);
			_avx19=_mm256_set_pd(_79,_78,_77,_76);
			_avx20=_mm256_set_pd(_83,_82,_81,_80);
			_avx21=_mm256_set_pd(_87,_86,_85,_84);
			_avx22=_mm256_set_pd(_91,_90,_89,_88);
			_avx23=_mm256_set_pd(_95,_94,_93,_92);
			_avx24=_mm256_set_pd(_99,_98,_97,_96);
			_avx25=_mm256_set_pd(_103,_102,_101,_100);
			_avx26=_mm256_set_pd(_107,_106,_105,_104);
			_avx27=_mm256_set_pd(_111,_110,_109,_108);
			_avx28=_mm256_set_pd(_115,_114,_113,_112);
			_avx29=_mm256_set_pd(_119,_118,_117,_116);
			_avx30=_mm256_set_pd(_123,_122,_121,_120);
			_avx31=_mm256_set_pd(_127,_126,_125,_124);
			_avx32=_mm256_set_pd(_131,_130,_129,_128);
			_avx33=_mm256_set_pd(_135,_134,_133,_132);
			_avx34=_mm256_set_pd(_139,_138,_137,_136);
			_avx35=_mm256_set_pd(_143,_142,_141,_140);
			_avx36=_mm256_set_pd(_147,_146,_145,_144);
			_avx37=_mm256_set_pd(_151,_150,_149,_148);
			_avx38=_mm256_set_pd(_155,_154,_153,_152);
			_avx39=_mm256_set_pd(_159,_158,_157,_156);
			_avx40=_mm256_set_pd(_163,_162,_161,_160);
			_avx41=_mm256_set_pd(_167,_166,_165,_164);
			_avx42=_mm256_set_pd(_171,_170,_169,_168);
			_avx43=_mm256_set_pd(_175,_174,_173,_172);
			_avx44=_mm256_set_pd(_179,_178,_177,_176);
			_avx45=_mm256_set_pd(_183,_182,_181,_180);
			_avx46=_mm256_set_pd(_187,_186,_185,_184);
			_avx47=_mm256_set_pd(_191,_190,_189,_188);
			_avx48=_mm256_set_pd(_195,_194,_193,_192);
			_avx49=_mm256_set_pd(_199,_198,_197,_196);
			_avx50=_mm256_set_pd(_203,_202,_201,_200);
			_avx51=_mm256_set_pd(_207,_206,_205,_204);
			_avx52=_mm256_set_pd(_211,_210,_209,_208);
			_avx53=_mm256_set_pd(_215,_214,_213,_212);
			_avx54=_mm256_set_pd(_219,_218,_217,_216);
			_avx55=_mm256_set_pd(_223,_222,_221,_220);
			_avx56=_mm256_set_pd(_227,_226,_225,_224);
			_avx57=_mm256_set_pd(_231,_230,_229,_228);
			_avx58=_mm256_set_pd(_235,_234,_233,_232);
			_avx59=_mm256_set_pd(_239,_238,_237,_236);
			_avx60=_mm256_set_pd(_243,_242,_241,_240);
			_avx61=_mm256_set_pd(_247,_246,_245,_244);
			_avx62=_mm256_set_pd(_251,_250,_249,_248);
			_avx63=_mm256_set_pd(_255,_254,_253,_252);
			_avx64=_mm256_set_pd(_259,_258,_257,_256);
			_avx65=_mm256_set_pd(_263,_262,_261,_260);
			_avx66=_mm256_set_pd(_267,_266,_265,_264);
			_avx67=_mm256_set_pd(_271,_270,_269,_268);
			_avx68=_mm256_set_pd(_275,_274,_273,_272);
			_avx69=_mm256_set_pd(_279,_278,_277,_276);
			_avx70=_mm256_set_pd(_283,_282,_281,_280);
			_avx71=_mm256_set_pd(_287,_286,_285,_284);
			_avx72=_mm256_set_pd(_291,_290,_289,_288);
			_avx73=_mm256_set_pd(_295,_294,_293,_292);
			_avx74=_mm256_set_pd(_299,_298,_297,_296);
			_avx75=_mm256_set_pd(_303,_302,_301,_300);
			_avx76=_mm256_set_pd(_307,_306,_305,_304);
			_avx77=_mm256_set_pd(_311,_310,_309,_308);
			_avx78=_mm256_set_pd(_315,_314,_313,_312);
			_avx79=_mm256_set_pd(_319,_318,_317,_316);
			_avx80=_mm256_set_pd(_323,_322,_321,_320);
			_avx81=_mm256_set_pd(_327,_326,_325,_324);
			_avx82=_mm256_set_pd(_331,_330,_329,_328);
			_avx83=_mm256_set_pd(_335,_334,_333,_332);
			_avx84=_mm256_set_pd(_339,_338,_337,_336);
			_avx85=_mm256_set_pd(_343,_342,_341,_340);
			_avx86=_mm256_set_pd(_347,_346,_345,_344);
			_avx87=_mm256_set_pd(_351,_350,_349,_348);
			_avx88=_mm256_set_pd(_355,_354,_353,_352);
			_avx89=_mm256_set_pd(_359,_358,_357,_356);
			_avx90=_mm256_set_pd(_363,_362,_361,_360);
			_avx91=_mm256_set_pd(_367,_366,_365,_364);
			_avx92=_mm256_set_pd(_371,_370,_369,_368);
			_avx93=_mm256_set_pd(_375,_374,_373,_372);
			_avx94=_mm256_set_pd(_379,_378,_377,_376);
			_avx95=_mm256_set_pd(_383,_382,_381,_380);
			_avx96=_mm256_set_pd(_387,_386,_385,_384);
			_avx97=_mm256_set_pd(_391,_390,_389,_388);
			_avx98=_mm256_set_pd(_395,_394,_393,_392);
			_avx99=_mm256_set_pd(_399,_398,_397,_396);
			_avx100=_mm256_set_pd(_403,_402,_401,_400);
			_avx101=_mm256_set_pd(_407,_406,_405,_404);
			_avx102=_mm256_set_pd(_411,_410,_409,_408);
			_avx103=_mm256_set_pd(_415,_414,_413,_412);
			_avx104=_mm256_set_pd(_419,_418,_417,_416);
			_avx105=_mm256_set_pd(_423,_422,_421,_420);
			_avx106=_mm256_set_pd(_427,_426,_425,_424);
			_avx107=_mm256_set_pd(_431,_430,_429,_428);
			_avx108=_mm256_set_pd(_435,_434,_433,_432);
			_avx109=_mm256_set_pd(_439,_438,_437,_436);
			_avx110=_mm256_set_pd(_443,_442,_441,_440);
			_avx111=_mm256_set_pd(_447,_446,_445,_444);
			_avx112=_mm256_set_pd(_451,_450,_449,_448);
			_avx113=_mm256_set_pd(_455,_454,_453,_452);
			_avx114=_mm256_set_pd(_459,_458,_457,_456);
			_avx115=_mm256_set_pd(_463,_462,_461,_460);
			_avx116=_mm256_set_pd(_467,_466,_465,_464);
			_avx117=_mm256_set_pd(_471,_470,_469,_468);
			_avx118=_mm256_set_pd( 0,0,0,_472);
		}

		VectorSIMD473(__m256d _0,__m256d _1,__m256d _2,__m256d _3,__m256d _4,__m256d _5,__m256d _6,__m256d _7,__m256d _8,__m256d _9,__m256d _10,__m256d _11,__m256d _12,__m256d _13,__m256d _14,__m256d _15,__m256d _16,__m256d _17,__m256d _18,__m256d _19,__m256d _20,__m256d _21,__m256d _22,__m256d _23,__m256d _24,__m256d _25,__m256d _26,__m256d _27,__m256d _28,__m256d _29,__m256d _30,__m256d _31,__m256d _32,__m256d _33,__m256d _34,__m256d _35,__m256d _36,__m256d _37,__m256d _38,__m256d _39,__m256d _40,__m256d _41,__m256d _42,__m256d _43,__m256d _44,__m256d _45,__m256d _46,__m256d _47,__m256d _48,__m256d _49,__m256d _50,__m256d _51,__m256d _52,__m256d _53,__m256d _54,__m256d _55,__m256d _56,__m256d _57,__m256d _58,__m256d _59,__m256d _60,__m256d _61,__m256d _62,__m256d _63,__m256d _64,__m256d _65,__m256d _66,__m256d _67,__m256d _68,__m256d _69,__m256d _70,__m256d _71,__m256d _72,__m256d _73,__m256d _74,__m256d _75,__m256d _76,__m256d _77,__m256d _78,__m256d _79,__m256d _80,__m256d _81,__m256d _82,__m256d _83,__m256d _84,__m256d _85,__m256d _86,__m256d _87,__m256d _88,__m256d _89,__m256d _90,__m256d _91,__m256d _92,__m256d _93,__m256d _94,__m256d _95,__m256d _96,__m256d _97,__m256d _98,__m256d _99,__m256d _100,__m256d _101,__m256d _102,__m256d _103,__m256d _104,__m256d _105,__m256d _106,__m256d _107,__m256d _108,__m256d _109,__m256d _110,__m256d _111,__m256d _112,__m256d _113,__m256d _114,__m256d _115,__m256d _116,__m256d _117,__m256d _118){
			_avx0= _0;
			_avx1= _1;
			_avx2= _2;
			_avx3= _3;
			_avx4= _4;
			_avx5= _5;
			_avx6= _6;
			_avx7= _7;
			_avx8= _8;
			_avx9= _9;
			_avx10= _10;
			_avx11= _11;
			_avx12= _12;
			_avx13= _13;
			_avx14= _14;
			_avx15= _15;
			_avx16= _16;
			_avx17= _17;
			_avx18= _18;
			_avx19= _19;
			_avx20= _20;
			_avx21= _21;
			_avx22= _22;
			_avx23= _23;
			_avx24= _24;
			_avx25= _25;
			_avx26= _26;
			_avx27= _27;
			_avx28= _28;
			_avx29= _29;
			_avx30= _30;
			_avx31= _31;
			_avx32= _32;
			_avx33= _33;
			_avx34= _34;
			_avx35= _35;
			_avx36= _36;
			_avx37= _37;
			_avx38= _38;
			_avx39= _39;
			_avx40= _40;
			_avx41= _41;
			_avx42= _42;
			_avx43= _43;
			_avx44= _44;
			_avx45= _45;
			_avx46= _46;
			_avx47= _47;
			_avx48= _48;
			_avx49= _49;
			_avx50= _50;
			_avx51= _51;
			_avx52= _52;
			_avx53= _53;
			_avx54= _54;
			_avx55= _55;
			_avx56= _56;
			_avx57= _57;
			_avx58= _58;
			_avx59= _59;
			_avx60= _60;
			_avx61= _61;
			_avx62= _62;
			_avx63= _63;
			_avx64= _64;
			_avx65= _65;
			_avx66= _66;
			_avx67= _67;
			_avx68= _68;
			_avx69= _69;
			_avx70= _70;
			_avx71= _71;
			_avx72= _72;
			_avx73= _73;
			_avx74= _74;
			_avx75= _75;
			_avx76= _76;
			_avx77= _77;
			_avx78= _78;
			_avx79= _79;
			_avx80= _80;
			_avx81= _81;
			_avx82= _82;
			_avx83= _83;
			_avx84= _84;
			_avx85= _85;
			_avx86= _86;
			_avx87= _87;
			_avx88= _88;
			_avx89= _89;
			_avx90= _90;
			_avx91= _91;
			_avx92= _92;
			_avx93= _93;
			_avx94= _94;
			_avx95= _95;
			_avx96= _96;
			_avx97= _97;
			_avx98= _98;
			_avx99= _99;
			_avx100= _100;
			_avx101= _101;
			_avx102= _102;
			_avx103= _103;
			_avx104= _104;
			_avx105= _105;
			_avx106= _106;
			_avx107= _107;
			_avx108= _108;
			_avx109= _109;
			_avx110= _110;
			_avx111= _111;
			_avx112= _112;
			_avx113= _113;
			_avx114= _114;
			_avx115= _115;
			_avx116= _116;
			_avx117= _117;
			_avx118= _118;
		}

		VectorSIMD473& operator=(double a){
			_avx0 = _mm256_set_pd(a,a,a,a);
			_avx1 = _mm256_set_pd(a,a,a,a);
			_avx2 = _mm256_set_pd(a,a,a,a);
			_avx3 = _mm256_set_pd(a,a,a,a);
			_avx4 = _mm256_set_pd(a,a,a,a);
			_avx5 = _mm256_set_pd(a,a,a,a);
			_avx6 = _mm256_set_pd(a,a,a,a);
			_avx7 = _mm256_set_pd(a,a,a,a);
			_avx8 = _mm256_set_pd(a,a,a,a);
			_avx9 = _mm256_set_pd(a,a,a,a);
			_avx10 = _mm256_set_pd(a,a,a,a);
			_avx11 = _mm256_set_pd(a,a,a,a);
			_avx12 = _mm256_set_pd(a,a,a,a);
			_avx13 = _mm256_set_pd(a,a,a,a);
			_avx14 = _mm256_set_pd(a,a,a,a);
			_avx15 = _mm256_set_pd(a,a,a,a);
			_avx16 = _mm256_set_pd(a,a,a,a);
			_avx17 = _mm256_set_pd(a,a,a,a);
			_avx18 = _mm256_set_pd(a,a,a,a);
			_avx19 = _mm256_set_pd(a,a,a,a);
			_avx20 = _mm256_set_pd(a,a,a,a);
			_avx21 = _mm256_set_pd(a,a,a,a);
			_avx22 = _mm256_set_pd(a,a,a,a);
			_avx23 = _mm256_set_pd(a,a,a,a);
			_avx24 = _mm256_set_pd(a,a,a,a);
			_avx25 = _mm256_set_pd(a,a,a,a);
			_avx26 = _mm256_set_pd(a,a,a,a);
			_avx27 = _mm256_set_pd(a,a,a,a);
			_avx28 = _mm256_set_pd(a,a,a,a);
			_avx29 = _mm256_set_pd(a,a,a,a);
			_avx30 = _mm256_set_pd(a,a,a,a);
			_avx31 = _mm256_set_pd(a,a,a,a);
			_avx32 = _mm256_set_pd(a,a,a,a);
			_avx33 = _mm256_set_pd(a,a,a,a);
			_avx34 = _mm256_set_pd(a,a,a,a);
			_avx35 = _mm256_set_pd(a,a,a,a);
			_avx36 = _mm256_set_pd(a,a,a,a);
			_avx37 = _mm256_set_pd(a,a,a,a);
			_avx38 = _mm256_set_pd(a,a,a,a);
			_avx39 = _mm256_set_pd(a,a,a,a);
			_avx40 = _mm256_set_pd(a,a,a,a);
			_avx41 = _mm256_set_pd(a,a,a,a);
			_avx42 = _mm256_set_pd(a,a,a,a);
			_avx43 = _mm256_set_pd(a,a,a,a);
			_avx44 = _mm256_set_pd(a,a,a,a);
			_avx45 = _mm256_set_pd(a,a,a,a);
			_avx46 = _mm256_set_pd(a,a,a,a);
			_avx47 = _mm256_set_pd(a,a,a,a);
			_avx48 = _mm256_set_pd(a,a,a,a);
			_avx49 = _mm256_set_pd(a,a,a,a);
			_avx50 = _mm256_set_pd(a,a,a,a);
			_avx51 = _mm256_set_pd(a,a,a,a);
			_avx52 = _mm256_set_pd(a,a,a,a);
			_avx53 = _mm256_set_pd(a,a,a,a);
			_avx54 = _mm256_set_pd(a,a,a,a);
			_avx55 = _mm256_set_pd(a,a,a,a);
			_avx56 = _mm256_set_pd(a,a,a,a);
			_avx57 = _mm256_set_pd(a,a,a,a);
			_avx58 = _mm256_set_pd(a,a,a,a);
			_avx59 = _mm256_set_pd(a,a,a,a);
			_avx60 = _mm256_set_pd(a,a,a,a);
			_avx61 = _mm256_set_pd(a,a,a,a);
			_avx62 = _mm256_set_pd(a,a,a,a);
			_avx63 = _mm256_set_pd(a,a,a,a);
			_avx64 = _mm256_set_pd(a,a,a,a);
			_avx65 = _mm256_set_pd(a,a,a,a);
			_avx66 = _mm256_set_pd(a,a,a,a);
			_avx67 = _mm256_set_pd(a,a,a,a);
			_avx68 = _mm256_set_pd(a,a,a,a);
			_avx69 = _mm256_set_pd(a,a,a,a);
			_avx70 = _mm256_set_pd(a,a,a,a);
			_avx71 = _mm256_set_pd(a,a,a,a);
			_avx72 = _mm256_set_pd(a,a,a,a);
			_avx73 = _mm256_set_pd(a,a,a,a);
			_avx74 = _mm256_set_pd(a,a,a,a);
			_avx75 = _mm256_set_pd(a,a,a,a);
			_avx76 = _mm256_set_pd(a,a,a,a);
			_avx77 = _mm256_set_pd(a,a,a,a);
			_avx78 = _mm256_set_pd(a,a,a,a);
			_avx79 = _mm256_set_pd(a,a,a,a);
			_avx80 = _mm256_set_pd(a,a,a,a);
			_avx81 = _mm256_set_pd(a,a,a,a);
			_avx82 = _mm256_set_pd(a,a,a,a);
			_avx83 = _mm256_set_pd(a,a,a,a);
			_avx84 = _mm256_set_pd(a,a,a,a);
			_avx85 = _mm256_set_pd(a,a,a,a);
			_avx86 = _mm256_set_pd(a,a,a,a);
			_avx87 = _mm256_set_pd(a,a,a,a);
			_avx88 = _mm256_set_pd(a,a,a,a);
			_avx89 = _mm256_set_pd(a,a,a,a);
			_avx90 = _mm256_set_pd(a,a,a,a);
			_avx91 = _mm256_set_pd(a,a,a,a);
			_avx92 = _mm256_set_pd(a,a,a,a);
			_avx93 = _mm256_set_pd(a,a,a,a);
			_avx94 = _mm256_set_pd(a,a,a,a);
			_avx95 = _mm256_set_pd(a,a,a,a);
			_avx96 = _mm256_set_pd(a,a,a,a);
			_avx97 = _mm256_set_pd(a,a,a,a);
			_avx98 = _mm256_set_pd(a,a,a,a);
			_avx99 = _mm256_set_pd(a,a,a,a);
			_avx100 = _mm256_set_pd(a,a,a,a);
			_avx101 = _mm256_set_pd(a,a,a,a);
			_avx102 = _mm256_set_pd(a,a,a,a);
			_avx103 = _mm256_set_pd(a,a,a,a);
			_avx104 = _mm256_set_pd(a,a,a,a);
			_avx105 = _mm256_set_pd(a,a,a,a);
			_avx106 = _mm256_set_pd(a,a,a,a);
			_avx107 = _mm256_set_pd(a,a,a,a);
			_avx108 = _mm256_set_pd(a,a,a,a);
			_avx109 = _mm256_set_pd(a,a,a,a);
			_avx110 = _mm256_set_pd(a,a,a,a);
			_avx111 = _mm256_set_pd(a,a,a,a);
			_avx112 = _mm256_set_pd(a,a,a,a);
			_avx113 = _mm256_set_pd(a,a,a,a);
			_avx114 = _mm256_set_pd(a,a,a,a);
			_avx115 = _mm256_set_pd(a,a,a,a);
			_avx116 = _mm256_set_pd(a,a,a,a);
			_avx117 = _mm256_set_pd(a,a,a,a);
			_avx118 = _mm256_set_pd(0,0,0,a);
			return *this;
		}

		VectorSIMD473& operator += (VectorSIMD473 a){
			_avx0=  _mm256_add_pd(_avx0,a._avx0);
			_avx1=  _mm256_add_pd(_avx1,a._avx1);
			_avx2=  _mm256_add_pd(_avx2,a._avx2);
			_avx3=  _mm256_add_pd(_avx3,a._avx3);
			_avx4=  _mm256_add_pd(_avx4,a._avx4);
			_avx5=  _mm256_add_pd(_avx5,a._avx5);
			_avx6=  _mm256_add_pd(_avx6,a._avx6);
			_avx7=  _mm256_add_pd(_avx7,a._avx7);
			_avx8=  _mm256_add_pd(_avx8,a._avx8);
			_avx9=  _mm256_add_pd(_avx9,a._avx9);
			_avx10=  _mm256_add_pd(_avx10,a._avx10);
			_avx11=  _mm256_add_pd(_avx11,a._avx11);
			_avx12=  _mm256_add_pd(_avx12,a._avx12);
			_avx13=  _mm256_add_pd(_avx13,a._avx13);
			_avx14=  _mm256_add_pd(_avx14,a._avx14);
			_avx15=  _mm256_add_pd(_avx15,a._avx15);
			_avx16=  _mm256_add_pd(_avx16,a._avx16);
			_avx17=  _mm256_add_pd(_avx17,a._avx17);
			_avx18=  _mm256_add_pd(_avx18,a._avx18);
			_avx19=  _mm256_add_pd(_avx19,a._avx19);
			_avx20=  _mm256_add_pd(_avx20,a._avx20);
			_avx21=  _mm256_add_pd(_avx21,a._avx21);
			_avx22=  _mm256_add_pd(_avx22,a._avx22);
			_avx23=  _mm256_add_pd(_avx23,a._avx23);
			_avx24=  _mm256_add_pd(_avx24,a._avx24);
			_avx25=  _mm256_add_pd(_avx25,a._avx25);
			_avx26=  _mm256_add_pd(_avx26,a._avx26);
			_avx27=  _mm256_add_pd(_avx27,a._avx27);
			_avx28=  _mm256_add_pd(_avx28,a._avx28);
			_avx29=  _mm256_add_pd(_avx29,a._avx29);
			_avx30=  _mm256_add_pd(_avx30,a._avx30);
			_avx31=  _mm256_add_pd(_avx31,a._avx31);
			_avx32=  _mm256_add_pd(_avx32,a._avx32);
			_avx33=  _mm256_add_pd(_avx33,a._avx33);
			_avx34=  _mm256_add_pd(_avx34,a._avx34);
			_avx35=  _mm256_add_pd(_avx35,a._avx35);
			_avx36=  _mm256_add_pd(_avx36,a._avx36);
			_avx37=  _mm256_add_pd(_avx37,a._avx37);
			_avx38=  _mm256_add_pd(_avx38,a._avx38);
			_avx39=  _mm256_add_pd(_avx39,a._avx39);
			_avx40=  _mm256_add_pd(_avx40,a._avx40);
			_avx41=  _mm256_add_pd(_avx41,a._avx41);
			_avx42=  _mm256_add_pd(_avx42,a._avx42);
			_avx43=  _mm256_add_pd(_avx43,a._avx43);
			_avx44=  _mm256_add_pd(_avx44,a._avx44);
			_avx45=  _mm256_add_pd(_avx45,a._avx45);
			_avx46=  _mm256_add_pd(_avx46,a._avx46);
			_avx47=  _mm256_add_pd(_avx47,a._avx47);
			_avx48=  _mm256_add_pd(_avx48,a._avx48);
			_avx49=  _mm256_add_pd(_avx49,a._avx49);
			_avx50=  _mm256_add_pd(_avx50,a._avx50);
			_avx51=  _mm256_add_pd(_avx51,a._avx51);
			_avx52=  _mm256_add_pd(_avx52,a._avx52);
			_avx53=  _mm256_add_pd(_avx53,a._avx53);
			_avx54=  _mm256_add_pd(_avx54,a._avx54);
			_avx55=  _mm256_add_pd(_avx55,a._avx55);
			_avx56=  _mm256_add_pd(_avx56,a._avx56);
			_avx57=  _mm256_add_pd(_avx57,a._avx57);
			_avx58=  _mm256_add_pd(_avx58,a._avx58);
			_avx59=  _mm256_add_pd(_avx59,a._avx59);
			_avx60=  _mm256_add_pd(_avx60,a._avx60);
			_avx61=  _mm256_add_pd(_avx61,a._avx61);
			_avx62=  _mm256_add_pd(_avx62,a._avx62);
			_avx63=  _mm256_add_pd(_avx63,a._avx63);
			_avx64=  _mm256_add_pd(_avx64,a._avx64);
			_avx65=  _mm256_add_pd(_avx65,a._avx65);
			_avx66=  _mm256_add_pd(_avx66,a._avx66);
			_avx67=  _mm256_add_pd(_avx67,a._avx67);
			_avx68=  _mm256_add_pd(_avx68,a._avx68);
			_avx69=  _mm256_add_pd(_avx69,a._avx69);
			_avx70=  _mm256_add_pd(_avx70,a._avx70);
			_avx71=  _mm256_add_pd(_avx71,a._avx71);
			_avx72=  _mm256_add_pd(_avx72,a._avx72);
			_avx73=  _mm256_add_pd(_avx73,a._avx73);
			_avx74=  _mm256_add_pd(_avx74,a._avx74);
			_avx75=  _mm256_add_pd(_avx75,a._avx75);
			_avx76=  _mm256_add_pd(_avx76,a._avx76);
			_avx77=  _mm256_add_pd(_avx77,a._avx77);
			_avx78=  _mm256_add_pd(_avx78,a._avx78);
			_avx79=  _mm256_add_pd(_avx79,a._avx79);
			_avx80=  _mm256_add_pd(_avx80,a._avx80);
			_avx81=  _mm256_add_pd(_avx81,a._avx81);
			_avx82=  _mm256_add_pd(_avx82,a._avx82);
			_avx83=  _mm256_add_pd(_avx83,a._avx83);
			_avx84=  _mm256_add_pd(_avx84,a._avx84);
			_avx85=  _mm256_add_pd(_avx85,a._avx85);
			_avx86=  _mm256_add_pd(_avx86,a._avx86);
			_avx87=  _mm256_add_pd(_avx87,a._avx87);
			_avx88=  _mm256_add_pd(_avx88,a._avx88);
			_avx89=  _mm256_add_pd(_avx89,a._avx89);
			_avx90=  _mm256_add_pd(_avx90,a._avx90);
			_avx91=  _mm256_add_pd(_avx91,a._avx91);
			_avx92=  _mm256_add_pd(_avx92,a._avx92);
			_avx93=  _mm256_add_pd(_avx93,a._avx93);
			_avx94=  _mm256_add_pd(_avx94,a._avx94);
			_avx95=  _mm256_add_pd(_avx95,a._avx95);
			_avx96=  _mm256_add_pd(_avx96,a._avx96);
			_avx97=  _mm256_add_pd(_avx97,a._avx97);
			_avx98=  _mm256_add_pd(_avx98,a._avx98);
			_avx99=  _mm256_add_pd(_avx99,a._avx99);
			_avx100=  _mm256_add_pd(_avx100,a._avx100);
			_avx101=  _mm256_add_pd(_avx101,a._avx101);
			_avx102=  _mm256_add_pd(_avx102,a._avx102);
			_avx103=  _mm256_add_pd(_avx103,a._avx103);
			_avx104=  _mm256_add_pd(_avx104,a._avx104);
			_avx105=  _mm256_add_pd(_avx105,a._avx105);
			_avx106=  _mm256_add_pd(_avx106,a._avx106);
			_avx107=  _mm256_add_pd(_avx107,a._avx107);
			_avx108=  _mm256_add_pd(_avx108,a._avx108);
			_avx109=  _mm256_add_pd(_avx109,a._avx109);
			_avx110=  _mm256_add_pd(_avx110,a._avx110);
			_avx111=  _mm256_add_pd(_avx111,a._avx111);
			_avx112=  _mm256_add_pd(_avx112,a._avx112);
			_avx113=  _mm256_add_pd(_avx113,a._avx113);
			_avx114=  _mm256_add_pd(_avx114,a._avx114);
			_avx115=  _mm256_add_pd(_avx115,a._avx115);
			_avx116=  _mm256_add_pd(_avx116,a._avx116);
			_avx117=  _mm256_add_pd(_avx117,a._avx117);
			_avx118=  _mm256_add_pd(_avx118,a._avx118);
			return *this;
		}

		VectorSIMD473& operator -= (VectorSIMD473 a){
			_avx0=  _mm256_sub_pd(_avx0,a._avx0);
			_avx1=  _mm256_sub_pd(_avx1,a._avx1);
			_avx2=  _mm256_sub_pd(_avx2,a._avx2);
			_avx3=  _mm256_sub_pd(_avx3,a._avx3);
			_avx4=  _mm256_sub_pd(_avx4,a._avx4);
			_avx5=  _mm256_sub_pd(_avx5,a._avx5);
			_avx6=  _mm256_sub_pd(_avx6,a._avx6);
			_avx7=  _mm256_sub_pd(_avx7,a._avx7);
			_avx8=  _mm256_sub_pd(_avx8,a._avx8);
			_avx9=  _mm256_sub_pd(_avx9,a._avx9);
			_avx10=  _mm256_sub_pd(_avx10,a._avx10);
			_avx11=  _mm256_sub_pd(_avx11,a._avx11);
			_avx12=  _mm256_sub_pd(_avx12,a._avx12);
			_avx13=  _mm256_sub_pd(_avx13,a._avx13);
			_avx14=  _mm256_sub_pd(_avx14,a._avx14);
			_avx15=  _mm256_sub_pd(_avx15,a._avx15);
			_avx16=  _mm256_sub_pd(_avx16,a._avx16);
			_avx17=  _mm256_sub_pd(_avx17,a._avx17);
			_avx18=  _mm256_sub_pd(_avx18,a._avx18);
			_avx19=  _mm256_sub_pd(_avx19,a._avx19);
			_avx20=  _mm256_sub_pd(_avx20,a._avx20);
			_avx21=  _mm256_sub_pd(_avx21,a._avx21);
			_avx22=  _mm256_sub_pd(_avx22,a._avx22);
			_avx23=  _mm256_sub_pd(_avx23,a._avx23);
			_avx24=  _mm256_sub_pd(_avx24,a._avx24);
			_avx25=  _mm256_sub_pd(_avx25,a._avx25);
			_avx26=  _mm256_sub_pd(_avx26,a._avx26);
			_avx27=  _mm256_sub_pd(_avx27,a._avx27);
			_avx28=  _mm256_sub_pd(_avx28,a._avx28);
			_avx29=  _mm256_sub_pd(_avx29,a._avx29);
			_avx30=  _mm256_sub_pd(_avx30,a._avx30);
			_avx31=  _mm256_sub_pd(_avx31,a._avx31);
			_avx32=  _mm256_sub_pd(_avx32,a._avx32);
			_avx33=  _mm256_sub_pd(_avx33,a._avx33);
			_avx34=  _mm256_sub_pd(_avx34,a._avx34);
			_avx35=  _mm256_sub_pd(_avx35,a._avx35);
			_avx36=  _mm256_sub_pd(_avx36,a._avx36);
			_avx37=  _mm256_sub_pd(_avx37,a._avx37);
			_avx38=  _mm256_sub_pd(_avx38,a._avx38);
			_avx39=  _mm256_sub_pd(_avx39,a._avx39);
			_avx40=  _mm256_sub_pd(_avx40,a._avx40);
			_avx41=  _mm256_sub_pd(_avx41,a._avx41);
			_avx42=  _mm256_sub_pd(_avx42,a._avx42);
			_avx43=  _mm256_sub_pd(_avx43,a._avx43);
			_avx44=  _mm256_sub_pd(_avx44,a._avx44);
			_avx45=  _mm256_sub_pd(_avx45,a._avx45);
			_avx46=  _mm256_sub_pd(_avx46,a._avx46);
			_avx47=  _mm256_sub_pd(_avx47,a._avx47);
			_avx48=  _mm256_sub_pd(_avx48,a._avx48);
			_avx49=  _mm256_sub_pd(_avx49,a._avx49);
			_avx50=  _mm256_sub_pd(_avx50,a._avx50);
			_avx51=  _mm256_sub_pd(_avx51,a._avx51);
			_avx52=  _mm256_sub_pd(_avx52,a._avx52);
			_avx53=  _mm256_sub_pd(_avx53,a._avx53);
			_avx54=  _mm256_sub_pd(_avx54,a._avx54);
			_avx55=  _mm256_sub_pd(_avx55,a._avx55);
			_avx56=  _mm256_sub_pd(_avx56,a._avx56);
			_avx57=  _mm256_sub_pd(_avx57,a._avx57);
			_avx58=  _mm256_sub_pd(_avx58,a._avx58);
			_avx59=  _mm256_sub_pd(_avx59,a._avx59);
			_avx60=  _mm256_sub_pd(_avx60,a._avx60);
			_avx61=  _mm256_sub_pd(_avx61,a._avx61);
			_avx62=  _mm256_sub_pd(_avx62,a._avx62);
			_avx63=  _mm256_sub_pd(_avx63,a._avx63);
			_avx64=  _mm256_sub_pd(_avx64,a._avx64);
			_avx65=  _mm256_sub_pd(_avx65,a._avx65);
			_avx66=  _mm256_sub_pd(_avx66,a._avx66);
			_avx67=  _mm256_sub_pd(_avx67,a._avx67);
			_avx68=  _mm256_sub_pd(_avx68,a._avx68);
			_avx69=  _mm256_sub_pd(_avx69,a._avx69);
			_avx70=  _mm256_sub_pd(_avx70,a._avx70);
			_avx71=  _mm256_sub_pd(_avx71,a._avx71);
			_avx72=  _mm256_sub_pd(_avx72,a._avx72);
			_avx73=  _mm256_sub_pd(_avx73,a._avx73);
			_avx74=  _mm256_sub_pd(_avx74,a._avx74);
			_avx75=  _mm256_sub_pd(_avx75,a._avx75);
			_avx76=  _mm256_sub_pd(_avx76,a._avx76);
			_avx77=  _mm256_sub_pd(_avx77,a._avx77);
			_avx78=  _mm256_sub_pd(_avx78,a._avx78);
			_avx79=  _mm256_sub_pd(_avx79,a._avx79);
			_avx80=  _mm256_sub_pd(_avx80,a._avx80);
			_avx81=  _mm256_sub_pd(_avx81,a._avx81);
			_avx82=  _mm256_sub_pd(_avx82,a._avx82);
			_avx83=  _mm256_sub_pd(_avx83,a._avx83);
			_avx84=  _mm256_sub_pd(_avx84,a._avx84);
			_avx85=  _mm256_sub_pd(_avx85,a._avx85);
			_avx86=  _mm256_sub_pd(_avx86,a._avx86);
			_avx87=  _mm256_sub_pd(_avx87,a._avx87);
			_avx88=  _mm256_sub_pd(_avx88,a._avx88);
			_avx89=  _mm256_sub_pd(_avx89,a._avx89);
			_avx90=  _mm256_sub_pd(_avx90,a._avx90);
			_avx91=  _mm256_sub_pd(_avx91,a._avx91);
			_avx92=  _mm256_sub_pd(_avx92,a._avx92);
			_avx93=  _mm256_sub_pd(_avx93,a._avx93);
			_avx94=  _mm256_sub_pd(_avx94,a._avx94);
			_avx95=  _mm256_sub_pd(_avx95,a._avx95);
			_avx96=  _mm256_sub_pd(_avx96,a._avx96);
			_avx97=  _mm256_sub_pd(_avx97,a._avx97);
			_avx98=  _mm256_sub_pd(_avx98,a._avx98);
			_avx99=  _mm256_sub_pd(_avx99,a._avx99);
			_avx100=  _mm256_sub_pd(_avx100,a._avx100);
			_avx101=  _mm256_sub_pd(_avx101,a._avx101);
			_avx102=  _mm256_sub_pd(_avx102,a._avx102);
			_avx103=  _mm256_sub_pd(_avx103,a._avx103);
			_avx104=  _mm256_sub_pd(_avx104,a._avx104);
			_avx105=  _mm256_sub_pd(_avx105,a._avx105);
			_avx106=  _mm256_sub_pd(_avx106,a._avx106);
			_avx107=  _mm256_sub_pd(_avx107,a._avx107);
			_avx108=  _mm256_sub_pd(_avx108,a._avx108);
			_avx109=  _mm256_sub_pd(_avx109,a._avx109);
			_avx110=  _mm256_sub_pd(_avx110,a._avx110);
			_avx111=  _mm256_sub_pd(_avx111,a._avx111);
			_avx112=  _mm256_sub_pd(_avx112,a._avx112);
			_avx113=  _mm256_sub_pd(_avx113,a._avx113);
			_avx114=  _mm256_sub_pd(_avx114,a._avx114);
			_avx115=  _mm256_sub_pd(_avx115,a._avx115);
			_avx116=  _mm256_sub_pd(_avx116,a._avx116);
			_avx117=  _mm256_sub_pd(_avx117,a._avx117);
			_avx118=  _mm256_sub_pd(_avx118,a._avx118);
			return *this;
		}

		VectorSIMD473 operator -() const{
			const static __m256d m1 = _mm256_set_pd(-1.0,-1.0,-1.0,-1.0);
			VectorSIMD473 result;
			result._avx0=  _mm256_mul_pd(this->_avx0,m1);
			result._avx1=  _mm256_mul_pd(this->_avx1,m1);
			result._avx2=  _mm256_mul_pd(this->_avx2,m1);
			result._avx3=  _mm256_mul_pd(this->_avx3,m1);
			result._avx4=  _mm256_mul_pd(this->_avx4,m1);
			result._avx5=  _mm256_mul_pd(this->_avx5,m1);
			result._avx6=  _mm256_mul_pd(this->_avx6,m1);
			result._avx7=  _mm256_mul_pd(this->_avx7,m1);
			result._avx8=  _mm256_mul_pd(this->_avx8,m1);
			result._avx9=  _mm256_mul_pd(this->_avx9,m1);
			result._avx10=  _mm256_mul_pd(this->_avx10,m1);
			result._avx11=  _mm256_mul_pd(this->_avx11,m1);
			result._avx12=  _mm256_mul_pd(this->_avx12,m1);
			result._avx13=  _mm256_mul_pd(this->_avx13,m1);
			result._avx14=  _mm256_mul_pd(this->_avx14,m1);
			result._avx15=  _mm256_mul_pd(this->_avx15,m1);
			result._avx16=  _mm256_mul_pd(this->_avx16,m1);
			result._avx17=  _mm256_mul_pd(this->_avx17,m1);
			result._avx18=  _mm256_mul_pd(this->_avx18,m1);
			result._avx19=  _mm256_mul_pd(this->_avx19,m1);
			result._avx20=  _mm256_mul_pd(this->_avx20,m1);
			result._avx21=  _mm256_mul_pd(this->_avx21,m1);
			result._avx22=  _mm256_mul_pd(this->_avx22,m1);
			result._avx23=  _mm256_mul_pd(this->_avx23,m1);
			result._avx24=  _mm256_mul_pd(this->_avx24,m1);
			result._avx25=  _mm256_mul_pd(this->_avx25,m1);
			result._avx26=  _mm256_mul_pd(this->_avx26,m1);
			result._avx27=  _mm256_mul_pd(this->_avx27,m1);
			result._avx28=  _mm256_mul_pd(this->_avx28,m1);
			result._avx29=  _mm256_mul_pd(this->_avx29,m1);
			result._avx30=  _mm256_mul_pd(this->_avx30,m1);
			result._avx31=  _mm256_mul_pd(this->_avx31,m1);
			result._avx32=  _mm256_mul_pd(this->_avx32,m1);
			result._avx33=  _mm256_mul_pd(this->_avx33,m1);
			result._avx34=  _mm256_mul_pd(this->_avx34,m1);
			result._avx35=  _mm256_mul_pd(this->_avx35,m1);
			result._avx36=  _mm256_mul_pd(this->_avx36,m1);
			result._avx37=  _mm256_mul_pd(this->_avx37,m1);
			result._avx38=  _mm256_mul_pd(this->_avx38,m1);
			result._avx39=  _mm256_mul_pd(this->_avx39,m1);
			result._avx40=  _mm256_mul_pd(this->_avx40,m1);
			result._avx41=  _mm256_mul_pd(this->_avx41,m1);
			result._avx42=  _mm256_mul_pd(this->_avx42,m1);
			result._avx43=  _mm256_mul_pd(this->_avx43,m1);
			result._avx44=  _mm256_mul_pd(this->_avx44,m1);
			result._avx45=  _mm256_mul_pd(this->_avx45,m1);
			result._avx46=  _mm256_mul_pd(this->_avx46,m1);
			result._avx47=  _mm256_mul_pd(this->_avx47,m1);
			result._avx48=  _mm256_mul_pd(this->_avx48,m1);
			result._avx49=  _mm256_mul_pd(this->_avx49,m1);
			result._avx50=  _mm256_mul_pd(this->_avx50,m1);
			result._avx51=  _mm256_mul_pd(this->_avx51,m1);
			result._avx52=  _mm256_mul_pd(this->_avx52,m1);
			result._avx53=  _mm256_mul_pd(this->_avx53,m1);
			result._avx54=  _mm256_mul_pd(this->_avx54,m1);
			result._avx55=  _mm256_mul_pd(this->_avx55,m1);
			result._avx56=  _mm256_mul_pd(this->_avx56,m1);
			result._avx57=  _mm256_mul_pd(this->_avx57,m1);
			result._avx58=  _mm256_mul_pd(this->_avx58,m1);
			result._avx59=  _mm256_mul_pd(this->_avx59,m1);
			result._avx60=  _mm256_mul_pd(this->_avx60,m1);
			result._avx61=  _mm256_mul_pd(this->_avx61,m1);
			result._avx62=  _mm256_mul_pd(this->_avx62,m1);
			result._avx63=  _mm256_mul_pd(this->_avx63,m1);
			result._avx64=  _mm256_mul_pd(this->_avx64,m1);
			result._avx65=  _mm256_mul_pd(this->_avx65,m1);
			result._avx66=  _mm256_mul_pd(this->_avx66,m1);
			result._avx67=  _mm256_mul_pd(this->_avx67,m1);
			result._avx68=  _mm256_mul_pd(this->_avx68,m1);
			result._avx69=  _mm256_mul_pd(this->_avx69,m1);
			result._avx70=  _mm256_mul_pd(this->_avx70,m1);
			result._avx71=  _mm256_mul_pd(this->_avx71,m1);
			result._avx72=  _mm256_mul_pd(this->_avx72,m1);
			result._avx73=  _mm256_mul_pd(this->_avx73,m1);
			result._avx74=  _mm256_mul_pd(this->_avx74,m1);
			result._avx75=  _mm256_mul_pd(this->_avx75,m1);
			result._avx76=  _mm256_mul_pd(this->_avx76,m1);
			result._avx77=  _mm256_mul_pd(this->_avx77,m1);
			result._avx78=  _mm256_mul_pd(this->_avx78,m1);
			result._avx79=  _mm256_mul_pd(this->_avx79,m1);
			result._avx80=  _mm256_mul_pd(this->_avx80,m1);
			result._avx81=  _mm256_mul_pd(this->_avx81,m1);
			result._avx82=  _mm256_mul_pd(this->_avx82,m1);
			result._avx83=  _mm256_mul_pd(this->_avx83,m1);
			result._avx84=  _mm256_mul_pd(this->_avx84,m1);
			result._avx85=  _mm256_mul_pd(this->_avx85,m1);
			result._avx86=  _mm256_mul_pd(this->_avx86,m1);
			result._avx87=  _mm256_mul_pd(this->_avx87,m1);
			result._avx88=  _mm256_mul_pd(this->_avx88,m1);
			result._avx89=  _mm256_mul_pd(this->_avx89,m1);
			result._avx90=  _mm256_mul_pd(this->_avx90,m1);
			result._avx91=  _mm256_mul_pd(this->_avx91,m1);
			result._avx92=  _mm256_mul_pd(this->_avx92,m1);
			result._avx93=  _mm256_mul_pd(this->_avx93,m1);
			result._avx94=  _mm256_mul_pd(this->_avx94,m1);
			result._avx95=  _mm256_mul_pd(this->_avx95,m1);
			result._avx96=  _mm256_mul_pd(this->_avx96,m1);
			result._avx97=  _mm256_mul_pd(this->_avx97,m1);
			result._avx98=  _mm256_mul_pd(this->_avx98,m1);
			result._avx99=  _mm256_mul_pd(this->_avx99,m1);
			result._avx100=  _mm256_mul_pd(this->_avx100,m1);
			result._avx101=  _mm256_mul_pd(this->_avx101,m1);
			result._avx102=  _mm256_mul_pd(this->_avx102,m1);
			result._avx103=  _mm256_mul_pd(this->_avx103,m1);
			result._avx104=  _mm256_mul_pd(this->_avx104,m1);
			result._avx105=  _mm256_mul_pd(this->_avx105,m1);
			result._avx106=  _mm256_mul_pd(this->_avx106,m1);
			result._avx107=  _mm256_mul_pd(this->_avx107,m1);
			result._avx108=  _mm256_mul_pd(this->_avx108,m1);
			result._avx109=  _mm256_mul_pd(this->_avx109,m1);
			result._avx110=  _mm256_mul_pd(this->_avx110,m1);
			result._avx111=  _mm256_mul_pd(this->_avx111,m1);
			result._avx112=  _mm256_mul_pd(this->_avx112,m1);
			result._avx113=  _mm256_mul_pd(this->_avx113,m1);
			result._avx114=  _mm256_mul_pd(this->_avx114,m1);
			result._avx115=  _mm256_mul_pd(this->_avx115,m1);
			result._avx116=  _mm256_mul_pd(this->_avx116,m1);
			result._avx117=  _mm256_mul_pd(this->_avx117,m1);
			result._avx118=  _mm256_mul_pd(this->_avx118,m1);
			return result;
		}

		void load(double const* a){
			_avx0 =  _mm256_loadu_pd(&a[0]);
			_avx1 =  _mm256_loadu_pd(&a[4]);
			_avx2 =  _mm256_loadu_pd(&a[8]);
			_avx3 =  _mm256_loadu_pd(&a[12]);
			_avx4 =  _mm256_loadu_pd(&a[16]);
			_avx5 =  _mm256_loadu_pd(&a[20]);
			_avx6 =  _mm256_loadu_pd(&a[24]);
			_avx7 =  _mm256_loadu_pd(&a[28]);
			_avx8 =  _mm256_loadu_pd(&a[32]);
			_avx9 =  _mm256_loadu_pd(&a[36]);
			_avx10 =  _mm256_loadu_pd(&a[40]);
			_avx11 =  _mm256_loadu_pd(&a[44]);
			_avx12 =  _mm256_loadu_pd(&a[48]);
			_avx13 =  _mm256_loadu_pd(&a[52]);
			_avx14 =  _mm256_loadu_pd(&a[56]);
			_avx15 =  _mm256_loadu_pd(&a[60]);
			_avx16 =  _mm256_loadu_pd(&a[64]);
			_avx17 =  _mm256_loadu_pd(&a[68]);
			_avx18 =  _mm256_loadu_pd(&a[72]);
			_avx19 =  _mm256_loadu_pd(&a[76]);
			_avx20 =  _mm256_loadu_pd(&a[80]);
			_avx21 =  _mm256_loadu_pd(&a[84]);
			_avx22 =  _mm256_loadu_pd(&a[88]);
			_avx23 =  _mm256_loadu_pd(&a[92]);
			_avx24 =  _mm256_loadu_pd(&a[96]);
			_avx25 =  _mm256_loadu_pd(&a[100]);
			_avx26 =  _mm256_loadu_pd(&a[104]);
			_avx27 =  _mm256_loadu_pd(&a[108]);
			_avx28 =  _mm256_loadu_pd(&a[112]);
			_avx29 =  _mm256_loadu_pd(&a[116]);
			_avx30 =  _mm256_loadu_pd(&a[120]);
			_avx31 =  _mm256_loadu_pd(&a[124]);
			_avx32 =  _mm256_loadu_pd(&a[128]);
			_avx33 =  _mm256_loadu_pd(&a[132]);
			_avx34 =  _mm256_loadu_pd(&a[136]);
			_avx35 =  _mm256_loadu_pd(&a[140]);
			_avx36 =  _mm256_loadu_pd(&a[144]);
			_avx37 =  _mm256_loadu_pd(&a[148]);
			_avx38 =  _mm256_loadu_pd(&a[152]);
			_avx39 =  _mm256_loadu_pd(&a[156]);
			_avx40 =  _mm256_loadu_pd(&a[160]);
			_avx41 =  _mm256_loadu_pd(&a[164]);
			_avx42 =  _mm256_loadu_pd(&a[168]);
			_avx43 =  _mm256_loadu_pd(&a[172]);
			_avx44 =  _mm256_loadu_pd(&a[176]);
			_avx45 =  _mm256_loadu_pd(&a[180]);
			_avx46 =  _mm256_loadu_pd(&a[184]);
			_avx47 =  _mm256_loadu_pd(&a[188]);
			_avx48 =  _mm256_loadu_pd(&a[192]);
			_avx49 =  _mm256_loadu_pd(&a[196]);
			_avx50 =  _mm256_loadu_pd(&a[200]);
			_avx51 =  _mm256_loadu_pd(&a[204]);
			_avx52 =  _mm256_loadu_pd(&a[208]);
			_avx53 =  _mm256_loadu_pd(&a[212]);
			_avx54 =  _mm256_loadu_pd(&a[216]);
			_avx55 =  _mm256_loadu_pd(&a[220]);
			_avx56 =  _mm256_loadu_pd(&a[224]);
			_avx57 =  _mm256_loadu_pd(&a[228]);
			_avx58 =  _mm256_loadu_pd(&a[232]);
			_avx59 =  _mm256_loadu_pd(&a[236]);
			_avx60 =  _mm256_loadu_pd(&a[240]);
			_avx61 =  _mm256_loadu_pd(&a[244]);
			_avx62 =  _mm256_loadu_pd(&a[248]);
			_avx63 =  _mm256_loadu_pd(&a[252]);
			_avx64 =  _mm256_loadu_pd(&a[256]);
			_avx65 =  _mm256_loadu_pd(&a[260]);
			_avx66 =  _mm256_loadu_pd(&a[264]);
			_avx67 =  _mm256_loadu_pd(&a[268]);
			_avx68 =  _mm256_loadu_pd(&a[272]);
			_avx69 =  _mm256_loadu_pd(&a[276]);
			_avx70 =  _mm256_loadu_pd(&a[280]);
			_avx71 =  _mm256_loadu_pd(&a[284]);
			_avx72 =  _mm256_loadu_pd(&a[288]);
			_avx73 =  _mm256_loadu_pd(&a[292]);
			_avx74 =  _mm256_loadu_pd(&a[296]);
			_avx75 =  _mm256_loadu_pd(&a[300]);
			_avx76 =  _mm256_loadu_pd(&a[304]);
			_avx77 =  _mm256_loadu_pd(&a[308]);
			_avx78 =  _mm256_loadu_pd(&a[312]);
			_avx79 =  _mm256_loadu_pd(&a[316]);
			_avx80 =  _mm256_loadu_pd(&a[320]);
			_avx81 =  _mm256_loadu_pd(&a[324]);
			_avx82 =  _mm256_loadu_pd(&a[328]);
			_avx83 =  _mm256_loadu_pd(&a[332]);
			_avx84 =  _mm256_loadu_pd(&a[336]);
			_avx85 =  _mm256_loadu_pd(&a[340]);
			_avx86 =  _mm256_loadu_pd(&a[344]);
			_avx87 =  _mm256_loadu_pd(&a[348]);
			_avx88 =  _mm256_loadu_pd(&a[352]);
			_avx89 =  _mm256_loadu_pd(&a[356]);
			_avx90 =  _mm256_loadu_pd(&a[360]);
			_avx91 =  _mm256_loadu_pd(&a[364]);
			_avx92 =  _mm256_loadu_pd(&a[368]);
			_avx93 =  _mm256_loadu_pd(&a[372]);
			_avx94 =  _mm256_loadu_pd(&a[376]);
			_avx95 =  _mm256_loadu_pd(&a[380]);
			_avx96 =  _mm256_loadu_pd(&a[384]);
			_avx97 =  _mm256_loadu_pd(&a[388]);
			_avx98 =  _mm256_loadu_pd(&a[392]);
			_avx99 =  _mm256_loadu_pd(&a[396]);
			_avx100 =  _mm256_loadu_pd(&a[400]);
			_avx101 =  _mm256_loadu_pd(&a[404]);
			_avx102 =  _mm256_loadu_pd(&a[408]);
			_avx103 =  _mm256_loadu_pd(&a[412]);
			_avx104 =  _mm256_loadu_pd(&a[416]);
			_avx105 =  _mm256_loadu_pd(&a[420]);
			_avx106 =  _mm256_loadu_pd(&a[424]);
			_avx107 =  _mm256_loadu_pd(&a[428]);
			_avx108 =  _mm256_loadu_pd(&a[432]);
			_avx109 =  _mm256_loadu_pd(&a[436]);
			_avx110 =  _mm256_loadu_pd(&a[440]);
			_avx111 =  _mm256_loadu_pd(&a[444]);
			_avx112 =  _mm256_loadu_pd(&a[448]);
			_avx113 =  _mm256_loadu_pd(&a[452]);
			_avx114 =  _mm256_loadu_pd(&a[456]);
			_avx115 =  _mm256_loadu_pd(&a[460]);
			_avx116 =  _mm256_loadu_pd(&a[464]);
			_avx117 =  _mm256_loadu_pd(&a[468]);
			_avx118 =  _mm256_loadu_pd(&a[472]);
		}

		void load_aligned(double const* a){
			_avx0 =  _mm256_load_pd(&a[0]);
			_avx1 =  _mm256_load_pd(&a[4]);
			_avx2 =  _mm256_load_pd(&a[8]);
			_avx3 =  _mm256_load_pd(&a[12]);
			_avx4 =  _mm256_load_pd(&a[16]);
			_avx5 =  _mm256_load_pd(&a[20]);
			_avx6 =  _mm256_load_pd(&a[24]);
			_avx7 =  _mm256_load_pd(&a[28]);
			_avx8 =  _mm256_load_pd(&a[32]);
			_avx9 =  _mm256_load_pd(&a[36]);
			_avx10 =  _mm256_load_pd(&a[40]);
			_avx11 =  _mm256_load_pd(&a[44]);
			_avx12 =  _mm256_load_pd(&a[48]);
			_avx13 =  _mm256_load_pd(&a[52]);
			_avx14 =  _mm256_load_pd(&a[56]);
			_avx15 =  _mm256_load_pd(&a[60]);
			_avx16 =  _mm256_load_pd(&a[64]);
			_avx17 =  _mm256_load_pd(&a[68]);
			_avx18 =  _mm256_load_pd(&a[72]);
			_avx19 =  _mm256_load_pd(&a[76]);
			_avx20 =  _mm256_load_pd(&a[80]);
			_avx21 =  _mm256_load_pd(&a[84]);
			_avx22 =  _mm256_load_pd(&a[88]);
			_avx23 =  _mm256_load_pd(&a[92]);
			_avx24 =  _mm256_load_pd(&a[96]);
			_avx25 =  _mm256_load_pd(&a[100]);
			_avx26 =  _mm256_load_pd(&a[104]);
			_avx27 =  _mm256_load_pd(&a[108]);
			_avx28 =  _mm256_load_pd(&a[112]);
			_avx29 =  _mm256_load_pd(&a[116]);
			_avx30 =  _mm256_load_pd(&a[120]);
			_avx31 =  _mm256_load_pd(&a[124]);
			_avx32 =  _mm256_load_pd(&a[128]);
			_avx33 =  _mm256_load_pd(&a[132]);
			_avx34 =  _mm256_load_pd(&a[136]);
			_avx35 =  _mm256_load_pd(&a[140]);
			_avx36 =  _mm256_load_pd(&a[144]);
			_avx37 =  _mm256_load_pd(&a[148]);
			_avx38 =  _mm256_load_pd(&a[152]);
			_avx39 =  _mm256_load_pd(&a[156]);
			_avx40 =  _mm256_load_pd(&a[160]);
			_avx41 =  _mm256_load_pd(&a[164]);
			_avx42 =  _mm256_load_pd(&a[168]);
			_avx43 =  _mm256_load_pd(&a[172]);
			_avx44 =  _mm256_load_pd(&a[176]);
			_avx45 =  _mm256_load_pd(&a[180]);
			_avx46 =  _mm256_load_pd(&a[184]);
			_avx47 =  _mm256_load_pd(&a[188]);
			_avx48 =  _mm256_load_pd(&a[192]);
			_avx49 =  _mm256_load_pd(&a[196]);
			_avx50 =  _mm256_load_pd(&a[200]);
			_avx51 =  _mm256_load_pd(&a[204]);
			_avx52 =  _mm256_load_pd(&a[208]);
			_avx53 =  _mm256_load_pd(&a[212]);
			_avx54 =  _mm256_load_pd(&a[216]);
			_avx55 =  _mm256_load_pd(&a[220]);
			_avx56 =  _mm256_load_pd(&a[224]);
			_avx57 =  _mm256_load_pd(&a[228]);
			_avx58 =  _mm256_load_pd(&a[232]);
			_avx59 =  _mm256_load_pd(&a[236]);
			_avx60 =  _mm256_load_pd(&a[240]);
			_avx61 =  _mm256_load_pd(&a[244]);
			_avx62 =  _mm256_load_pd(&a[248]);
			_avx63 =  _mm256_load_pd(&a[252]);
			_avx64 =  _mm256_load_pd(&a[256]);
			_avx65 =  _mm256_load_pd(&a[260]);
			_avx66 =  _mm256_load_pd(&a[264]);
			_avx67 =  _mm256_load_pd(&a[268]);
			_avx68 =  _mm256_load_pd(&a[272]);
			_avx69 =  _mm256_load_pd(&a[276]);
			_avx70 =  _mm256_load_pd(&a[280]);
			_avx71 =  _mm256_load_pd(&a[284]);
			_avx72 =  _mm256_load_pd(&a[288]);
			_avx73 =  _mm256_load_pd(&a[292]);
			_avx74 =  _mm256_load_pd(&a[296]);
			_avx75 =  _mm256_load_pd(&a[300]);
			_avx76 =  _mm256_load_pd(&a[304]);
			_avx77 =  _mm256_load_pd(&a[308]);
			_avx78 =  _mm256_load_pd(&a[312]);
			_avx79 =  _mm256_load_pd(&a[316]);
			_avx80 =  _mm256_load_pd(&a[320]);
			_avx81 =  _mm256_load_pd(&a[324]);
			_avx82 =  _mm256_load_pd(&a[328]);
			_avx83 =  _mm256_load_pd(&a[332]);
			_avx84 =  _mm256_load_pd(&a[336]);
			_avx85 =  _mm256_load_pd(&a[340]);
			_avx86 =  _mm256_load_pd(&a[344]);
			_avx87 =  _mm256_load_pd(&a[348]);
			_avx88 =  _mm256_load_pd(&a[352]);
			_avx89 =  _mm256_load_pd(&a[356]);
			_avx90 =  _mm256_load_pd(&a[360]);
			_avx91 =  _mm256_load_pd(&a[364]);
			_avx92 =  _mm256_load_pd(&a[368]);
			_avx93 =  _mm256_load_pd(&a[372]);
			_avx94 =  _mm256_load_pd(&a[376]);
			_avx95 =  _mm256_load_pd(&a[380]);
			_avx96 =  _mm256_load_pd(&a[384]);
			_avx97 =  _mm256_load_pd(&a[388]);
			_avx98 =  _mm256_load_pd(&a[392]);
			_avx99 =  _mm256_load_pd(&a[396]);
			_avx100 =  _mm256_load_pd(&a[400]);
			_avx101 =  _mm256_load_pd(&a[404]);
			_avx102 =  _mm256_load_pd(&a[408]);
			_avx103 =  _mm256_load_pd(&a[412]);
			_avx104 =  _mm256_load_pd(&a[416]);
			_avx105 =  _mm256_load_pd(&a[420]);
			_avx106 =  _mm256_load_pd(&a[424]);
			_avx107 =  _mm256_load_pd(&a[428]);
			_avx108 =  _mm256_load_pd(&a[432]);
			_avx109 =  _mm256_load_pd(&a[436]);
			_avx110 =  _mm256_load_pd(&a[440]);
			_avx111 =  _mm256_load_pd(&a[444]);
			_avx112 =  _mm256_load_pd(&a[448]);
			_avx113 =  _mm256_load_pd(&a[452]);
			_avx114 =  _mm256_load_pd(&a[456]);
			_avx115 =  _mm256_load_pd(&a[460]);
			_avx116 =  _mm256_load_pd(&a[464]);
			_avx117 =  _mm256_load_pd(&a[468]);
			_avx118 =  _mm256_load_pd(&a[472]);
		}

		void convert(double *a) const {
			_mm256_storeu_pd(&a[0],_avx0);
			_mm256_storeu_pd(&a[4],_avx1);
			_mm256_storeu_pd(&a[8],_avx2);
			_mm256_storeu_pd(&a[12],_avx3);
			_mm256_storeu_pd(&a[16],_avx4);
			_mm256_storeu_pd(&a[20],_avx5);
			_mm256_storeu_pd(&a[24],_avx6);
			_mm256_storeu_pd(&a[28],_avx7);
			_mm256_storeu_pd(&a[32],_avx8);
			_mm256_storeu_pd(&a[36],_avx9);
			_mm256_storeu_pd(&a[40],_avx10);
			_mm256_storeu_pd(&a[44],_avx11);
			_mm256_storeu_pd(&a[48],_avx12);
			_mm256_storeu_pd(&a[52],_avx13);
			_mm256_storeu_pd(&a[56],_avx14);
			_mm256_storeu_pd(&a[60],_avx15);
			_mm256_storeu_pd(&a[64],_avx16);
			_mm256_storeu_pd(&a[68],_avx17);
			_mm256_storeu_pd(&a[72],_avx18);
			_mm256_storeu_pd(&a[76],_avx19);
			_mm256_storeu_pd(&a[80],_avx20);
			_mm256_storeu_pd(&a[84],_avx21);
			_mm256_storeu_pd(&a[88],_avx22);
			_mm256_storeu_pd(&a[92],_avx23);
			_mm256_storeu_pd(&a[96],_avx24);
			_mm256_storeu_pd(&a[100],_avx25);
			_mm256_storeu_pd(&a[104],_avx26);
			_mm256_storeu_pd(&a[108],_avx27);
			_mm256_storeu_pd(&a[112],_avx28);
			_mm256_storeu_pd(&a[116],_avx29);
			_mm256_storeu_pd(&a[120],_avx30);
			_mm256_storeu_pd(&a[124],_avx31);
			_mm256_storeu_pd(&a[128],_avx32);
			_mm256_storeu_pd(&a[132],_avx33);
			_mm256_storeu_pd(&a[136],_avx34);
			_mm256_storeu_pd(&a[140],_avx35);
			_mm256_storeu_pd(&a[144],_avx36);
			_mm256_storeu_pd(&a[148],_avx37);
			_mm256_storeu_pd(&a[152],_avx38);
			_mm256_storeu_pd(&a[156],_avx39);
			_mm256_storeu_pd(&a[160],_avx40);
			_mm256_storeu_pd(&a[164],_avx41);
			_mm256_storeu_pd(&a[168],_avx42);
			_mm256_storeu_pd(&a[172],_avx43);
			_mm256_storeu_pd(&a[176],_avx44);
			_mm256_storeu_pd(&a[180],_avx45);
			_mm256_storeu_pd(&a[184],_avx46);
			_mm256_storeu_pd(&a[188],_avx47);
			_mm256_storeu_pd(&a[192],_avx48);
			_mm256_storeu_pd(&a[196],_avx49);
			_mm256_storeu_pd(&a[200],_avx50);
			_mm256_storeu_pd(&a[204],_avx51);
			_mm256_storeu_pd(&a[208],_avx52);
			_mm256_storeu_pd(&a[212],_avx53);
			_mm256_storeu_pd(&a[216],_avx54);
			_mm256_storeu_pd(&a[220],_avx55);
			_mm256_storeu_pd(&a[224],_avx56);
			_mm256_storeu_pd(&a[228],_avx57);
			_mm256_storeu_pd(&a[232],_avx58);
			_mm256_storeu_pd(&a[236],_avx59);
			_mm256_storeu_pd(&a[240],_avx60);
			_mm256_storeu_pd(&a[244],_avx61);
			_mm256_storeu_pd(&a[248],_avx62);
			_mm256_storeu_pd(&a[252],_avx63);
			_mm256_storeu_pd(&a[256],_avx64);
			_mm256_storeu_pd(&a[260],_avx65);
			_mm256_storeu_pd(&a[264],_avx66);
			_mm256_storeu_pd(&a[268],_avx67);
			_mm256_storeu_pd(&a[272],_avx68);
			_mm256_storeu_pd(&a[276],_avx69);
			_mm256_storeu_pd(&a[280],_avx70);
			_mm256_storeu_pd(&a[284],_avx71);
			_mm256_storeu_pd(&a[288],_avx72);
			_mm256_storeu_pd(&a[292],_avx73);
			_mm256_storeu_pd(&a[296],_avx74);
			_mm256_storeu_pd(&a[300],_avx75);
			_mm256_storeu_pd(&a[304],_avx76);
			_mm256_storeu_pd(&a[308],_avx77);
			_mm256_storeu_pd(&a[312],_avx78);
			_mm256_storeu_pd(&a[316],_avx79);
			_mm256_storeu_pd(&a[320],_avx80);
			_mm256_storeu_pd(&a[324],_avx81);
			_mm256_storeu_pd(&a[328],_avx82);
			_mm256_storeu_pd(&a[332],_avx83);
			_mm256_storeu_pd(&a[336],_avx84);
			_mm256_storeu_pd(&a[340],_avx85);
			_mm256_storeu_pd(&a[344],_avx86);
			_mm256_storeu_pd(&a[348],_avx87);
			_mm256_storeu_pd(&a[352],_avx88);
			_mm256_storeu_pd(&a[356],_avx89);
			_mm256_storeu_pd(&a[360],_avx90);
			_mm256_storeu_pd(&a[364],_avx91);
			_mm256_storeu_pd(&a[368],_avx92);
			_mm256_storeu_pd(&a[372],_avx93);
			_mm256_storeu_pd(&a[376],_avx94);
			_mm256_storeu_pd(&a[380],_avx95);
			_mm256_storeu_pd(&a[384],_avx96);
			_mm256_storeu_pd(&a[388],_avx97);
			_mm256_storeu_pd(&a[392],_avx98);
			_mm256_storeu_pd(&a[396],_avx99);
			_mm256_storeu_pd(&a[400],_avx100);
			_mm256_storeu_pd(&a[404],_avx101);
			_mm256_storeu_pd(&a[408],_avx102);
			_mm256_storeu_pd(&a[412],_avx103);
			_mm256_storeu_pd(&a[416],_avx104);
			_mm256_storeu_pd(&a[420],_avx105);
			_mm256_storeu_pd(&a[424],_avx106);
			_mm256_storeu_pd(&a[428],_avx107);
			_mm256_storeu_pd(&a[432],_avx108);
			_mm256_storeu_pd(&a[436],_avx109);
			_mm256_storeu_pd(&a[440],_avx110);
			_mm256_storeu_pd(&a[444],_avx111);
			_mm256_storeu_pd(&a[448],_avx112);
			_mm256_storeu_pd(&a[452],_avx113);
			_mm256_storeu_pd(&a[456],_avx114);
			_mm256_storeu_pd(&a[460],_avx115);
			_mm256_storeu_pd(&a[464],_avx116);
			_mm256_storeu_pd(&a[468],_avx117);
			_mm256_storeu_pd(&a[472],_avx118);
		}

		void convert_aligned(double *a) const {
			_mm256_storeu_pd(&a[0],_avx0);
			_mm256_storeu_pd(&a[4],_avx1);
			_mm256_storeu_pd(&a[8],_avx2);
			_mm256_storeu_pd(&a[12],_avx3);
			_mm256_storeu_pd(&a[16],_avx4);
			_mm256_storeu_pd(&a[20],_avx5);
			_mm256_storeu_pd(&a[24],_avx6);
			_mm256_storeu_pd(&a[28],_avx7);
			_mm256_storeu_pd(&a[32],_avx8);
			_mm256_storeu_pd(&a[36],_avx9);
			_mm256_storeu_pd(&a[40],_avx10);
			_mm256_storeu_pd(&a[44],_avx11);
			_mm256_storeu_pd(&a[48],_avx12);
			_mm256_storeu_pd(&a[52],_avx13);
			_mm256_storeu_pd(&a[56],_avx14);
			_mm256_storeu_pd(&a[60],_avx15);
			_mm256_storeu_pd(&a[64],_avx16);
			_mm256_storeu_pd(&a[68],_avx17);
			_mm256_storeu_pd(&a[72],_avx18);
			_mm256_storeu_pd(&a[76],_avx19);
			_mm256_storeu_pd(&a[80],_avx20);
			_mm256_storeu_pd(&a[84],_avx21);
			_mm256_storeu_pd(&a[88],_avx22);
			_mm256_storeu_pd(&a[92],_avx23);
			_mm256_storeu_pd(&a[96],_avx24);
			_mm256_storeu_pd(&a[100],_avx25);
			_mm256_storeu_pd(&a[104],_avx26);
			_mm256_storeu_pd(&a[108],_avx27);
			_mm256_storeu_pd(&a[112],_avx28);
			_mm256_storeu_pd(&a[116],_avx29);
			_mm256_storeu_pd(&a[120],_avx30);
			_mm256_storeu_pd(&a[124],_avx31);
			_mm256_storeu_pd(&a[128],_avx32);
			_mm256_storeu_pd(&a[132],_avx33);
			_mm256_storeu_pd(&a[136],_avx34);
			_mm256_storeu_pd(&a[140],_avx35);
			_mm256_storeu_pd(&a[144],_avx36);
			_mm256_storeu_pd(&a[148],_avx37);
			_mm256_storeu_pd(&a[152],_avx38);
			_mm256_storeu_pd(&a[156],_avx39);
			_mm256_storeu_pd(&a[160],_avx40);
			_mm256_storeu_pd(&a[164],_avx41);
			_mm256_storeu_pd(&a[168],_avx42);
			_mm256_storeu_pd(&a[172],_avx43);
			_mm256_storeu_pd(&a[176],_avx44);
			_mm256_storeu_pd(&a[180],_avx45);
			_mm256_storeu_pd(&a[184],_avx46);
			_mm256_storeu_pd(&a[188],_avx47);
			_mm256_storeu_pd(&a[192],_avx48);
			_mm256_storeu_pd(&a[196],_avx49);
			_mm256_storeu_pd(&a[200],_avx50);
			_mm256_storeu_pd(&a[204],_avx51);
			_mm256_storeu_pd(&a[208],_avx52);
			_mm256_storeu_pd(&a[212],_avx53);
			_mm256_storeu_pd(&a[216],_avx54);
			_mm256_storeu_pd(&a[220],_avx55);
			_mm256_storeu_pd(&a[224],_avx56);
			_mm256_storeu_pd(&a[228],_avx57);
			_mm256_storeu_pd(&a[232],_avx58);
			_mm256_storeu_pd(&a[236],_avx59);
			_mm256_storeu_pd(&a[240],_avx60);
			_mm256_storeu_pd(&a[244],_avx61);
			_mm256_storeu_pd(&a[248],_avx62);
			_mm256_storeu_pd(&a[252],_avx63);
			_mm256_storeu_pd(&a[256],_avx64);
			_mm256_storeu_pd(&a[260],_avx65);
			_mm256_storeu_pd(&a[264],_avx66);
			_mm256_storeu_pd(&a[268],_avx67);
			_mm256_storeu_pd(&a[272],_avx68);
			_mm256_storeu_pd(&a[276],_avx69);
			_mm256_storeu_pd(&a[280],_avx70);
			_mm256_storeu_pd(&a[284],_avx71);
			_mm256_storeu_pd(&a[288],_avx72);
			_mm256_storeu_pd(&a[292],_avx73);
			_mm256_storeu_pd(&a[296],_avx74);
			_mm256_storeu_pd(&a[300],_avx75);
			_mm256_storeu_pd(&a[304],_avx76);
			_mm256_storeu_pd(&a[308],_avx77);
			_mm256_storeu_pd(&a[312],_avx78);
			_mm256_storeu_pd(&a[316],_avx79);
			_mm256_storeu_pd(&a[320],_avx80);
			_mm256_storeu_pd(&a[324],_avx81);
			_mm256_storeu_pd(&a[328],_avx82);
			_mm256_storeu_pd(&a[332],_avx83);
			_mm256_storeu_pd(&a[336],_avx84);
			_mm256_storeu_pd(&a[340],_avx85);
			_mm256_storeu_pd(&a[344],_avx86);
			_mm256_storeu_pd(&a[348],_avx87);
			_mm256_storeu_pd(&a[352],_avx88);
			_mm256_storeu_pd(&a[356],_avx89);
			_mm256_storeu_pd(&a[360],_avx90);
			_mm256_storeu_pd(&a[364],_avx91);
			_mm256_storeu_pd(&a[368],_avx92);
			_mm256_storeu_pd(&a[372],_avx93);
			_mm256_storeu_pd(&a[376],_avx94);
			_mm256_storeu_pd(&a[380],_avx95);
			_mm256_storeu_pd(&a[384],_avx96);
			_mm256_storeu_pd(&a[388],_avx97);
			_mm256_storeu_pd(&a[392],_avx98);
			_mm256_storeu_pd(&a[396],_avx99);
			_mm256_storeu_pd(&a[400],_avx100);
			_mm256_storeu_pd(&a[404],_avx101);
			_mm256_storeu_pd(&a[408],_avx102);
			_mm256_storeu_pd(&a[412],_avx103);
			_mm256_storeu_pd(&a[416],_avx104);
			_mm256_storeu_pd(&a[420],_avx105);
			_mm256_storeu_pd(&a[424],_avx106);
			_mm256_storeu_pd(&a[428],_avx107);
			_mm256_storeu_pd(&a[432],_avx108);
			_mm256_storeu_pd(&a[436],_avx109);
			_mm256_storeu_pd(&a[440],_avx110);
			_mm256_storeu_pd(&a[444],_avx111);
			_mm256_storeu_pd(&a[448],_avx112);
			_mm256_storeu_pd(&a[452],_avx113);
			_mm256_storeu_pd(&a[456],_avx114);
			_mm256_storeu_pd(&a[460],_avx115);
			_mm256_storeu_pd(&a[464],_avx116);
			_mm256_storeu_pd(&a[468],_avx117);
			_mm256_storeu_pd(&a[472],_avx118);
		}

	};


	inline VectorSIMD473 operator*(double a, VectorSIMD473 b){
		VectorSIMD473 c;
		__m256d _a =  _mm256_set_pd(a,a,a,a);
		c._avx0=  _mm256_mul_pd(_a, b._avx0);
		c._avx1=  _mm256_mul_pd(_a, b._avx1);
		c._avx2=  _mm256_mul_pd(_a, b._avx2);
		c._avx3=  _mm256_mul_pd(_a, b._avx3);
		c._avx4=  _mm256_mul_pd(_a, b._avx4);
		c._avx5=  _mm256_mul_pd(_a, b._avx5);
		c._avx6=  _mm256_mul_pd(_a, b._avx6);
		c._avx7=  _mm256_mul_pd(_a, b._avx7);
		c._avx8=  _mm256_mul_pd(_a, b._avx8);
		c._avx9=  _mm256_mul_pd(_a, b._avx9);
		c._avx10=  _mm256_mul_pd(_a, b._avx10);
		c._avx11=  _mm256_mul_pd(_a, b._avx11);
		c._avx12=  _mm256_mul_pd(_a, b._avx12);
		c._avx13=  _mm256_mul_pd(_a, b._avx13);
		c._avx14=  _mm256_mul_pd(_a, b._avx14);
		c._avx15=  _mm256_mul_pd(_a, b._avx15);
		c._avx16=  _mm256_mul_pd(_a, b._avx16);
		c._avx17=  _mm256_mul_pd(_a, b._avx17);
		c._avx18=  _mm256_mul_pd(_a, b._avx18);
		c._avx19=  _mm256_mul_pd(_a, b._avx19);
		c._avx20=  _mm256_mul_pd(_a, b._avx20);
		c._avx21=  _mm256_mul_pd(_a, b._avx21);
		c._avx22=  _mm256_mul_pd(_a, b._avx22);
		c._avx23=  _mm256_mul_pd(_a, b._avx23);
		c._avx24=  _mm256_mul_pd(_a, b._avx24);
		c._avx25=  _mm256_mul_pd(_a, b._avx25);
		c._avx26=  _mm256_mul_pd(_a, b._avx26);
		c._avx27=  _mm256_mul_pd(_a, b._avx27);
		c._avx28=  _mm256_mul_pd(_a, b._avx28);
		c._avx29=  _mm256_mul_pd(_a, b._avx29);
		c._avx30=  _mm256_mul_pd(_a, b._avx30);
		c._avx31=  _mm256_mul_pd(_a, b._avx31);
		c._avx32=  _mm256_mul_pd(_a, b._avx32);
		c._avx33=  _mm256_mul_pd(_a, b._avx33);
		c._avx34=  _mm256_mul_pd(_a, b._avx34);
		c._avx35=  _mm256_mul_pd(_a, b._avx35);
		c._avx36=  _mm256_mul_pd(_a, b._avx36);
		c._avx37=  _mm256_mul_pd(_a, b._avx37);
		c._avx38=  _mm256_mul_pd(_a, b._avx38);
		c._avx39=  _mm256_mul_pd(_a, b._avx39);
		c._avx40=  _mm256_mul_pd(_a, b._avx40);
		c._avx41=  _mm256_mul_pd(_a, b._avx41);
		c._avx42=  _mm256_mul_pd(_a, b._avx42);
		c._avx43=  _mm256_mul_pd(_a, b._avx43);
		c._avx44=  _mm256_mul_pd(_a, b._avx44);
		c._avx45=  _mm256_mul_pd(_a, b._avx45);
		c._avx46=  _mm256_mul_pd(_a, b._avx46);
		c._avx47=  _mm256_mul_pd(_a, b._avx47);
		c._avx48=  _mm256_mul_pd(_a, b._avx48);
		c._avx49=  _mm256_mul_pd(_a, b._avx49);
		c._avx50=  _mm256_mul_pd(_a, b._avx50);
		c._avx51=  _mm256_mul_pd(_a, b._avx51);
		c._avx52=  _mm256_mul_pd(_a, b._avx52);
		c._avx53=  _mm256_mul_pd(_a, b._avx53);
		c._avx54=  _mm256_mul_pd(_a, b._avx54);
		c._avx55=  _mm256_mul_pd(_a, b._avx55);
		c._avx56=  _mm256_mul_pd(_a, b._avx56);
		c._avx57=  _mm256_mul_pd(_a, b._avx57);
		c._avx58=  _mm256_mul_pd(_a, b._avx58);
		c._avx59=  _mm256_mul_pd(_a, b._avx59);
		c._avx60=  _mm256_mul_pd(_a, b._avx60);
		c._avx61=  _mm256_mul_pd(_a, b._avx61);
		c._avx62=  _mm256_mul_pd(_a, b._avx62);
		c._avx63=  _mm256_mul_pd(_a, b._avx63);
		c._avx64=  _mm256_mul_pd(_a, b._avx64);
		c._avx65=  _mm256_mul_pd(_a, b._avx65);
		c._avx66=  _mm256_mul_pd(_a, b._avx66);
		c._avx67=  _mm256_mul_pd(_a, b._avx67);
		c._avx68=  _mm256_mul_pd(_a, b._avx68);
		c._avx69=  _mm256_mul_pd(_a, b._avx69);
		c._avx70=  _mm256_mul_pd(_a, b._avx70);
		c._avx71=  _mm256_mul_pd(_a, b._avx71);
		c._avx72=  _mm256_mul_pd(_a, b._avx72);
		c._avx73=  _mm256_mul_pd(_a, b._avx73);
		c._avx74=  _mm256_mul_pd(_a, b._avx74);
		c._avx75=  _mm256_mul_pd(_a, b._avx75);
		c._avx76=  _mm256_mul_pd(_a, b._avx76);
		c._avx77=  _mm256_mul_pd(_a, b._avx77);
		c._avx78=  _mm256_mul_pd(_a, b._avx78);
		c._avx79=  _mm256_mul_pd(_a, b._avx79);
		c._avx80=  _mm256_mul_pd(_a, b._avx80);
		c._avx81=  _mm256_mul_pd(_a, b._avx81);
		c._avx82=  _mm256_mul_pd(_a, b._avx82);
		c._avx83=  _mm256_mul_pd(_a, b._avx83);
		c._avx84=  _mm256_mul_pd(_a, b._avx84);
		c._avx85=  _mm256_mul_pd(_a, b._avx85);
		c._avx86=  _mm256_mul_pd(_a, b._avx86);
		c._avx87=  _mm256_mul_pd(_a, b._avx87);
		c._avx88=  _mm256_mul_pd(_a, b._avx88);
		c._avx89=  _mm256_mul_pd(_a, b._avx89);
		c._avx90=  _mm256_mul_pd(_a, b._avx90);
		c._avx91=  _mm256_mul_pd(_a, b._avx91);
		c._avx92=  _mm256_mul_pd(_a, b._avx92);
		c._avx93=  _mm256_mul_pd(_a, b._avx93);
		c._avx94=  _mm256_mul_pd(_a, b._avx94);
		c._avx95=  _mm256_mul_pd(_a, b._avx95);
		c._avx96=  _mm256_mul_pd(_a, b._avx96);
		c._avx97=  _mm256_mul_pd(_a, b._avx97);
		c._avx98=  _mm256_mul_pd(_a, b._avx98);
		c._avx99=  _mm256_mul_pd(_a, b._avx99);
		c._avx100=  _mm256_mul_pd(_a, b._avx100);
		c._avx101=  _mm256_mul_pd(_a, b._avx101);
		c._avx102=  _mm256_mul_pd(_a, b._avx102);
		c._avx103=  _mm256_mul_pd(_a, b._avx103);
		c._avx104=  _mm256_mul_pd(_a, b._avx104);
		c._avx105=  _mm256_mul_pd(_a, b._avx105);
		c._avx106=  _mm256_mul_pd(_a, b._avx106);
		c._avx107=  _mm256_mul_pd(_a, b._avx107);
		c._avx108=  _mm256_mul_pd(_a, b._avx108);
		c._avx109=  _mm256_mul_pd(_a, b._avx109);
		c._avx110=  _mm256_mul_pd(_a, b._avx110);
		c._avx111=  _mm256_mul_pd(_a, b._avx111);
		c._avx112=  _mm256_mul_pd(_a, b._avx112);
		c._avx113=  _mm256_mul_pd(_a, b._avx113);
		c._avx114=  _mm256_mul_pd(_a, b._avx114);
		c._avx115=  _mm256_mul_pd(_a, b._avx115);
		c._avx116=  _mm256_mul_pd(_a, b._avx116);
		c._avx117=  _mm256_mul_pd(_a, b._avx117);
		c._avx118=  _mm256_mul_pd(_a, b._avx118);
		return c;
	}


	inline VectorSIMD473 operator*(VectorSIMD473 a ,double b){
		VectorSIMD473 c;
		__m256d _b =  _mm256_set_pd(b,b,b,b);
		c._avx0=  _mm256_mul_pd(a._avx0, _b);
		c._avx1=  _mm256_mul_pd(a._avx1, _b);
		c._avx2=  _mm256_mul_pd(a._avx2, _b);
		c._avx3=  _mm256_mul_pd(a._avx3, _b);
		c._avx4=  _mm256_mul_pd(a._avx4, _b);
		c._avx5=  _mm256_mul_pd(a._avx5, _b);
		c._avx6=  _mm256_mul_pd(a._avx6, _b);
		c._avx7=  _mm256_mul_pd(a._avx7, _b);
		c._avx8=  _mm256_mul_pd(a._avx8, _b);
		c._avx9=  _mm256_mul_pd(a._avx9, _b);
		c._avx10=  _mm256_mul_pd(a._avx10, _b);
		c._avx11=  _mm256_mul_pd(a._avx11, _b);
		c._avx12=  _mm256_mul_pd(a._avx12, _b);
		c._avx13=  _mm256_mul_pd(a._avx13, _b);
		c._avx14=  _mm256_mul_pd(a._avx14, _b);
		c._avx15=  _mm256_mul_pd(a._avx15, _b);
		c._avx16=  _mm256_mul_pd(a._avx16, _b);
		c._avx17=  _mm256_mul_pd(a._avx17, _b);
		c._avx18=  _mm256_mul_pd(a._avx18, _b);
		c._avx19=  _mm256_mul_pd(a._avx19, _b);
		c._avx20=  _mm256_mul_pd(a._avx20, _b);
		c._avx21=  _mm256_mul_pd(a._avx21, _b);
		c._avx22=  _mm256_mul_pd(a._avx22, _b);
		c._avx23=  _mm256_mul_pd(a._avx23, _b);
		c._avx24=  _mm256_mul_pd(a._avx24, _b);
		c._avx25=  _mm256_mul_pd(a._avx25, _b);
		c._avx26=  _mm256_mul_pd(a._avx26, _b);
		c._avx27=  _mm256_mul_pd(a._avx27, _b);
		c._avx28=  _mm256_mul_pd(a._avx28, _b);
		c._avx29=  _mm256_mul_pd(a._avx29, _b);
		c._avx30=  _mm256_mul_pd(a._avx30, _b);
		c._avx31=  _mm256_mul_pd(a._avx31, _b);
		c._avx32=  _mm256_mul_pd(a._avx32, _b);
		c._avx33=  _mm256_mul_pd(a._avx33, _b);
		c._avx34=  _mm256_mul_pd(a._avx34, _b);
		c._avx35=  _mm256_mul_pd(a._avx35, _b);
		c._avx36=  _mm256_mul_pd(a._avx36, _b);
		c._avx37=  _mm256_mul_pd(a._avx37, _b);
		c._avx38=  _mm256_mul_pd(a._avx38, _b);
		c._avx39=  _mm256_mul_pd(a._avx39, _b);
		c._avx40=  _mm256_mul_pd(a._avx40, _b);
		c._avx41=  _mm256_mul_pd(a._avx41, _b);
		c._avx42=  _mm256_mul_pd(a._avx42, _b);
		c._avx43=  _mm256_mul_pd(a._avx43, _b);
		c._avx44=  _mm256_mul_pd(a._avx44, _b);
		c._avx45=  _mm256_mul_pd(a._avx45, _b);
		c._avx46=  _mm256_mul_pd(a._avx46, _b);
		c._avx47=  _mm256_mul_pd(a._avx47, _b);
		c._avx48=  _mm256_mul_pd(a._avx48, _b);
		c._avx49=  _mm256_mul_pd(a._avx49, _b);
		c._avx50=  _mm256_mul_pd(a._avx50, _b);
		c._avx51=  _mm256_mul_pd(a._avx51, _b);
		c._avx52=  _mm256_mul_pd(a._avx52, _b);
		c._avx53=  _mm256_mul_pd(a._avx53, _b);
		c._avx54=  _mm256_mul_pd(a._avx54, _b);
		c._avx55=  _mm256_mul_pd(a._avx55, _b);
		c._avx56=  _mm256_mul_pd(a._avx56, _b);
		c._avx57=  _mm256_mul_pd(a._avx57, _b);
		c._avx58=  _mm256_mul_pd(a._avx58, _b);
		c._avx59=  _mm256_mul_pd(a._avx59, _b);
		c._avx60=  _mm256_mul_pd(a._avx60, _b);
		c._avx61=  _mm256_mul_pd(a._avx61, _b);
		c._avx62=  _mm256_mul_pd(a._avx62, _b);
		c._avx63=  _mm256_mul_pd(a._avx63, _b);
		c._avx64=  _mm256_mul_pd(a._avx64, _b);
		c._avx65=  _mm256_mul_pd(a._avx65, _b);
		c._avx66=  _mm256_mul_pd(a._avx66, _b);
		c._avx67=  _mm256_mul_pd(a._avx67, _b);
		c._avx68=  _mm256_mul_pd(a._avx68, _b);
		c._avx69=  _mm256_mul_pd(a._avx69, _b);
		c._avx70=  _mm256_mul_pd(a._avx70, _b);
		c._avx71=  _mm256_mul_pd(a._avx71, _b);
		c._avx72=  _mm256_mul_pd(a._avx72, _b);
		c._avx73=  _mm256_mul_pd(a._avx73, _b);
		c._avx74=  _mm256_mul_pd(a._avx74, _b);
		c._avx75=  _mm256_mul_pd(a._avx75, _b);
		c._avx76=  _mm256_mul_pd(a._avx76, _b);
		c._avx77=  _mm256_mul_pd(a._avx77, _b);
		c._avx78=  _mm256_mul_pd(a._avx78, _b);
		c._avx79=  _mm256_mul_pd(a._avx79, _b);
		c._avx80=  _mm256_mul_pd(a._avx80, _b);
		c._avx81=  _mm256_mul_pd(a._avx81, _b);
		c._avx82=  _mm256_mul_pd(a._avx82, _b);
		c._avx83=  _mm256_mul_pd(a._avx83, _b);
		c._avx84=  _mm256_mul_pd(a._avx84, _b);
		c._avx85=  _mm256_mul_pd(a._avx85, _b);
		c._avx86=  _mm256_mul_pd(a._avx86, _b);
		c._avx87=  _mm256_mul_pd(a._avx87, _b);
		c._avx88=  _mm256_mul_pd(a._avx88, _b);
		c._avx89=  _mm256_mul_pd(a._avx89, _b);
		c._avx90=  _mm256_mul_pd(a._avx90, _b);
		c._avx91=  _mm256_mul_pd(a._avx91, _b);
		c._avx92=  _mm256_mul_pd(a._avx92, _b);
		c._avx93=  _mm256_mul_pd(a._avx93, _b);
		c._avx94=  _mm256_mul_pd(a._avx94, _b);
		c._avx95=  _mm256_mul_pd(a._avx95, _b);
		c._avx96=  _mm256_mul_pd(a._avx96, _b);
		c._avx97=  _mm256_mul_pd(a._avx97, _b);
		c._avx98=  _mm256_mul_pd(a._avx98, _b);
		c._avx99=  _mm256_mul_pd(a._avx99, _b);
		c._avx100=  _mm256_mul_pd(a._avx100, _b);
		c._avx101=  _mm256_mul_pd(a._avx101, _b);
		c._avx102=  _mm256_mul_pd(a._avx102, _b);
		c._avx103=  _mm256_mul_pd(a._avx103, _b);
		c._avx104=  _mm256_mul_pd(a._avx104, _b);
		c._avx105=  _mm256_mul_pd(a._avx105, _b);
		c._avx106=  _mm256_mul_pd(a._avx106, _b);
		c._avx107=  _mm256_mul_pd(a._avx107, _b);
		c._avx108=  _mm256_mul_pd(a._avx108, _b);
		c._avx109=  _mm256_mul_pd(a._avx109, _b);
		c._avx110=  _mm256_mul_pd(a._avx110, _b);
		c._avx111=  _mm256_mul_pd(a._avx111, _b);
		c._avx112=  _mm256_mul_pd(a._avx112, _b);
		c._avx113=  _mm256_mul_pd(a._avx113, _b);
		c._avx114=  _mm256_mul_pd(a._avx114, _b);
		c._avx115=  _mm256_mul_pd(a._avx115, _b);
		c._avx116=  _mm256_mul_pd(a._avx116, _b);
		c._avx117=  _mm256_mul_pd(a._avx117, _b);
		c._avx118=  _mm256_mul_pd(a._avx118, _b);
		return c;
	}


	inline VectorSIMD473 operator*(int a, VectorSIMD473 b){
		if(a==1){return b;}
		VectorSIMD473 c;
		double q = static_cast<double>(a);
		__m256d _a =  _mm256_set_pd(q,q,q,q);
		c._avx0=  _mm256_mul_pd(_a, b._avx0);
		c._avx1=  _mm256_mul_pd(_a, b._avx1);
		c._avx2=  _mm256_mul_pd(_a, b._avx2);
		c._avx3=  _mm256_mul_pd(_a, b._avx3);
		c._avx4=  _mm256_mul_pd(_a, b._avx4);
		c._avx5=  _mm256_mul_pd(_a, b._avx5);
		c._avx6=  _mm256_mul_pd(_a, b._avx6);
		c._avx7=  _mm256_mul_pd(_a, b._avx7);
		c._avx8=  _mm256_mul_pd(_a, b._avx8);
		c._avx9=  _mm256_mul_pd(_a, b._avx9);
		c._avx10=  _mm256_mul_pd(_a, b._avx10);
		c._avx11=  _mm256_mul_pd(_a, b._avx11);
		c._avx12=  _mm256_mul_pd(_a, b._avx12);
		c._avx13=  _mm256_mul_pd(_a, b._avx13);
		c._avx14=  _mm256_mul_pd(_a, b._avx14);
		c._avx15=  _mm256_mul_pd(_a, b._avx15);
		c._avx16=  _mm256_mul_pd(_a, b._avx16);
		c._avx17=  _mm256_mul_pd(_a, b._avx17);
		c._avx18=  _mm256_mul_pd(_a, b._avx18);
		c._avx19=  _mm256_mul_pd(_a, b._avx19);
		c._avx20=  _mm256_mul_pd(_a, b._avx20);
		c._avx21=  _mm256_mul_pd(_a, b._avx21);
		c._avx22=  _mm256_mul_pd(_a, b._avx22);
		c._avx23=  _mm256_mul_pd(_a, b._avx23);
		c._avx24=  _mm256_mul_pd(_a, b._avx24);
		c._avx25=  _mm256_mul_pd(_a, b._avx25);
		c._avx26=  _mm256_mul_pd(_a, b._avx26);
		c._avx27=  _mm256_mul_pd(_a, b._avx27);
		c._avx28=  _mm256_mul_pd(_a, b._avx28);
		c._avx29=  _mm256_mul_pd(_a, b._avx29);
		c._avx30=  _mm256_mul_pd(_a, b._avx30);
		c._avx31=  _mm256_mul_pd(_a, b._avx31);
		c._avx32=  _mm256_mul_pd(_a, b._avx32);
		c._avx33=  _mm256_mul_pd(_a, b._avx33);
		c._avx34=  _mm256_mul_pd(_a, b._avx34);
		c._avx35=  _mm256_mul_pd(_a, b._avx35);
		c._avx36=  _mm256_mul_pd(_a, b._avx36);
		c._avx37=  _mm256_mul_pd(_a, b._avx37);
		c._avx38=  _mm256_mul_pd(_a, b._avx38);
		c._avx39=  _mm256_mul_pd(_a, b._avx39);
		c._avx40=  _mm256_mul_pd(_a, b._avx40);
		c._avx41=  _mm256_mul_pd(_a, b._avx41);
		c._avx42=  _mm256_mul_pd(_a, b._avx42);
		c._avx43=  _mm256_mul_pd(_a, b._avx43);
		c._avx44=  _mm256_mul_pd(_a, b._avx44);
		c._avx45=  _mm256_mul_pd(_a, b._avx45);
		c._avx46=  _mm256_mul_pd(_a, b._avx46);
		c._avx47=  _mm256_mul_pd(_a, b._avx47);
		c._avx48=  _mm256_mul_pd(_a, b._avx48);
		c._avx49=  _mm256_mul_pd(_a, b._avx49);
		c._avx50=  _mm256_mul_pd(_a, b._avx50);
		c._avx51=  _mm256_mul_pd(_a, b._avx51);
		c._avx52=  _mm256_mul_pd(_a, b._avx52);
		c._avx53=  _mm256_mul_pd(_a, b._avx53);
		c._avx54=  _mm256_mul_pd(_a, b._avx54);
		c._avx55=  _mm256_mul_pd(_a, b._avx55);
		c._avx56=  _mm256_mul_pd(_a, b._avx56);
		c._avx57=  _mm256_mul_pd(_a, b._avx57);
		c._avx58=  _mm256_mul_pd(_a, b._avx58);
		c._avx59=  _mm256_mul_pd(_a, b._avx59);
		c._avx60=  _mm256_mul_pd(_a, b._avx60);
		c._avx61=  _mm256_mul_pd(_a, b._avx61);
		c._avx62=  _mm256_mul_pd(_a, b._avx62);
		c._avx63=  _mm256_mul_pd(_a, b._avx63);
		c._avx64=  _mm256_mul_pd(_a, b._avx64);
		c._avx65=  _mm256_mul_pd(_a, b._avx65);
		c._avx66=  _mm256_mul_pd(_a, b._avx66);
		c._avx67=  _mm256_mul_pd(_a, b._avx67);
		c._avx68=  _mm256_mul_pd(_a, b._avx68);
		c._avx69=  _mm256_mul_pd(_a, b._avx69);
		c._avx70=  _mm256_mul_pd(_a, b._avx70);
		c._avx71=  _mm256_mul_pd(_a, b._avx71);
		c._avx72=  _mm256_mul_pd(_a, b._avx72);
		c._avx73=  _mm256_mul_pd(_a, b._avx73);
		c._avx74=  _mm256_mul_pd(_a, b._avx74);
		c._avx75=  _mm256_mul_pd(_a, b._avx75);
		c._avx76=  _mm256_mul_pd(_a, b._avx76);
		c._avx77=  _mm256_mul_pd(_a, b._avx77);
		c._avx78=  _mm256_mul_pd(_a, b._avx78);
		c._avx79=  _mm256_mul_pd(_a, b._avx79);
		c._avx80=  _mm256_mul_pd(_a, b._avx80);
		c._avx81=  _mm256_mul_pd(_a, b._avx81);
		c._avx82=  _mm256_mul_pd(_a, b._avx82);
		c._avx83=  _mm256_mul_pd(_a, b._avx83);
		c._avx84=  _mm256_mul_pd(_a, b._avx84);
		c._avx85=  _mm256_mul_pd(_a, b._avx85);
		c._avx86=  _mm256_mul_pd(_a, b._avx86);
		c._avx87=  _mm256_mul_pd(_a, b._avx87);
		c._avx88=  _mm256_mul_pd(_a, b._avx88);
		c._avx89=  _mm256_mul_pd(_a, b._avx89);
		c._avx90=  _mm256_mul_pd(_a, b._avx90);
		c._avx91=  _mm256_mul_pd(_a, b._avx91);
		c._avx92=  _mm256_mul_pd(_a, b._avx92);
		c._avx93=  _mm256_mul_pd(_a, b._avx93);
		c._avx94=  _mm256_mul_pd(_a, b._avx94);
		c._avx95=  _mm256_mul_pd(_a, b._avx95);
		c._avx96=  _mm256_mul_pd(_a, b._avx96);
		c._avx97=  _mm256_mul_pd(_a, b._avx97);
		c._avx98=  _mm256_mul_pd(_a, b._avx98);
		c._avx99=  _mm256_mul_pd(_a, b._avx99);
		c._avx100=  _mm256_mul_pd(_a, b._avx100);
		c._avx101=  _mm256_mul_pd(_a, b._avx101);
		c._avx102=  _mm256_mul_pd(_a, b._avx102);
		c._avx103=  _mm256_mul_pd(_a, b._avx103);
		c._avx104=  _mm256_mul_pd(_a, b._avx104);
		c._avx105=  _mm256_mul_pd(_a, b._avx105);
		c._avx106=  _mm256_mul_pd(_a, b._avx106);
		c._avx107=  _mm256_mul_pd(_a, b._avx107);
		c._avx108=  _mm256_mul_pd(_a, b._avx108);
		c._avx109=  _mm256_mul_pd(_a, b._avx109);
		c._avx110=  _mm256_mul_pd(_a, b._avx110);
		c._avx111=  _mm256_mul_pd(_a, b._avx111);
		c._avx112=  _mm256_mul_pd(_a, b._avx112);
		c._avx113=  _mm256_mul_pd(_a, b._avx113);
		c._avx114=  _mm256_mul_pd(_a, b._avx114);
		c._avx115=  _mm256_mul_pd(_a, b._avx115);
		c._avx116=  _mm256_mul_pd(_a, b._avx116);
		c._avx117=  _mm256_mul_pd(_a, b._avx117);
		c._avx118=  _mm256_mul_pd(_a, b._avx118);
		return c;
	}


	inline VectorSIMD473 operator*(VectorSIMD473 a, int b){
		if(b==1){return a;}
		VectorSIMD473 c;
		double q = static_cast<double>(b);
		__m256d _b =  _mm256_set_pd(q,q,q,q);
		c._avx0=  _mm256_mul_pd(_b, a._avx0);
		c._avx1=  _mm256_mul_pd(_b, a._avx1);
		c._avx2=  _mm256_mul_pd(_b, a._avx2);
		c._avx3=  _mm256_mul_pd(_b, a._avx3);
		c._avx4=  _mm256_mul_pd(_b, a._avx4);
		c._avx5=  _mm256_mul_pd(_b, a._avx5);
		c._avx6=  _mm256_mul_pd(_b, a._avx6);
		c._avx7=  _mm256_mul_pd(_b, a._avx7);
		c._avx8=  _mm256_mul_pd(_b, a._avx8);
		c._avx9=  _mm256_mul_pd(_b, a._avx9);
		c._avx10=  _mm256_mul_pd(_b, a._avx10);
		c._avx11=  _mm256_mul_pd(_b, a._avx11);
		c._avx12=  _mm256_mul_pd(_b, a._avx12);
		c._avx13=  _mm256_mul_pd(_b, a._avx13);
		c._avx14=  _mm256_mul_pd(_b, a._avx14);
		c._avx15=  _mm256_mul_pd(_b, a._avx15);
		c._avx16=  _mm256_mul_pd(_b, a._avx16);
		c._avx17=  _mm256_mul_pd(_b, a._avx17);
		c._avx18=  _mm256_mul_pd(_b, a._avx18);
		c._avx19=  _mm256_mul_pd(_b, a._avx19);
		c._avx20=  _mm256_mul_pd(_b, a._avx20);
		c._avx21=  _mm256_mul_pd(_b, a._avx21);
		c._avx22=  _mm256_mul_pd(_b, a._avx22);
		c._avx23=  _mm256_mul_pd(_b, a._avx23);
		c._avx24=  _mm256_mul_pd(_b, a._avx24);
		c._avx25=  _mm256_mul_pd(_b, a._avx25);
		c._avx26=  _mm256_mul_pd(_b, a._avx26);
		c._avx27=  _mm256_mul_pd(_b, a._avx27);
		c._avx28=  _mm256_mul_pd(_b, a._avx28);
		c._avx29=  _mm256_mul_pd(_b, a._avx29);
		c._avx30=  _mm256_mul_pd(_b, a._avx30);
		c._avx31=  _mm256_mul_pd(_b, a._avx31);
		c._avx32=  _mm256_mul_pd(_b, a._avx32);
		c._avx33=  _mm256_mul_pd(_b, a._avx33);
		c._avx34=  _mm256_mul_pd(_b, a._avx34);
		c._avx35=  _mm256_mul_pd(_b, a._avx35);
		c._avx36=  _mm256_mul_pd(_b, a._avx36);
		c._avx37=  _mm256_mul_pd(_b, a._avx37);
		c._avx38=  _mm256_mul_pd(_b, a._avx38);
		c._avx39=  _mm256_mul_pd(_b, a._avx39);
		c._avx40=  _mm256_mul_pd(_b, a._avx40);
		c._avx41=  _mm256_mul_pd(_b, a._avx41);
		c._avx42=  _mm256_mul_pd(_b, a._avx42);
		c._avx43=  _mm256_mul_pd(_b, a._avx43);
		c._avx44=  _mm256_mul_pd(_b, a._avx44);
		c._avx45=  _mm256_mul_pd(_b, a._avx45);
		c._avx46=  _mm256_mul_pd(_b, a._avx46);
		c._avx47=  _mm256_mul_pd(_b, a._avx47);
		c._avx48=  _mm256_mul_pd(_b, a._avx48);
		c._avx49=  _mm256_mul_pd(_b, a._avx49);
		c._avx50=  _mm256_mul_pd(_b, a._avx50);
		c._avx51=  _mm256_mul_pd(_b, a._avx51);
		c._avx52=  _mm256_mul_pd(_b, a._avx52);
		c._avx53=  _mm256_mul_pd(_b, a._avx53);
		c._avx54=  _mm256_mul_pd(_b, a._avx54);
		c._avx55=  _mm256_mul_pd(_b, a._avx55);
		c._avx56=  _mm256_mul_pd(_b, a._avx56);
		c._avx57=  _mm256_mul_pd(_b, a._avx57);
		c._avx58=  _mm256_mul_pd(_b, a._avx58);
		c._avx59=  _mm256_mul_pd(_b, a._avx59);
		c._avx60=  _mm256_mul_pd(_b, a._avx60);
		c._avx61=  _mm256_mul_pd(_b, a._avx61);
		c._avx62=  _mm256_mul_pd(_b, a._avx62);
		c._avx63=  _mm256_mul_pd(_b, a._avx63);
		c._avx64=  _mm256_mul_pd(_b, a._avx64);
		c._avx65=  _mm256_mul_pd(_b, a._avx65);
		c._avx66=  _mm256_mul_pd(_b, a._avx66);
		c._avx67=  _mm256_mul_pd(_b, a._avx67);
		c._avx68=  _mm256_mul_pd(_b, a._avx68);
		c._avx69=  _mm256_mul_pd(_b, a._avx69);
		c._avx70=  _mm256_mul_pd(_b, a._avx70);
		c._avx71=  _mm256_mul_pd(_b, a._avx71);
		c._avx72=  _mm256_mul_pd(_b, a._avx72);
		c._avx73=  _mm256_mul_pd(_b, a._avx73);
		c._avx74=  _mm256_mul_pd(_b, a._avx74);
		c._avx75=  _mm256_mul_pd(_b, a._avx75);
		c._avx76=  _mm256_mul_pd(_b, a._avx76);
		c._avx77=  _mm256_mul_pd(_b, a._avx77);
		c._avx78=  _mm256_mul_pd(_b, a._avx78);
		c._avx79=  _mm256_mul_pd(_b, a._avx79);
		c._avx80=  _mm256_mul_pd(_b, a._avx80);
		c._avx81=  _mm256_mul_pd(_b, a._avx81);
		c._avx82=  _mm256_mul_pd(_b, a._avx82);
		c._avx83=  _mm256_mul_pd(_b, a._avx83);
		c._avx84=  _mm256_mul_pd(_b, a._avx84);
		c._avx85=  _mm256_mul_pd(_b, a._avx85);
		c._avx86=  _mm256_mul_pd(_b, a._avx86);
		c._avx87=  _mm256_mul_pd(_b, a._avx87);
		c._avx88=  _mm256_mul_pd(_b, a._avx88);
		c._avx89=  _mm256_mul_pd(_b, a._avx89);
		c._avx90=  _mm256_mul_pd(_b, a._avx90);
		c._avx91=  _mm256_mul_pd(_b, a._avx91);
		c._avx92=  _mm256_mul_pd(_b, a._avx92);
		c._avx93=  _mm256_mul_pd(_b, a._avx93);
		c._avx94=  _mm256_mul_pd(_b, a._avx94);
		c._avx95=  _mm256_mul_pd(_b, a._avx95);
		c._avx96=  _mm256_mul_pd(_b, a._avx96);
		c._avx97=  _mm256_mul_pd(_b, a._avx97);
		c._avx98=  _mm256_mul_pd(_b, a._avx98);
		c._avx99=  _mm256_mul_pd(_b, a._avx99);
		c._avx100=  _mm256_mul_pd(_b, a._avx100);
		c._avx101=  _mm256_mul_pd(_b, a._avx101);
		c._avx102=  _mm256_mul_pd(_b, a._avx102);
		c._avx103=  _mm256_mul_pd(_b, a._avx103);
		c._avx104=  _mm256_mul_pd(_b, a._avx104);
		c._avx105=  _mm256_mul_pd(_b, a._avx105);
		c._avx106=  _mm256_mul_pd(_b, a._avx106);
		c._avx107=  _mm256_mul_pd(_b, a._avx107);
		c._avx108=  _mm256_mul_pd(_b, a._avx108);
		c._avx109=  _mm256_mul_pd(_b, a._avx109);
		c._avx110=  _mm256_mul_pd(_b, a._avx110);
		c._avx111=  _mm256_mul_pd(_b, a._avx111);
		c._avx112=  _mm256_mul_pd(_b, a._avx112);
		c._avx113=  _mm256_mul_pd(_b, a._avx113);
		c._avx114=  _mm256_mul_pd(_b, a._avx114);
		c._avx115=  _mm256_mul_pd(_b, a._avx115);
		c._avx116=  _mm256_mul_pd(_b, a._avx116);
		c._avx117=  _mm256_mul_pd(_b, a._avx117);
		c._avx118=  _mm256_mul_pd(_b, a._avx118);
		return c;
	}


	inline VectorSIMD473 operator*(VectorSIMD473 a, VectorSIMD473 b){
		VectorSIMD473 c;
		c._avx0=  _mm256_mul_pd(a._avx0, b._avx0);
		c._avx1=  _mm256_mul_pd(a._avx1, b._avx1);
		c._avx2=  _mm256_mul_pd(a._avx2, b._avx2);
		c._avx3=  _mm256_mul_pd(a._avx3, b._avx3);
		c._avx4=  _mm256_mul_pd(a._avx4, b._avx4);
		c._avx5=  _mm256_mul_pd(a._avx5, b._avx5);
		c._avx6=  _mm256_mul_pd(a._avx6, b._avx6);
		c._avx7=  _mm256_mul_pd(a._avx7, b._avx7);
		c._avx8=  _mm256_mul_pd(a._avx8, b._avx8);
		c._avx9=  _mm256_mul_pd(a._avx9, b._avx9);
		c._avx10=  _mm256_mul_pd(a._avx10, b._avx10);
		c._avx11=  _mm256_mul_pd(a._avx11, b._avx11);
		c._avx12=  _mm256_mul_pd(a._avx12, b._avx12);
		c._avx13=  _mm256_mul_pd(a._avx13, b._avx13);
		c._avx14=  _mm256_mul_pd(a._avx14, b._avx14);
		c._avx15=  _mm256_mul_pd(a._avx15, b._avx15);
		c._avx16=  _mm256_mul_pd(a._avx16, b._avx16);
		c._avx17=  _mm256_mul_pd(a._avx17, b._avx17);
		c._avx18=  _mm256_mul_pd(a._avx18, b._avx18);
		c._avx19=  _mm256_mul_pd(a._avx19, b._avx19);
		c._avx20=  _mm256_mul_pd(a._avx20, b._avx20);
		c._avx21=  _mm256_mul_pd(a._avx21, b._avx21);
		c._avx22=  _mm256_mul_pd(a._avx22, b._avx22);
		c._avx23=  _mm256_mul_pd(a._avx23, b._avx23);
		c._avx24=  _mm256_mul_pd(a._avx24, b._avx24);
		c._avx25=  _mm256_mul_pd(a._avx25, b._avx25);
		c._avx26=  _mm256_mul_pd(a._avx26, b._avx26);
		c._avx27=  _mm256_mul_pd(a._avx27, b._avx27);
		c._avx28=  _mm256_mul_pd(a._avx28, b._avx28);
		c._avx29=  _mm256_mul_pd(a._avx29, b._avx29);
		c._avx30=  _mm256_mul_pd(a._avx30, b._avx30);
		c._avx31=  _mm256_mul_pd(a._avx31, b._avx31);
		c._avx32=  _mm256_mul_pd(a._avx32, b._avx32);
		c._avx33=  _mm256_mul_pd(a._avx33, b._avx33);
		c._avx34=  _mm256_mul_pd(a._avx34, b._avx34);
		c._avx35=  _mm256_mul_pd(a._avx35, b._avx35);
		c._avx36=  _mm256_mul_pd(a._avx36, b._avx36);
		c._avx37=  _mm256_mul_pd(a._avx37, b._avx37);
		c._avx38=  _mm256_mul_pd(a._avx38, b._avx38);
		c._avx39=  _mm256_mul_pd(a._avx39, b._avx39);
		c._avx40=  _mm256_mul_pd(a._avx40, b._avx40);
		c._avx41=  _mm256_mul_pd(a._avx41, b._avx41);
		c._avx42=  _mm256_mul_pd(a._avx42, b._avx42);
		c._avx43=  _mm256_mul_pd(a._avx43, b._avx43);
		c._avx44=  _mm256_mul_pd(a._avx44, b._avx44);
		c._avx45=  _mm256_mul_pd(a._avx45, b._avx45);
		c._avx46=  _mm256_mul_pd(a._avx46, b._avx46);
		c._avx47=  _mm256_mul_pd(a._avx47, b._avx47);
		c._avx48=  _mm256_mul_pd(a._avx48, b._avx48);
		c._avx49=  _mm256_mul_pd(a._avx49, b._avx49);
		c._avx50=  _mm256_mul_pd(a._avx50, b._avx50);
		c._avx51=  _mm256_mul_pd(a._avx51, b._avx51);
		c._avx52=  _mm256_mul_pd(a._avx52, b._avx52);
		c._avx53=  _mm256_mul_pd(a._avx53, b._avx53);
		c._avx54=  _mm256_mul_pd(a._avx54, b._avx54);
		c._avx55=  _mm256_mul_pd(a._avx55, b._avx55);
		c._avx56=  _mm256_mul_pd(a._avx56, b._avx56);
		c._avx57=  _mm256_mul_pd(a._avx57, b._avx57);
		c._avx58=  _mm256_mul_pd(a._avx58, b._avx58);
		c._avx59=  _mm256_mul_pd(a._avx59, b._avx59);
		c._avx60=  _mm256_mul_pd(a._avx60, b._avx60);
		c._avx61=  _mm256_mul_pd(a._avx61, b._avx61);
		c._avx62=  _mm256_mul_pd(a._avx62, b._avx62);
		c._avx63=  _mm256_mul_pd(a._avx63, b._avx63);
		c._avx64=  _mm256_mul_pd(a._avx64, b._avx64);
		c._avx65=  _mm256_mul_pd(a._avx65, b._avx65);
		c._avx66=  _mm256_mul_pd(a._avx66, b._avx66);
		c._avx67=  _mm256_mul_pd(a._avx67, b._avx67);
		c._avx68=  _mm256_mul_pd(a._avx68, b._avx68);
		c._avx69=  _mm256_mul_pd(a._avx69, b._avx69);
		c._avx70=  _mm256_mul_pd(a._avx70, b._avx70);
		c._avx71=  _mm256_mul_pd(a._avx71, b._avx71);
		c._avx72=  _mm256_mul_pd(a._avx72, b._avx72);
		c._avx73=  _mm256_mul_pd(a._avx73, b._avx73);
		c._avx74=  _mm256_mul_pd(a._avx74, b._avx74);
		c._avx75=  _mm256_mul_pd(a._avx75, b._avx75);
		c._avx76=  _mm256_mul_pd(a._avx76, b._avx76);
		c._avx77=  _mm256_mul_pd(a._avx77, b._avx77);
		c._avx78=  _mm256_mul_pd(a._avx78, b._avx78);
		c._avx79=  _mm256_mul_pd(a._avx79, b._avx79);
		c._avx80=  _mm256_mul_pd(a._avx80, b._avx80);
		c._avx81=  _mm256_mul_pd(a._avx81, b._avx81);
		c._avx82=  _mm256_mul_pd(a._avx82, b._avx82);
		c._avx83=  _mm256_mul_pd(a._avx83, b._avx83);
		c._avx84=  _mm256_mul_pd(a._avx84, b._avx84);
		c._avx85=  _mm256_mul_pd(a._avx85, b._avx85);
		c._avx86=  _mm256_mul_pd(a._avx86, b._avx86);
		c._avx87=  _mm256_mul_pd(a._avx87, b._avx87);
		c._avx88=  _mm256_mul_pd(a._avx88, b._avx88);
		c._avx89=  _mm256_mul_pd(a._avx89, b._avx89);
		c._avx90=  _mm256_mul_pd(a._avx90, b._avx90);
		c._avx91=  _mm256_mul_pd(a._avx91, b._avx91);
		c._avx92=  _mm256_mul_pd(a._avx92, b._avx92);
		c._avx93=  _mm256_mul_pd(a._avx93, b._avx93);
		c._avx94=  _mm256_mul_pd(a._avx94, b._avx94);
		c._avx95=  _mm256_mul_pd(a._avx95, b._avx95);
		c._avx96=  _mm256_mul_pd(a._avx96, b._avx96);
		c._avx97=  _mm256_mul_pd(a._avx97, b._avx97);
		c._avx98=  _mm256_mul_pd(a._avx98, b._avx98);
		c._avx99=  _mm256_mul_pd(a._avx99, b._avx99);
		c._avx100=  _mm256_mul_pd(a._avx100, b._avx100);
		c._avx101=  _mm256_mul_pd(a._avx101, b._avx101);
		c._avx102=  _mm256_mul_pd(a._avx102, b._avx102);
		c._avx103=  _mm256_mul_pd(a._avx103, b._avx103);
		c._avx104=  _mm256_mul_pd(a._avx104, b._avx104);
		c._avx105=  _mm256_mul_pd(a._avx105, b._avx105);
		c._avx106=  _mm256_mul_pd(a._avx106, b._avx106);
		c._avx107=  _mm256_mul_pd(a._avx107, b._avx107);
		c._avx108=  _mm256_mul_pd(a._avx108, b._avx108);
		c._avx109=  _mm256_mul_pd(a._avx109, b._avx109);
		c._avx110=  _mm256_mul_pd(a._avx110, b._avx110);
		c._avx111=  _mm256_mul_pd(a._avx111, b._avx111);
		c._avx112=  _mm256_mul_pd(a._avx112, b._avx112);
		c._avx113=  _mm256_mul_pd(a._avx113, b._avx113);
		c._avx114=  _mm256_mul_pd(a._avx114, b._avx114);
		c._avx115=  _mm256_mul_pd(a._avx115, b._avx115);
		c._avx116=  _mm256_mul_pd(a._avx116, b._avx116);
		c._avx117=  _mm256_mul_pd(a._avx117, b._avx117);
		c._avx118=  _mm256_mul_pd(a._avx118, b._avx118);
		return c;
	}


	inline VectorSIMD473 operator+(VectorSIMD473 a, VectorSIMD473 b){
		VectorSIMD473 c;
		c._avx0=  _mm256_add_pd(a._avx0, b._avx0);
		c._avx1=  _mm256_add_pd(a._avx1, b._avx1);
		c._avx2=  _mm256_add_pd(a._avx2, b._avx2);
		c._avx3=  _mm256_add_pd(a._avx3, b._avx3);
		c._avx4=  _mm256_add_pd(a._avx4, b._avx4);
		c._avx5=  _mm256_add_pd(a._avx5, b._avx5);
		c._avx6=  _mm256_add_pd(a._avx6, b._avx6);
		c._avx7=  _mm256_add_pd(a._avx7, b._avx7);
		c._avx8=  _mm256_add_pd(a._avx8, b._avx8);
		c._avx9=  _mm256_add_pd(a._avx9, b._avx9);
		c._avx10=  _mm256_add_pd(a._avx10, b._avx10);
		c._avx11=  _mm256_add_pd(a._avx11, b._avx11);
		c._avx12=  _mm256_add_pd(a._avx12, b._avx12);
		c._avx13=  _mm256_add_pd(a._avx13, b._avx13);
		c._avx14=  _mm256_add_pd(a._avx14, b._avx14);
		c._avx15=  _mm256_add_pd(a._avx15, b._avx15);
		c._avx16=  _mm256_add_pd(a._avx16, b._avx16);
		c._avx17=  _mm256_add_pd(a._avx17, b._avx17);
		c._avx18=  _mm256_add_pd(a._avx18, b._avx18);
		c._avx19=  _mm256_add_pd(a._avx19, b._avx19);
		c._avx20=  _mm256_add_pd(a._avx20, b._avx20);
		c._avx21=  _mm256_add_pd(a._avx21, b._avx21);
		c._avx22=  _mm256_add_pd(a._avx22, b._avx22);
		c._avx23=  _mm256_add_pd(a._avx23, b._avx23);
		c._avx24=  _mm256_add_pd(a._avx24, b._avx24);
		c._avx25=  _mm256_add_pd(a._avx25, b._avx25);
		c._avx26=  _mm256_add_pd(a._avx26, b._avx26);
		c._avx27=  _mm256_add_pd(a._avx27, b._avx27);
		c._avx28=  _mm256_add_pd(a._avx28, b._avx28);
		c._avx29=  _mm256_add_pd(a._avx29, b._avx29);
		c._avx30=  _mm256_add_pd(a._avx30, b._avx30);
		c._avx31=  _mm256_add_pd(a._avx31, b._avx31);
		c._avx32=  _mm256_add_pd(a._avx32, b._avx32);
		c._avx33=  _mm256_add_pd(a._avx33, b._avx33);
		c._avx34=  _mm256_add_pd(a._avx34, b._avx34);
		c._avx35=  _mm256_add_pd(a._avx35, b._avx35);
		c._avx36=  _mm256_add_pd(a._avx36, b._avx36);
		c._avx37=  _mm256_add_pd(a._avx37, b._avx37);
		c._avx38=  _mm256_add_pd(a._avx38, b._avx38);
		c._avx39=  _mm256_add_pd(a._avx39, b._avx39);
		c._avx40=  _mm256_add_pd(a._avx40, b._avx40);
		c._avx41=  _mm256_add_pd(a._avx41, b._avx41);
		c._avx42=  _mm256_add_pd(a._avx42, b._avx42);
		c._avx43=  _mm256_add_pd(a._avx43, b._avx43);
		c._avx44=  _mm256_add_pd(a._avx44, b._avx44);
		c._avx45=  _mm256_add_pd(a._avx45, b._avx45);
		c._avx46=  _mm256_add_pd(a._avx46, b._avx46);
		c._avx47=  _mm256_add_pd(a._avx47, b._avx47);
		c._avx48=  _mm256_add_pd(a._avx48, b._avx48);
		c._avx49=  _mm256_add_pd(a._avx49, b._avx49);
		c._avx50=  _mm256_add_pd(a._avx50, b._avx50);
		c._avx51=  _mm256_add_pd(a._avx51, b._avx51);
		c._avx52=  _mm256_add_pd(a._avx52, b._avx52);
		c._avx53=  _mm256_add_pd(a._avx53, b._avx53);
		c._avx54=  _mm256_add_pd(a._avx54, b._avx54);
		c._avx55=  _mm256_add_pd(a._avx55, b._avx55);
		c._avx56=  _mm256_add_pd(a._avx56, b._avx56);
		c._avx57=  _mm256_add_pd(a._avx57, b._avx57);
		c._avx58=  _mm256_add_pd(a._avx58, b._avx58);
		c._avx59=  _mm256_add_pd(a._avx59, b._avx59);
		c._avx60=  _mm256_add_pd(a._avx60, b._avx60);
		c._avx61=  _mm256_add_pd(a._avx61, b._avx61);
		c._avx62=  _mm256_add_pd(a._avx62, b._avx62);
		c._avx63=  _mm256_add_pd(a._avx63, b._avx63);
		c._avx64=  _mm256_add_pd(a._avx64, b._avx64);
		c._avx65=  _mm256_add_pd(a._avx65, b._avx65);
		c._avx66=  _mm256_add_pd(a._avx66, b._avx66);
		c._avx67=  _mm256_add_pd(a._avx67, b._avx67);
		c._avx68=  _mm256_add_pd(a._avx68, b._avx68);
		c._avx69=  _mm256_add_pd(a._avx69, b._avx69);
		c._avx70=  _mm256_add_pd(a._avx70, b._avx70);
		c._avx71=  _mm256_add_pd(a._avx71, b._avx71);
		c._avx72=  _mm256_add_pd(a._avx72, b._avx72);
		c._avx73=  _mm256_add_pd(a._avx73, b._avx73);
		c._avx74=  _mm256_add_pd(a._avx74, b._avx74);
		c._avx75=  _mm256_add_pd(a._avx75, b._avx75);
		c._avx76=  _mm256_add_pd(a._avx76, b._avx76);
		c._avx77=  _mm256_add_pd(a._avx77, b._avx77);
		c._avx78=  _mm256_add_pd(a._avx78, b._avx78);
		c._avx79=  _mm256_add_pd(a._avx79, b._avx79);
		c._avx80=  _mm256_add_pd(a._avx80, b._avx80);
		c._avx81=  _mm256_add_pd(a._avx81, b._avx81);
		c._avx82=  _mm256_add_pd(a._avx82, b._avx82);
		c._avx83=  _mm256_add_pd(a._avx83, b._avx83);
		c._avx84=  _mm256_add_pd(a._avx84, b._avx84);
		c._avx85=  _mm256_add_pd(a._avx85, b._avx85);
		c._avx86=  _mm256_add_pd(a._avx86, b._avx86);
		c._avx87=  _mm256_add_pd(a._avx87, b._avx87);
		c._avx88=  _mm256_add_pd(a._avx88, b._avx88);
		c._avx89=  _mm256_add_pd(a._avx89, b._avx89);
		c._avx90=  _mm256_add_pd(a._avx90, b._avx90);
		c._avx91=  _mm256_add_pd(a._avx91, b._avx91);
		c._avx92=  _mm256_add_pd(a._avx92, b._avx92);
		c._avx93=  _mm256_add_pd(a._avx93, b._avx93);
		c._avx94=  _mm256_add_pd(a._avx94, b._avx94);
		c._avx95=  _mm256_add_pd(a._avx95, b._avx95);
		c._avx96=  _mm256_add_pd(a._avx96, b._avx96);
		c._avx97=  _mm256_add_pd(a._avx97, b._avx97);
		c._avx98=  _mm256_add_pd(a._avx98, b._avx98);
		c._avx99=  _mm256_add_pd(a._avx99, b._avx99);
		c._avx100=  _mm256_add_pd(a._avx100, b._avx100);
		c._avx101=  _mm256_add_pd(a._avx101, b._avx101);
		c._avx102=  _mm256_add_pd(a._avx102, b._avx102);
		c._avx103=  _mm256_add_pd(a._avx103, b._avx103);
		c._avx104=  _mm256_add_pd(a._avx104, b._avx104);
		c._avx105=  _mm256_add_pd(a._avx105, b._avx105);
		c._avx106=  _mm256_add_pd(a._avx106, b._avx106);
		c._avx107=  _mm256_add_pd(a._avx107, b._avx107);
		c._avx108=  _mm256_add_pd(a._avx108, b._avx108);
		c._avx109=  _mm256_add_pd(a._avx109, b._avx109);
		c._avx110=  _mm256_add_pd(a._avx110, b._avx110);
		c._avx111=  _mm256_add_pd(a._avx111, b._avx111);
		c._avx112=  _mm256_add_pd(a._avx112, b._avx112);
		c._avx113=  _mm256_add_pd(a._avx113, b._avx113);
		c._avx114=  _mm256_add_pd(a._avx114, b._avx114);
		c._avx115=  _mm256_add_pd(a._avx115, b._avx115);
		c._avx116=  _mm256_add_pd(a._avx116, b._avx116);
		c._avx117=  _mm256_add_pd(a._avx117, b._avx117);
		c._avx118=  _mm256_add_pd(a._avx118, b._avx118);
		return c;
	}


	inline VectorSIMD473 operator-(VectorSIMD473 a, VectorSIMD473 b){
		VectorSIMD473 c;
		c._avx0=  _mm256_sub_pd(a._avx0, b._avx0);
		c._avx1=  _mm256_sub_pd(a._avx1, b._avx1);
		c._avx2=  _mm256_sub_pd(a._avx2, b._avx2);
		c._avx3=  _mm256_sub_pd(a._avx3, b._avx3);
		c._avx4=  _mm256_sub_pd(a._avx4, b._avx4);
		c._avx5=  _mm256_sub_pd(a._avx5, b._avx5);
		c._avx6=  _mm256_sub_pd(a._avx6, b._avx6);
		c._avx7=  _mm256_sub_pd(a._avx7, b._avx7);
		c._avx8=  _mm256_sub_pd(a._avx8, b._avx8);
		c._avx9=  _mm256_sub_pd(a._avx9, b._avx9);
		c._avx10=  _mm256_sub_pd(a._avx10, b._avx10);
		c._avx11=  _mm256_sub_pd(a._avx11, b._avx11);
		c._avx12=  _mm256_sub_pd(a._avx12, b._avx12);
		c._avx13=  _mm256_sub_pd(a._avx13, b._avx13);
		c._avx14=  _mm256_sub_pd(a._avx14, b._avx14);
		c._avx15=  _mm256_sub_pd(a._avx15, b._avx15);
		c._avx16=  _mm256_sub_pd(a._avx16, b._avx16);
		c._avx17=  _mm256_sub_pd(a._avx17, b._avx17);
		c._avx18=  _mm256_sub_pd(a._avx18, b._avx18);
		c._avx19=  _mm256_sub_pd(a._avx19, b._avx19);
		c._avx20=  _mm256_sub_pd(a._avx20, b._avx20);
		c._avx21=  _mm256_sub_pd(a._avx21, b._avx21);
		c._avx22=  _mm256_sub_pd(a._avx22, b._avx22);
		c._avx23=  _mm256_sub_pd(a._avx23, b._avx23);
		c._avx24=  _mm256_sub_pd(a._avx24, b._avx24);
		c._avx25=  _mm256_sub_pd(a._avx25, b._avx25);
		c._avx26=  _mm256_sub_pd(a._avx26, b._avx26);
		c._avx27=  _mm256_sub_pd(a._avx27, b._avx27);
		c._avx28=  _mm256_sub_pd(a._avx28, b._avx28);
		c._avx29=  _mm256_sub_pd(a._avx29, b._avx29);
		c._avx30=  _mm256_sub_pd(a._avx30, b._avx30);
		c._avx31=  _mm256_sub_pd(a._avx31, b._avx31);
		c._avx32=  _mm256_sub_pd(a._avx32, b._avx32);
		c._avx33=  _mm256_sub_pd(a._avx33, b._avx33);
		c._avx34=  _mm256_sub_pd(a._avx34, b._avx34);
		c._avx35=  _mm256_sub_pd(a._avx35, b._avx35);
		c._avx36=  _mm256_sub_pd(a._avx36, b._avx36);
		c._avx37=  _mm256_sub_pd(a._avx37, b._avx37);
		c._avx38=  _mm256_sub_pd(a._avx38, b._avx38);
		c._avx39=  _mm256_sub_pd(a._avx39, b._avx39);
		c._avx40=  _mm256_sub_pd(a._avx40, b._avx40);
		c._avx41=  _mm256_sub_pd(a._avx41, b._avx41);
		c._avx42=  _mm256_sub_pd(a._avx42, b._avx42);
		c._avx43=  _mm256_sub_pd(a._avx43, b._avx43);
		c._avx44=  _mm256_sub_pd(a._avx44, b._avx44);
		c._avx45=  _mm256_sub_pd(a._avx45, b._avx45);
		c._avx46=  _mm256_sub_pd(a._avx46, b._avx46);
		c._avx47=  _mm256_sub_pd(a._avx47, b._avx47);
		c._avx48=  _mm256_sub_pd(a._avx48, b._avx48);
		c._avx49=  _mm256_sub_pd(a._avx49, b._avx49);
		c._avx50=  _mm256_sub_pd(a._avx50, b._avx50);
		c._avx51=  _mm256_sub_pd(a._avx51, b._avx51);
		c._avx52=  _mm256_sub_pd(a._avx52, b._avx52);
		c._avx53=  _mm256_sub_pd(a._avx53, b._avx53);
		c._avx54=  _mm256_sub_pd(a._avx54, b._avx54);
		c._avx55=  _mm256_sub_pd(a._avx55, b._avx55);
		c._avx56=  _mm256_sub_pd(a._avx56, b._avx56);
		c._avx57=  _mm256_sub_pd(a._avx57, b._avx57);
		c._avx58=  _mm256_sub_pd(a._avx58, b._avx58);
		c._avx59=  _mm256_sub_pd(a._avx59, b._avx59);
		c._avx60=  _mm256_sub_pd(a._avx60, b._avx60);
		c._avx61=  _mm256_sub_pd(a._avx61, b._avx61);
		c._avx62=  _mm256_sub_pd(a._avx62, b._avx62);
		c._avx63=  _mm256_sub_pd(a._avx63, b._avx63);
		c._avx64=  _mm256_sub_pd(a._avx64, b._avx64);
		c._avx65=  _mm256_sub_pd(a._avx65, b._avx65);
		c._avx66=  _mm256_sub_pd(a._avx66, b._avx66);
		c._avx67=  _mm256_sub_pd(a._avx67, b._avx67);
		c._avx68=  _mm256_sub_pd(a._avx68, b._avx68);
		c._avx69=  _mm256_sub_pd(a._avx69, b._avx69);
		c._avx70=  _mm256_sub_pd(a._avx70, b._avx70);
		c._avx71=  _mm256_sub_pd(a._avx71, b._avx71);
		c._avx72=  _mm256_sub_pd(a._avx72, b._avx72);
		c._avx73=  _mm256_sub_pd(a._avx73, b._avx73);
		c._avx74=  _mm256_sub_pd(a._avx74, b._avx74);
		c._avx75=  _mm256_sub_pd(a._avx75, b._avx75);
		c._avx76=  _mm256_sub_pd(a._avx76, b._avx76);
		c._avx77=  _mm256_sub_pd(a._avx77, b._avx77);
		c._avx78=  _mm256_sub_pd(a._avx78, b._avx78);
		c._avx79=  _mm256_sub_pd(a._avx79, b._avx79);
		c._avx80=  _mm256_sub_pd(a._avx80, b._avx80);
		c._avx81=  _mm256_sub_pd(a._avx81, b._avx81);
		c._avx82=  _mm256_sub_pd(a._avx82, b._avx82);
		c._avx83=  _mm256_sub_pd(a._avx83, b._avx83);
		c._avx84=  _mm256_sub_pd(a._avx84, b._avx84);
		c._avx85=  _mm256_sub_pd(a._avx85, b._avx85);
		c._avx86=  _mm256_sub_pd(a._avx86, b._avx86);
		c._avx87=  _mm256_sub_pd(a._avx87, b._avx87);
		c._avx88=  _mm256_sub_pd(a._avx88, b._avx88);
		c._avx89=  _mm256_sub_pd(a._avx89, b._avx89);
		c._avx90=  _mm256_sub_pd(a._avx90, b._avx90);
		c._avx91=  _mm256_sub_pd(a._avx91, b._avx91);
		c._avx92=  _mm256_sub_pd(a._avx92, b._avx92);
		c._avx93=  _mm256_sub_pd(a._avx93, b._avx93);
		c._avx94=  _mm256_sub_pd(a._avx94, b._avx94);
		c._avx95=  _mm256_sub_pd(a._avx95, b._avx95);
		c._avx96=  _mm256_sub_pd(a._avx96, b._avx96);
		c._avx97=  _mm256_sub_pd(a._avx97, b._avx97);
		c._avx98=  _mm256_sub_pd(a._avx98, b._avx98);
		c._avx99=  _mm256_sub_pd(a._avx99, b._avx99);
		c._avx100=  _mm256_sub_pd(a._avx100, b._avx100);
		c._avx101=  _mm256_sub_pd(a._avx101, b._avx101);
		c._avx102=  _mm256_sub_pd(a._avx102, b._avx102);
		c._avx103=  _mm256_sub_pd(a._avx103, b._avx103);
		c._avx104=  _mm256_sub_pd(a._avx104, b._avx104);
		c._avx105=  _mm256_sub_pd(a._avx105, b._avx105);
		c._avx106=  _mm256_sub_pd(a._avx106, b._avx106);
		c._avx107=  _mm256_sub_pd(a._avx107, b._avx107);
		c._avx108=  _mm256_sub_pd(a._avx108, b._avx108);
		c._avx109=  _mm256_sub_pd(a._avx109, b._avx109);
		c._avx110=  _mm256_sub_pd(a._avx110, b._avx110);
		c._avx111=  _mm256_sub_pd(a._avx111, b._avx111);
		c._avx112=  _mm256_sub_pd(a._avx112, b._avx112);
		c._avx113=  _mm256_sub_pd(a._avx113, b._avx113);
		c._avx114=  _mm256_sub_pd(a._avx114, b._avx114);
		c._avx115=  _mm256_sub_pd(a._avx115, b._avx115);
		c._avx116=  _mm256_sub_pd(a._avx116, b._avx116);
		c._avx117=  _mm256_sub_pd(a._avx117, b._avx117);
		c._avx118=  _mm256_sub_pd(a._avx118, b._avx118);
		return c;
	}


	inline VectorSIMD473 operator/(VectorSIMD473 a, VectorSIMD473 b){
		VectorSIMD473 c;
		c._avx0=  _mm256_div_pd(a._avx0, b._avx0);
		c._avx1=  _mm256_div_pd(a._avx1, b._avx1);
		c._avx2=  _mm256_div_pd(a._avx2, b._avx2);
		c._avx3=  _mm256_div_pd(a._avx3, b._avx3);
		c._avx4=  _mm256_div_pd(a._avx4, b._avx4);
		c._avx5=  _mm256_div_pd(a._avx5, b._avx5);
		c._avx6=  _mm256_div_pd(a._avx6, b._avx6);
		c._avx7=  _mm256_div_pd(a._avx7, b._avx7);
		c._avx8=  _mm256_div_pd(a._avx8, b._avx8);
		c._avx9=  _mm256_div_pd(a._avx9, b._avx9);
		c._avx10=  _mm256_div_pd(a._avx10, b._avx10);
		c._avx11=  _mm256_div_pd(a._avx11, b._avx11);
		c._avx12=  _mm256_div_pd(a._avx12, b._avx12);
		c._avx13=  _mm256_div_pd(a._avx13, b._avx13);
		c._avx14=  _mm256_div_pd(a._avx14, b._avx14);
		c._avx15=  _mm256_div_pd(a._avx15, b._avx15);
		c._avx16=  _mm256_div_pd(a._avx16, b._avx16);
		c._avx17=  _mm256_div_pd(a._avx17, b._avx17);
		c._avx18=  _mm256_div_pd(a._avx18, b._avx18);
		c._avx19=  _mm256_div_pd(a._avx19, b._avx19);
		c._avx20=  _mm256_div_pd(a._avx20, b._avx20);
		c._avx21=  _mm256_div_pd(a._avx21, b._avx21);
		c._avx22=  _mm256_div_pd(a._avx22, b._avx22);
		c._avx23=  _mm256_div_pd(a._avx23, b._avx23);
		c._avx24=  _mm256_div_pd(a._avx24, b._avx24);
		c._avx25=  _mm256_div_pd(a._avx25, b._avx25);
		c._avx26=  _mm256_div_pd(a._avx26, b._avx26);
		c._avx27=  _mm256_div_pd(a._avx27, b._avx27);
		c._avx28=  _mm256_div_pd(a._avx28, b._avx28);
		c._avx29=  _mm256_div_pd(a._avx29, b._avx29);
		c._avx30=  _mm256_div_pd(a._avx30, b._avx30);
		c._avx31=  _mm256_div_pd(a._avx31, b._avx31);
		c._avx32=  _mm256_div_pd(a._avx32, b._avx32);
		c._avx33=  _mm256_div_pd(a._avx33, b._avx33);
		c._avx34=  _mm256_div_pd(a._avx34, b._avx34);
		c._avx35=  _mm256_div_pd(a._avx35, b._avx35);
		c._avx36=  _mm256_div_pd(a._avx36, b._avx36);
		c._avx37=  _mm256_div_pd(a._avx37, b._avx37);
		c._avx38=  _mm256_div_pd(a._avx38, b._avx38);
		c._avx39=  _mm256_div_pd(a._avx39, b._avx39);
		c._avx40=  _mm256_div_pd(a._avx40, b._avx40);
		c._avx41=  _mm256_div_pd(a._avx41, b._avx41);
		c._avx42=  _mm256_div_pd(a._avx42, b._avx42);
		c._avx43=  _mm256_div_pd(a._avx43, b._avx43);
		c._avx44=  _mm256_div_pd(a._avx44, b._avx44);
		c._avx45=  _mm256_div_pd(a._avx45, b._avx45);
		c._avx46=  _mm256_div_pd(a._avx46, b._avx46);
		c._avx47=  _mm256_div_pd(a._avx47, b._avx47);
		c._avx48=  _mm256_div_pd(a._avx48, b._avx48);
		c._avx49=  _mm256_div_pd(a._avx49, b._avx49);
		c._avx50=  _mm256_div_pd(a._avx50, b._avx50);
		c._avx51=  _mm256_div_pd(a._avx51, b._avx51);
		c._avx52=  _mm256_div_pd(a._avx52, b._avx52);
		c._avx53=  _mm256_div_pd(a._avx53, b._avx53);
		c._avx54=  _mm256_div_pd(a._avx54, b._avx54);
		c._avx55=  _mm256_div_pd(a._avx55, b._avx55);
		c._avx56=  _mm256_div_pd(a._avx56, b._avx56);
		c._avx57=  _mm256_div_pd(a._avx57, b._avx57);
		c._avx58=  _mm256_div_pd(a._avx58, b._avx58);
		c._avx59=  _mm256_div_pd(a._avx59, b._avx59);
		c._avx60=  _mm256_div_pd(a._avx60, b._avx60);
		c._avx61=  _mm256_div_pd(a._avx61, b._avx61);
		c._avx62=  _mm256_div_pd(a._avx62, b._avx62);
		c._avx63=  _mm256_div_pd(a._avx63, b._avx63);
		c._avx64=  _mm256_div_pd(a._avx64, b._avx64);
		c._avx65=  _mm256_div_pd(a._avx65, b._avx65);
		c._avx66=  _mm256_div_pd(a._avx66, b._avx66);
		c._avx67=  _mm256_div_pd(a._avx67, b._avx67);
		c._avx68=  _mm256_div_pd(a._avx68, b._avx68);
		c._avx69=  _mm256_div_pd(a._avx69, b._avx69);
		c._avx70=  _mm256_div_pd(a._avx70, b._avx70);
		c._avx71=  _mm256_div_pd(a._avx71, b._avx71);
		c._avx72=  _mm256_div_pd(a._avx72, b._avx72);
		c._avx73=  _mm256_div_pd(a._avx73, b._avx73);
		c._avx74=  _mm256_div_pd(a._avx74, b._avx74);
		c._avx75=  _mm256_div_pd(a._avx75, b._avx75);
		c._avx76=  _mm256_div_pd(a._avx76, b._avx76);
		c._avx77=  _mm256_div_pd(a._avx77, b._avx77);
		c._avx78=  _mm256_div_pd(a._avx78, b._avx78);
		c._avx79=  _mm256_div_pd(a._avx79, b._avx79);
		c._avx80=  _mm256_div_pd(a._avx80, b._avx80);
		c._avx81=  _mm256_div_pd(a._avx81, b._avx81);
		c._avx82=  _mm256_div_pd(a._avx82, b._avx82);
		c._avx83=  _mm256_div_pd(a._avx83, b._avx83);
		c._avx84=  _mm256_div_pd(a._avx84, b._avx84);
		c._avx85=  _mm256_div_pd(a._avx85, b._avx85);
		c._avx86=  _mm256_div_pd(a._avx86, b._avx86);
		c._avx87=  _mm256_div_pd(a._avx87, b._avx87);
		c._avx88=  _mm256_div_pd(a._avx88, b._avx88);
		c._avx89=  _mm256_div_pd(a._avx89, b._avx89);
		c._avx90=  _mm256_div_pd(a._avx90, b._avx90);
		c._avx91=  _mm256_div_pd(a._avx91, b._avx91);
		c._avx92=  _mm256_div_pd(a._avx92, b._avx92);
		c._avx93=  _mm256_div_pd(a._avx93, b._avx93);
		c._avx94=  _mm256_div_pd(a._avx94, b._avx94);
		c._avx95=  _mm256_div_pd(a._avx95, b._avx95);
		c._avx96=  _mm256_div_pd(a._avx96, b._avx96);
		c._avx97=  _mm256_div_pd(a._avx97, b._avx97);
		c._avx98=  _mm256_div_pd(a._avx98, b._avx98);
		c._avx99=  _mm256_div_pd(a._avx99, b._avx99);
		c._avx100=  _mm256_div_pd(a._avx100, b._avx100);
		c._avx101=  _mm256_div_pd(a._avx101, b._avx101);
		c._avx102=  _mm256_div_pd(a._avx102, b._avx102);
		c._avx103=  _mm256_div_pd(a._avx103, b._avx103);
		c._avx104=  _mm256_div_pd(a._avx104, b._avx104);
		c._avx105=  _mm256_div_pd(a._avx105, b._avx105);
		c._avx106=  _mm256_div_pd(a._avx106, b._avx106);
		c._avx107=  _mm256_div_pd(a._avx107, b._avx107);
		c._avx108=  _mm256_div_pd(a._avx108, b._avx108);
		c._avx109=  _mm256_div_pd(a._avx109, b._avx109);
		c._avx110=  _mm256_div_pd(a._avx110, b._avx110);
		c._avx111=  _mm256_div_pd(a._avx111, b._avx111);
		c._avx112=  _mm256_div_pd(a._avx112, b._avx112);
		c._avx113=  _mm256_div_pd(a._avx113, b._avx113);
		c._avx114=  _mm256_div_pd(a._avx114, b._avx114);
		c._avx115=  _mm256_div_pd(a._avx115, b._avx115);
		c._avx116=  _mm256_div_pd(a._avx116, b._avx116);
		c._avx117=  _mm256_div_pd(a._avx117, b._avx117);
		c._avx118=  _mm256_div_pd(a._avx118, b._avx118);
		return c;
	}


	inline VectorSIMD473 exp(VectorSIMD473 a){
		double a_d[473]; a.convert(a_d);
		a_d[0] = std::exp(a_d[0]);
		a_d[1] = std::exp(a_d[1]);
		a_d[2] = std::exp(a_d[2]);
		a_d[3] = std::exp(a_d[3]);
		a_d[4] = std::exp(a_d[4]);
		a_d[5] = std::exp(a_d[5]);
		a_d[6] = std::exp(a_d[6]);
		a_d[7] = std::exp(a_d[7]);
		a_d[8] = std::exp(a_d[8]);
		a_d[9] = std::exp(a_d[9]);
		a_d[10] = std::exp(a_d[10]);
		a_d[11] = std::exp(a_d[11]);
		a_d[12] = std::exp(a_d[12]);
		a_d[13] = std::exp(a_d[13]);
		a_d[14] = std::exp(a_d[14]);
		a_d[15] = std::exp(a_d[15]);
		a_d[16] = std::exp(a_d[16]);
		a_d[17] = std::exp(a_d[17]);
		a_d[18] = std::exp(a_d[18]);
		a_d[19] = std::exp(a_d[19]);
		a_d[20] = std::exp(a_d[20]);
		a_d[21] = std::exp(a_d[21]);
		a_d[22] = std::exp(a_d[22]);
		a_d[23] = std::exp(a_d[23]);
		a_d[24] = std::exp(a_d[24]);
		a_d[25] = std::exp(a_d[25]);
		a_d[26] = std::exp(a_d[26]);
		a_d[27] = std::exp(a_d[27]);
		a_d[28] = std::exp(a_d[28]);
		a_d[29] = std::exp(a_d[29]);
		a_d[30] = std::exp(a_d[30]);
		a_d[31] = std::exp(a_d[31]);
		a_d[32] = std::exp(a_d[32]);
		a_d[33] = std::exp(a_d[33]);
		a_d[34] = std::exp(a_d[34]);
		a_d[35] = std::exp(a_d[35]);
		a_d[36] = std::exp(a_d[36]);
		a_d[37] = std::exp(a_d[37]);
		a_d[38] = std::exp(a_d[38]);
		a_d[39] = std::exp(a_d[39]);
		a_d[40] = std::exp(a_d[40]);
		a_d[41] = std::exp(a_d[41]);
		a_d[42] = std::exp(a_d[42]);
		a_d[43] = std::exp(a_d[43]);
		a_d[44] = std::exp(a_d[44]);
		a_d[45] = std::exp(a_d[45]);
		a_d[46] = std::exp(a_d[46]);
		a_d[47] = std::exp(a_d[47]);
		a_d[48] = std::exp(a_d[48]);
		a_d[49] = std::exp(a_d[49]);
		a_d[50] = std::exp(a_d[50]);
		a_d[51] = std::exp(a_d[51]);
		a_d[52] = std::exp(a_d[52]);
		a_d[53] = std::exp(a_d[53]);
		a_d[54] = std::exp(a_d[54]);
		a_d[55] = std::exp(a_d[55]);
		a_d[56] = std::exp(a_d[56]);
		a_d[57] = std::exp(a_d[57]);
		a_d[58] = std::exp(a_d[58]);
		a_d[59] = std::exp(a_d[59]);
		a_d[60] = std::exp(a_d[60]);
		a_d[61] = std::exp(a_d[61]);
		a_d[62] = std::exp(a_d[62]);
		a_d[63] = std::exp(a_d[63]);
		a_d[64] = std::exp(a_d[64]);
		a_d[65] = std::exp(a_d[65]);
		a_d[66] = std::exp(a_d[66]);
		a_d[67] = std::exp(a_d[67]);
		a_d[68] = std::exp(a_d[68]);
		a_d[69] = std::exp(a_d[69]);
		a_d[70] = std::exp(a_d[70]);
		a_d[71] = std::exp(a_d[71]);
		a_d[72] = std::exp(a_d[72]);
		a_d[73] = std::exp(a_d[73]);
		a_d[74] = std::exp(a_d[74]);
		a_d[75] = std::exp(a_d[75]);
		a_d[76] = std::exp(a_d[76]);
		a_d[77] = std::exp(a_d[77]);
		a_d[78] = std::exp(a_d[78]);
		a_d[79] = std::exp(a_d[79]);
		a_d[80] = std::exp(a_d[80]);
		a_d[81] = std::exp(a_d[81]);
		a_d[82] = std::exp(a_d[82]);
		a_d[83] = std::exp(a_d[83]);
		a_d[84] = std::exp(a_d[84]);
		a_d[85] = std::exp(a_d[85]);
		a_d[86] = std::exp(a_d[86]);
		a_d[87] = std::exp(a_d[87]);
		a_d[88] = std::exp(a_d[88]);
		a_d[89] = std::exp(a_d[89]);
		a_d[90] = std::exp(a_d[90]);
		a_d[91] = std::exp(a_d[91]);
		a_d[92] = std::exp(a_d[92]);
		a_d[93] = std::exp(a_d[93]);
		a_d[94] = std::exp(a_d[94]);
		a_d[95] = std::exp(a_d[95]);
		a_d[96] = std::exp(a_d[96]);
		a_d[97] = std::exp(a_d[97]);
		a_d[98] = std::exp(a_d[98]);
		a_d[99] = std::exp(a_d[99]);
		a_d[100] = std::exp(a_d[100]);
		a_d[101] = std::exp(a_d[101]);
		a_d[102] = std::exp(a_d[102]);
		a_d[103] = std::exp(a_d[103]);
		a_d[104] = std::exp(a_d[104]);
		a_d[105] = std::exp(a_d[105]);
		a_d[106] = std::exp(a_d[106]);
		a_d[107] = std::exp(a_d[107]);
		a_d[108] = std::exp(a_d[108]);
		a_d[109] = std::exp(a_d[109]);
		a_d[110] = std::exp(a_d[110]);
		a_d[111] = std::exp(a_d[111]);
		a_d[112] = std::exp(a_d[112]);
		a_d[113] = std::exp(a_d[113]);
		a_d[114] = std::exp(a_d[114]);
		a_d[115] = std::exp(a_d[115]);
		a_d[116] = std::exp(a_d[116]);
		a_d[117] = std::exp(a_d[117]);
		a_d[118] = std::exp(a_d[118]);
		a_d[119] = std::exp(a_d[119]);
		a_d[120] = std::exp(a_d[120]);
		a_d[121] = std::exp(a_d[121]);
		a_d[122] = std::exp(a_d[122]);
		a_d[123] = std::exp(a_d[123]);
		a_d[124] = std::exp(a_d[124]);
		a_d[125] = std::exp(a_d[125]);
		a_d[126] = std::exp(a_d[126]);
		a_d[127] = std::exp(a_d[127]);
		a_d[128] = std::exp(a_d[128]);
		a_d[129] = std::exp(a_d[129]);
		a_d[130] = std::exp(a_d[130]);
		a_d[131] = std::exp(a_d[131]);
		a_d[132] = std::exp(a_d[132]);
		a_d[133] = std::exp(a_d[133]);
		a_d[134] = std::exp(a_d[134]);
		a_d[135] = std::exp(a_d[135]);
		a_d[136] = std::exp(a_d[136]);
		a_d[137] = std::exp(a_d[137]);
		a_d[138] = std::exp(a_d[138]);
		a_d[139] = std::exp(a_d[139]);
		a_d[140] = std::exp(a_d[140]);
		a_d[141] = std::exp(a_d[141]);
		a_d[142] = std::exp(a_d[142]);
		a_d[143] = std::exp(a_d[143]);
		a_d[144] = std::exp(a_d[144]);
		a_d[145] = std::exp(a_d[145]);
		a_d[146] = std::exp(a_d[146]);
		a_d[147] = std::exp(a_d[147]);
		a_d[148] = std::exp(a_d[148]);
		a_d[149] = std::exp(a_d[149]);
		a_d[150] = std::exp(a_d[150]);
		a_d[151] = std::exp(a_d[151]);
		a_d[152] = std::exp(a_d[152]);
		a_d[153] = std::exp(a_d[153]);
		a_d[154] = std::exp(a_d[154]);
		a_d[155] = std::exp(a_d[155]);
		a_d[156] = std::exp(a_d[156]);
		a_d[157] = std::exp(a_d[157]);
		a_d[158] = std::exp(a_d[158]);
		a_d[159] = std::exp(a_d[159]);
		a_d[160] = std::exp(a_d[160]);
		a_d[161] = std::exp(a_d[161]);
		a_d[162] = std::exp(a_d[162]);
		a_d[163] = std::exp(a_d[163]);
		a_d[164] = std::exp(a_d[164]);
		a_d[165] = std::exp(a_d[165]);
		a_d[166] = std::exp(a_d[166]);
		a_d[167] = std::exp(a_d[167]);
		a_d[168] = std::exp(a_d[168]);
		a_d[169] = std::exp(a_d[169]);
		a_d[170] = std::exp(a_d[170]);
		a_d[171] = std::exp(a_d[171]);
		a_d[172] = std::exp(a_d[172]);
		a_d[173] = std::exp(a_d[173]);
		a_d[174] = std::exp(a_d[174]);
		a_d[175] = std::exp(a_d[175]);
		a_d[176] = std::exp(a_d[176]);
		a_d[177] = std::exp(a_d[177]);
		a_d[178] = std::exp(a_d[178]);
		a_d[179] = std::exp(a_d[179]);
		a_d[180] = std::exp(a_d[180]);
		a_d[181] = std::exp(a_d[181]);
		a_d[182] = std::exp(a_d[182]);
		a_d[183] = std::exp(a_d[183]);
		a_d[184] = std::exp(a_d[184]);
		a_d[185] = std::exp(a_d[185]);
		a_d[186] = std::exp(a_d[186]);
		a_d[187] = std::exp(a_d[187]);
		a_d[188] = std::exp(a_d[188]);
		a_d[189] = std::exp(a_d[189]);
		a_d[190] = std::exp(a_d[190]);
		a_d[191] = std::exp(a_d[191]);
		a_d[192] = std::exp(a_d[192]);
		a_d[193] = std::exp(a_d[193]);
		a_d[194] = std::exp(a_d[194]);
		a_d[195] = std::exp(a_d[195]);
		a_d[196] = std::exp(a_d[196]);
		a_d[197] = std::exp(a_d[197]);
		a_d[198] = std::exp(a_d[198]);
		a_d[199] = std::exp(a_d[199]);
		a_d[200] = std::exp(a_d[200]);
		a_d[201] = std::exp(a_d[201]);
		a_d[202] = std::exp(a_d[202]);
		a_d[203] = std::exp(a_d[203]);
		a_d[204] = std::exp(a_d[204]);
		a_d[205] = std::exp(a_d[205]);
		a_d[206] = std::exp(a_d[206]);
		a_d[207] = std::exp(a_d[207]);
		a_d[208] = std::exp(a_d[208]);
		a_d[209] = std::exp(a_d[209]);
		a_d[210] = std::exp(a_d[210]);
		a_d[211] = std::exp(a_d[211]);
		a_d[212] = std::exp(a_d[212]);
		a_d[213] = std::exp(a_d[213]);
		a_d[214] = std::exp(a_d[214]);
		a_d[215] = std::exp(a_d[215]);
		a_d[216] = std::exp(a_d[216]);
		a_d[217] = std::exp(a_d[217]);
		a_d[218] = std::exp(a_d[218]);
		a_d[219] = std::exp(a_d[219]);
		a_d[220] = std::exp(a_d[220]);
		a_d[221] = std::exp(a_d[221]);
		a_d[222] = std::exp(a_d[222]);
		a_d[223] = std::exp(a_d[223]);
		a_d[224] = std::exp(a_d[224]);
		a_d[225] = std::exp(a_d[225]);
		a_d[226] = std::exp(a_d[226]);
		a_d[227] = std::exp(a_d[227]);
		a_d[228] = std::exp(a_d[228]);
		a_d[229] = std::exp(a_d[229]);
		a_d[230] = std::exp(a_d[230]);
		a_d[231] = std::exp(a_d[231]);
		a_d[232] = std::exp(a_d[232]);
		a_d[233] = std::exp(a_d[233]);
		a_d[234] = std::exp(a_d[234]);
		a_d[235] = std::exp(a_d[235]);
		a_d[236] = std::exp(a_d[236]);
		a_d[237] = std::exp(a_d[237]);
		a_d[238] = std::exp(a_d[238]);
		a_d[239] = std::exp(a_d[239]);
		a_d[240] = std::exp(a_d[240]);
		a_d[241] = std::exp(a_d[241]);
		a_d[242] = std::exp(a_d[242]);
		a_d[243] = std::exp(a_d[243]);
		a_d[244] = std::exp(a_d[244]);
		a_d[245] = std::exp(a_d[245]);
		a_d[246] = std::exp(a_d[246]);
		a_d[247] = std::exp(a_d[247]);
		a_d[248] = std::exp(a_d[248]);
		a_d[249] = std::exp(a_d[249]);
		a_d[250] = std::exp(a_d[250]);
		a_d[251] = std::exp(a_d[251]);
		a_d[252] = std::exp(a_d[252]);
		a_d[253] = std::exp(a_d[253]);
		a_d[254] = std::exp(a_d[254]);
		a_d[255] = std::exp(a_d[255]);
		a_d[256] = std::exp(a_d[256]);
		a_d[257] = std::exp(a_d[257]);
		a_d[258] = std::exp(a_d[258]);
		a_d[259] = std::exp(a_d[259]);
		a_d[260] = std::exp(a_d[260]);
		a_d[261] = std::exp(a_d[261]);
		a_d[262] = std::exp(a_d[262]);
		a_d[263] = std::exp(a_d[263]);
		a_d[264] = std::exp(a_d[264]);
		a_d[265] = std::exp(a_d[265]);
		a_d[266] = std::exp(a_d[266]);
		a_d[267] = std::exp(a_d[267]);
		a_d[268] = std::exp(a_d[268]);
		a_d[269] = std::exp(a_d[269]);
		a_d[270] = std::exp(a_d[270]);
		a_d[271] = std::exp(a_d[271]);
		a_d[272] = std::exp(a_d[272]);
		a_d[273] = std::exp(a_d[273]);
		a_d[274] = std::exp(a_d[274]);
		a_d[275] = std::exp(a_d[275]);
		a_d[276] = std::exp(a_d[276]);
		a_d[277] = std::exp(a_d[277]);
		a_d[278] = std::exp(a_d[278]);
		a_d[279] = std::exp(a_d[279]);
		a_d[280] = std::exp(a_d[280]);
		a_d[281] = std::exp(a_d[281]);
		a_d[282] = std::exp(a_d[282]);
		a_d[283] = std::exp(a_d[283]);
		a_d[284] = std::exp(a_d[284]);
		a_d[285] = std::exp(a_d[285]);
		a_d[286] = std::exp(a_d[286]);
		a_d[287] = std::exp(a_d[287]);
		a_d[288] = std::exp(a_d[288]);
		a_d[289] = std::exp(a_d[289]);
		a_d[290] = std::exp(a_d[290]);
		a_d[291] = std::exp(a_d[291]);
		a_d[292] = std::exp(a_d[292]);
		a_d[293] = std::exp(a_d[293]);
		a_d[294] = std::exp(a_d[294]);
		a_d[295] = std::exp(a_d[295]);
		a_d[296] = std::exp(a_d[296]);
		a_d[297] = std::exp(a_d[297]);
		a_d[298] = std::exp(a_d[298]);
		a_d[299] = std::exp(a_d[299]);
		a_d[300] = std::exp(a_d[300]);
		a_d[301] = std::exp(a_d[301]);
		a_d[302] = std::exp(a_d[302]);
		a_d[303] = std::exp(a_d[303]);
		a_d[304] = std::exp(a_d[304]);
		a_d[305] = std::exp(a_d[305]);
		a_d[306] = std::exp(a_d[306]);
		a_d[307] = std::exp(a_d[307]);
		a_d[308] = std::exp(a_d[308]);
		a_d[309] = std::exp(a_d[309]);
		a_d[310] = std::exp(a_d[310]);
		a_d[311] = std::exp(a_d[311]);
		a_d[312] = std::exp(a_d[312]);
		a_d[313] = std::exp(a_d[313]);
		a_d[314] = std::exp(a_d[314]);
		a_d[315] = std::exp(a_d[315]);
		a_d[316] = std::exp(a_d[316]);
		a_d[317] = std::exp(a_d[317]);
		a_d[318] = std::exp(a_d[318]);
		a_d[319] = std::exp(a_d[319]);
		a_d[320] = std::exp(a_d[320]);
		a_d[321] = std::exp(a_d[321]);
		a_d[322] = std::exp(a_d[322]);
		a_d[323] = std::exp(a_d[323]);
		a_d[324] = std::exp(a_d[324]);
		a_d[325] = std::exp(a_d[325]);
		a_d[326] = std::exp(a_d[326]);
		a_d[327] = std::exp(a_d[327]);
		a_d[328] = std::exp(a_d[328]);
		a_d[329] = std::exp(a_d[329]);
		a_d[330] = std::exp(a_d[330]);
		a_d[331] = std::exp(a_d[331]);
		a_d[332] = std::exp(a_d[332]);
		a_d[333] = std::exp(a_d[333]);
		a_d[334] = std::exp(a_d[334]);
		a_d[335] = std::exp(a_d[335]);
		a_d[336] = std::exp(a_d[336]);
		a_d[337] = std::exp(a_d[337]);
		a_d[338] = std::exp(a_d[338]);
		a_d[339] = std::exp(a_d[339]);
		a_d[340] = std::exp(a_d[340]);
		a_d[341] = std::exp(a_d[341]);
		a_d[342] = std::exp(a_d[342]);
		a_d[343] = std::exp(a_d[343]);
		a_d[344] = std::exp(a_d[344]);
		a_d[345] = std::exp(a_d[345]);
		a_d[346] = std::exp(a_d[346]);
		a_d[347] = std::exp(a_d[347]);
		a_d[348] = std::exp(a_d[348]);
		a_d[349] = std::exp(a_d[349]);
		a_d[350] = std::exp(a_d[350]);
		a_d[351] = std::exp(a_d[351]);
		a_d[352] = std::exp(a_d[352]);
		a_d[353] = std::exp(a_d[353]);
		a_d[354] = std::exp(a_d[354]);
		a_d[355] = std::exp(a_d[355]);
		a_d[356] = std::exp(a_d[356]);
		a_d[357] = std::exp(a_d[357]);
		a_d[358] = std::exp(a_d[358]);
		a_d[359] = std::exp(a_d[359]);
		a_d[360] = std::exp(a_d[360]);
		a_d[361] = std::exp(a_d[361]);
		a_d[362] = std::exp(a_d[362]);
		a_d[363] = std::exp(a_d[363]);
		a_d[364] = std::exp(a_d[364]);
		a_d[365] = std::exp(a_d[365]);
		a_d[366] = std::exp(a_d[366]);
		a_d[367] = std::exp(a_d[367]);
		a_d[368] = std::exp(a_d[368]);
		a_d[369] = std::exp(a_d[369]);
		a_d[370] = std::exp(a_d[370]);
		a_d[371] = std::exp(a_d[371]);
		a_d[372] = std::exp(a_d[372]);
		a_d[373] = std::exp(a_d[373]);
		a_d[374] = std::exp(a_d[374]);
		a_d[375] = std::exp(a_d[375]);
		a_d[376] = std::exp(a_d[376]);
		a_d[377] = std::exp(a_d[377]);
		a_d[378] = std::exp(a_d[378]);
		a_d[379] = std::exp(a_d[379]);
		a_d[380] = std::exp(a_d[380]);
		a_d[381] = std::exp(a_d[381]);
		a_d[382] = std::exp(a_d[382]);
		a_d[383] = std::exp(a_d[383]);
		a_d[384] = std::exp(a_d[384]);
		a_d[385] = std::exp(a_d[385]);
		a_d[386] = std::exp(a_d[386]);
		a_d[387] = std::exp(a_d[387]);
		a_d[388] = std::exp(a_d[388]);
		a_d[389] = std::exp(a_d[389]);
		a_d[390] = std::exp(a_d[390]);
		a_d[391] = std::exp(a_d[391]);
		a_d[392] = std::exp(a_d[392]);
		a_d[393] = std::exp(a_d[393]);
		a_d[394] = std::exp(a_d[394]);
		a_d[395] = std::exp(a_d[395]);
		a_d[396] = std::exp(a_d[396]);
		a_d[397] = std::exp(a_d[397]);
		a_d[398] = std::exp(a_d[398]);
		a_d[399] = std::exp(a_d[399]);
		a_d[400] = std::exp(a_d[400]);
		a_d[401] = std::exp(a_d[401]);
		a_d[402] = std::exp(a_d[402]);
		a_d[403] = std::exp(a_d[403]);
		a_d[404] = std::exp(a_d[404]);
		a_d[405] = std::exp(a_d[405]);
		a_d[406] = std::exp(a_d[406]);
		a_d[407] = std::exp(a_d[407]);
		a_d[408] = std::exp(a_d[408]);
		a_d[409] = std::exp(a_d[409]);
		a_d[410] = std::exp(a_d[410]);
		a_d[411] = std::exp(a_d[411]);
		a_d[412] = std::exp(a_d[412]);
		a_d[413] = std::exp(a_d[413]);
		a_d[414] = std::exp(a_d[414]);
		a_d[415] = std::exp(a_d[415]);
		a_d[416] = std::exp(a_d[416]);
		a_d[417] = std::exp(a_d[417]);
		a_d[418] = std::exp(a_d[418]);
		a_d[419] = std::exp(a_d[419]);
		a_d[420] = std::exp(a_d[420]);
		a_d[421] = std::exp(a_d[421]);
		a_d[422] = std::exp(a_d[422]);
		a_d[423] = std::exp(a_d[423]);
		a_d[424] = std::exp(a_d[424]);
		a_d[425] = std::exp(a_d[425]);
		a_d[426] = std::exp(a_d[426]);
		a_d[427] = std::exp(a_d[427]);
		a_d[428] = std::exp(a_d[428]);
		a_d[429] = std::exp(a_d[429]);
		a_d[430] = std::exp(a_d[430]);
		a_d[431] = std::exp(a_d[431]);
		a_d[432] = std::exp(a_d[432]);
		a_d[433] = std::exp(a_d[433]);
		a_d[434] = std::exp(a_d[434]);
		a_d[435] = std::exp(a_d[435]);
		a_d[436] = std::exp(a_d[436]);
		a_d[437] = std::exp(a_d[437]);
		a_d[438] = std::exp(a_d[438]);
		a_d[439] = std::exp(a_d[439]);
		a_d[440] = std::exp(a_d[440]);
		a_d[441] = std::exp(a_d[441]);
		a_d[442] = std::exp(a_d[442]);
		a_d[443] = std::exp(a_d[443]);
		a_d[444] = std::exp(a_d[444]);
		a_d[445] = std::exp(a_d[445]);
		a_d[446] = std::exp(a_d[446]);
		a_d[447] = std::exp(a_d[447]);
		a_d[448] = std::exp(a_d[448]);
		a_d[449] = std::exp(a_d[449]);
		a_d[450] = std::exp(a_d[450]);
		a_d[451] = std::exp(a_d[451]);
		a_d[452] = std::exp(a_d[452]);
		a_d[453] = std::exp(a_d[453]);
		a_d[454] = std::exp(a_d[454]);
		a_d[455] = std::exp(a_d[455]);
		a_d[456] = std::exp(a_d[456]);
		a_d[457] = std::exp(a_d[457]);
		a_d[458] = std::exp(a_d[458]);
		a_d[459] = std::exp(a_d[459]);
		a_d[460] = std::exp(a_d[460]);
		a_d[461] = std::exp(a_d[461]);
		a_d[462] = std::exp(a_d[462]);
		a_d[463] = std::exp(a_d[463]);
		a_d[464] = std::exp(a_d[464]);
		a_d[465] = std::exp(a_d[465]);
		a_d[466] = std::exp(a_d[466]);
		a_d[467] = std::exp(a_d[467]);
		a_d[468] = std::exp(a_d[468]);
		a_d[469] = std::exp(a_d[469]);
		a_d[470] = std::exp(a_d[470]);
		a_d[471] = std::exp(a_d[471]);
		a_d[472] = std::exp(a_d[472]);
		VectorSIMD473 r(a_d);
		return r;
	}

	inline VectorSIMD473 sqrt(VectorSIMD473 a){
		double a_d[473]; a.convert(a_d);
		a_d[0] = std::sqrt(a_d[0]);
		a_d[1] = std::sqrt(a_d[1]);
		a_d[2] = std::sqrt(a_d[2]);
		a_d[3] = std::sqrt(a_d[3]);
		a_d[4] = std::sqrt(a_d[4]);
		a_d[5] = std::sqrt(a_d[5]);
		a_d[6] = std::sqrt(a_d[6]);
		a_d[7] = std::sqrt(a_d[7]);
		a_d[8] = std::sqrt(a_d[8]);
		a_d[9] = std::sqrt(a_d[9]);
		a_d[10] = std::sqrt(a_d[10]);
		a_d[11] = std::sqrt(a_d[11]);
		a_d[12] = std::sqrt(a_d[12]);
		a_d[13] = std::sqrt(a_d[13]);
		a_d[14] = std::sqrt(a_d[14]);
		a_d[15] = std::sqrt(a_d[15]);
		a_d[16] = std::sqrt(a_d[16]);
		a_d[17] = std::sqrt(a_d[17]);
		a_d[18] = std::sqrt(a_d[18]);
		a_d[19] = std::sqrt(a_d[19]);
		a_d[20] = std::sqrt(a_d[20]);
		a_d[21] = std::sqrt(a_d[21]);
		a_d[22] = std::sqrt(a_d[22]);
		a_d[23] = std::sqrt(a_d[23]);
		a_d[24] = std::sqrt(a_d[24]);
		a_d[25] = std::sqrt(a_d[25]);
		a_d[26] = std::sqrt(a_d[26]);
		a_d[27] = std::sqrt(a_d[27]);
		a_d[28] = std::sqrt(a_d[28]);
		a_d[29] = std::sqrt(a_d[29]);
		a_d[30] = std::sqrt(a_d[30]);
		a_d[31] = std::sqrt(a_d[31]);
		a_d[32] = std::sqrt(a_d[32]);
		a_d[33] = std::sqrt(a_d[33]);
		a_d[34] = std::sqrt(a_d[34]);
		a_d[35] = std::sqrt(a_d[35]);
		a_d[36] = std::sqrt(a_d[36]);
		a_d[37] = std::sqrt(a_d[37]);
		a_d[38] = std::sqrt(a_d[38]);
		a_d[39] = std::sqrt(a_d[39]);
		a_d[40] = std::sqrt(a_d[40]);
		a_d[41] = std::sqrt(a_d[41]);
		a_d[42] = std::sqrt(a_d[42]);
		a_d[43] = std::sqrt(a_d[43]);
		a_d[44] = std::sqrt(a_d[44]);
		a_d[45] = std::sqrt(a_d[45]);
		a_d[46] = std::sqrt(a_d[46]);
		a_d[47] = std::sqrt(a_d[47]);
		a_d[48] = std::sqrt(a_d[48]);
		a_d[49] = std::sqrt(a_d[49]);
		a_d[50] = std::sqrt(a_d[50]);
		a_d[51] = std::sqrt(a_d[51]);
		a_d[52] = std::sqrt(a_d[52]);
		a_d[53] = std::sqrt(a_d[53]);
		a_d[54] = std::sqrt(a_d[54]);
		a_d[55] = std::sqrt(a_d[55]);
		a_d[56] = std::sqrt(a_d[56]);
		a_d[57] = std::sqrt(a_d[57]);
		a_d[58] = std::sqrt(a_d[58]);
		a_d[59] = std::sqrt(a_d[59]);
		a_d[60] = std::sqrt(a_d[60]);
		a_d[61] = std::sqrt(a_d[61]);
		a_d[62] = std::sqrt(a_d[62]);
		a_d[63] = std::sqrt(a_d[63]);
		a_d[64] = std::sqrt(a_d[64]);
		a_d[65] = std::sqrt(a_d[65]);
		a_d[66] = std::sqrt(a_d[66]);
		a_d[67] = std::sqrt(a_d[67]);
		a_d[68] = std::sqrt(a_d[68]);
		a_d[69] = std::sqrt(a_d[69]);
		a_d[70] = std::sqrt(a_d[70]);
		a_d[71] = std::sqrt(a_d[71]);
		a_d[72] = std::sqrt(a_d[72]);
		a_d[73] = std::sqrt(a_d[73]);
		a_d[74] = std::sqrt(a_d[74]);
		a_d[75] = std::sqrt(a_d[75]);
		a_d[76] = std::sqrt(a_d[76]);
		a_d[77] = std::sqrt(a_d[77]);
		a_d[78] = std::sqrt(a_d[78]);
		a_d[79] = std::sqrt(a_d[79]);
		a_d[80] = std::sqrt(a_d[80]);
		a_d[81] = std::sqrt(a_d[81]);
		a_d[82] = std::sqrt(a_d[82]);
		a_d[83] = std::sqrt(a_d[83]);
		a_d[84] = std::sqrt(a_d[84]);
		a_d[85] = std::sqrt(a_d[85]);
		a_d[86] = std::sqrt(a_d[86]);
		a_d[87] = std::sqrt(a_d[87]);
		a_d[88] = std::sqrt(a_d[88]);
		a_d[89] = std::sqrt(a_d[89]);
		a_d[90] = std::sqrt(a_d[90]);
		a_d[91] = std::sqrt(a_d[91]);
		a_d[92] = std::sqrt(a_d[92]);
		a_d[93] = std::sqrt(a_d[93]);
		a_d[94] = std::sqrt(a_d[94]);
		a_d[95] = std::sqrt(a_d[95]);
		a_d[96] = std::sqrt(a_d[96]);
		a_d[97] = std::sqrt(a_d[97]);
		a_d[98] = std::sqrt(a_d[98]);
		a_d[99] = std::sqrt(a_d[99]);
		a_d[100] = std::sqrt(a_d[100]);
		a_d[101] = std::sqrt(a_d[101]);
		a_d[102] = std::sqrt(a_d[102]);
		a_d[103] = std::sqrt(a_d[103]);
		a_d[104] = std::sqrt(a_d[104]);
		a_d[105] = std::sqrt(a_d[105]);
		a_d[106] = std::sqrt(a_d[106]);
		a_d[107] = std::sqrt(a_d[107]);
		a_d[108] = std::sqrt(a_d[108]);
		a_d[109] = std::sqrt(a_d[109]);
		a_d[110] = std::sqrt(a_d[110]);
		a_d[111] = std::sqrt(a_d[111]);
		a_d[112] = std::sqrt(a_d[112]);
		a_d[113] = std::sqrt(a_d[113]);
		a_d[114] = std::sqrt(a_d[114]);
		a_d[115] = std::sqrt(a_d[115]);
		a_d[116] = std::sqrt(a_d[116]);
		a_d[117] = std::sqrt(a_d[117]);
		a_d[118] = std::sqrt(a_d[118]);
		a_d[119] = std::sqrt(a_d[119]);
		a_d[120] = std::sqrt(a_d[120]);
		a_d[121] = std::sqrt(a_d[121]);
		a_d[122] = std::sqrt(a_d[122]);
		a_d[123] = std::sqrt(a_d[123]);
		a_d[124] = std::sqrt(a_d[124]);
		a_d[125] = std::sqrt(a_d[125]);
		a_d[126] = std::sqrt(a_d[126]);
		a_d[127] = std::sqrt(a_d[127]);
		a_d[128] = std::sqrt(a_d[128]);
		a_d[129] = std::sqrt(a_d[129]);
		a_d[130] = std::sqrt(a_d[130]);
		a_d[131] = std::sqrt(a_d[131]);
		a_d[132] = std::sqrt(a_d[132]);
		a_d[133] = std::sqrt(a_d[133]);
		a_d[134] = std::sqrt(a_d[134]);
		a_d[135] = std::sqrt(a_d[135]);
		a_d[136] = std::sqrt(a_d[136]);
		a_d[137] = std::sqrt(a_d[137]);
		a_d[138] = std::sqrt(a_d[138]);
		a_d[139] = std::sqrt(a_d[139]);
		a_d[140] = std::sqrt(a_d[140]);
		a_d[141] = std::sqrt(a_d[141]);
		a_d[142] = std::sqrt(a_d[142]);
		a_d[143] = std::sqrt(a_d[143]);
		a_d[144] = std::sqrt(a_d[144]);
		a_d[145] = std::sqrt(a_d[145]);
		a_d[146] = std::sqrt(a_d[146]);
		a_d[147] = std::sqrt(a_d[147]);
		a_d[148] = std::sqrt(a_d[148]);
		a_d[149] = std::sqrt(a_d[149]);
		a_d[150] = std::sqrt(a_d[150]);
		a_d[151] = std::sqrt(a_d[151]);
		a_d[152] = std::sqrt(a_d[152]);
		a_d[153] = std::sqrt(a_d[153]);
		a_d[154] = std::sqrt(a_d[154]);
		a_d[155] = std::sqrt(a_d[155]);
		a_d[156] = std::sqrt(a_d[156]);
		a_d[157] = std::sqrt(a_d[157]);
		a_d[158] = std::sqrt(a_d[158]);
		a_d[159] = std::sqrt(a_d[159]);
		a_d[160] = std::sqrt(a_d[160]);
		a_d[161] = std::sqrt(a_d[161]);
		a_d[162] = std::sqrt(a_d[162]);
		a_d[163] = std::sqrt(a_d[163]);
		a_d[164] = std::sqrt(a_d[164]);
		a_d[165] = std::sqrt(a_d[165]);
		a_d[166] = std::sqrt(a_d[166]);
		a_d[167] = std::sqrt(a_d[167]);
		a_d[168] = std::sqrt(a_d[168]);
		a_d[169] = std::sqrt(a_d[169]);
		a_d[170] = std::sqrt(a_d[170]);
		a_d[171] = std::sqrt(a_d[171]);
		a_d[172] = std::sqrt(a_d[172]);
		a_d[173] = std::sqrt(a_d[173]);
		a_d[174] = std::sqrt(a_d[174]);
		a_d[175] = std::sqrt(a_d[175]);
		a_d[176] = std::sqrt(a_d[176]);
		a_d[177] = std::sqrt(a_d[177]);
		a_d[178] = std::sqrt(a_d[178]);
		a_d[179] = std::sqrt(a_d[179]);
		a_d[180] = std::sqrt(a_d[180]);
		a_d[181] = std::sqrt(a_d[181]);
		a_d[182] = std::sqrt(a_d[182]);
		a_d[183] = std::sqrt(a_d[183]);
		a_d[184] = std::sqrt(a_d[184]);
		a_d[185] = std::sqrt(a_d[185]);
		a_d[186] = std::sqrt(a_d[186]);
		a_d[187] = std::sqrt(a_d[187]);
		a_d[188] = std::sqrt(a_d[188]);
		a_d[189] = std::sqrt(a_d[189]);
		a_d[190] = std::sqrt(a_d[190]);
		a_d[191] = std::sqrt(a_d[191]);
		a_d[192] = std::sqrt(a_d[192]);
		a_d[193] = std::sqrt(a_d[193]);
		a_d[194] = std::sqrt(a_d[194]);
		a_d[195] = std::sqrt(a_d[195]);
		a_d[196] = std::sqrt(a_d[196]);
		a_d[197] = std::sqrt(a_d[197]);
		a_d[198] = std::sqrt(a_d[198]);
		a_d[199] = std::sqrt(a_d[199]);
		a_d[200] = std::sqrt(a_d[200]);
		a_d[201] = std::sqrt(a_d[201]);
		a_d[202] = std::sqrt(a_d[202]);
		a_d[203] = std::sqrt(a_d[203]);
		a_d[204] = std::sqrt(a_d[204]);
		a_d[205] = std::sqrt(a_d[205]);
		a_d[206] = std::sqrt(a_d[206]);
		a_d[207] = std::sqrt(a_d[207]);
		a_d[208] = std::sqrt(a_d[208]);
		a_d[209] = std::sqrt(a_d[209]);
		a_d[210] = std::sqrt(a_d[210]);
		a_d[211] = std::sqrt(a_d[211]);
		a_d[212] = std::sqrt(a_d[212]);
		a_d[213] = std::sqrt(a_d[213]);
		a_d[214] = std::sqrt(a_d[214]);
		a_d[215] = std::sqrt(a_d[215]);
		a_d[216] = std::sqrt(a_d[216]);
		a_d[217] = std::sqrt(a_d[217]);
		a_d[218] = std::sqrt(a_d[218]);
		a_d[219] = std::sqrt(a_d[219]);
		a_d[220] = std::sqrt(a_d[220]);
		a_d[221] = std::sqrt(a_d[221]);
		a_d[222] = std::sqrt(a_d[222]);
		a_d[223] = std::sqrt(a_d[223]);
		a_d[224] = std::sqrt(a_d[224]);
		a_d[225] = std::sqrt(a_d[225]);
		a_d[226] = std::sqrt(a_d[226]);
		a_d[227] = std::sqrt(a_d[227]);
		a_d[228] = std::sqrt(a_d[228]);
		a_d[229] = std::sqrt(a_d[229]);
		a_d[230] = std::sqrt(a_d[230]);
		a_d[231] = std::sqrt(a_d[231]);
		a_d[232] = std::sqrt(a_d[232]);
		a_d[233] = std::sqrt(a_d[233]);
		a_d[234] = std::sqrt(a_d[234]);
		a_d[235] = std::sqrt(a_d[235]);
		a_d[236] = std::sqrt(a_d[236]);
		a_d[237] = std::sqrt(a_d[237]);
		a_d[238] = std::sqrt(a_d[238]);
		a_d[239] = std::sqrt(a_d[239]);
		a_d[240] = std::sqrt(a_d[240]);
		a_d[241] = std::sqrt(a_d[241]);
		a_d[242] = std::sqrt(a_d[242]);
		a_d[243] = std::sqrt(a_d[243]);
		a_d[244] = std::sqrt(a_d[244]);
		a_d[245] = std::sqrt(a_d[245]);
		a_d[246] = std::sqrt(a_d[246]);
		a_d[247] = std::sqrt(a_d[247]);
		a_d[248] = std::sqrt(a_d[248]);
		a_d[249] = std::sqrt(a_d[249]);
		a_d[250] = std::sqrt(a_d[250]);
		a_d[251] = std::sqrt(a_d[251]);
		a_d[252] = std::sqrt(a_d[252]);
		a_d[253] = std::sqrt(a_d[253]);
		a_d[254] = std::sqrt(a_d[254]);
		a_d[255] = std::sqrt(a_d[255]);
		a_d[256] = std::sqrt(a_d[256]);
		a_d[257] = std::sqrt(a_d[257]);
		a_d[258] = std::sqrt(a_d[258]);
		a_d[259] = std::sqrt(a_d[259]);
		a_d[260] = std::sqrt(a_d[260]);
		a_d[261] = std::sqrt(a_d[261]);
		a_d[262] = std::sqrt(a_d[262]);
		a_d[263] = std::sqrt(a_d[263]);
		a_d[264] = std::sqrt(a_d[264]);
		a_d[265] = std::sqrt(a_d[265]);
		a_d[266] = std::sqrt(a_d[266]);
		a_d[267] = std::sqrt(a_d[267]);
		a_d[268] = std::sqrt(a_d[268]);
		a_d[269] = std::sqrt(a_d[269]);
		a_d[270] = std::sqrt(a_d[270]);
		a_d[271] = std::sqrt(a_d[271]);
		a_d[272] = std::sqrt(a_d[272]);
		a_d[273] = std::sqrt(a_d[273]);
		a_d[274] = std::sqrt(a_d[274]);
		a_d[275] = std::sqrt(a_d[275]);
		a_d[276] = std::sqrt(a_d[276]);
		a_d[277] = std::sqrt(a_d[277]);
		a_d[278] = std::sqrt(a_d[278]);
		a_d[279] = std::sqrt(a_d[279]);
		a_d[280] = std::sqrt(a_d[280]);
		a_d[281] = std::sqrt(a_d[281]);
		a_d[282] = std::sqrt(a_d[282]);
		a_d[283] = std::sqrt(a_d[283]);
		a_d[284] = std::sqrt(a_d[284]);
		a_d[285] = std::sqrt(a_d[285]);
		a_d[286] = std::sqrt(a_d[286]);
		a_d[287] = std::sqrt(a_d[287]);
		a_d[288] = std::sqrt(a_d[288]);
		a_d[289] = std::sqrt(a_d[289]);
		a_d[290] = std::sqrt(a_d[290]);
		a_d[291] = std::sqrt(a_d[291]);
		a_d[292] = std::sqrt(a_d[292]);
		a_d[293] = std::sqrt(a_d[293]);
		a_d[294] = std::sqrt(a_d[294]);
		a_d[295] = std::sqrt(a_d[295]);
		a_d[296] = std::sqrt(a_d[296]);
		a_d[297] = std::sqrt(a_d[297]);
		a_d[298] = std::sqrt(a_d[298]);
		a_d[299] = std::sqrt(a_d[299]);
		a_d[300] = std::sqrt(a_d[300]);
		a_d[301] = std::sqrt(a_d[301]);
		a_d[302] = std::sqrt(a_d[302]);
		a_d[303] = std::sqrt(a_d[303]);
		a_d[304] = std::sqrt(a_d[304]);
		a_d[305] = std::sqrt(a_d[305]);
		a_d[306] = std::sqrt(a_d[306]);
		a_d[307] = std::sqrt(a_d[307]);
		a_d[308] = std::sqrt(a_d[308]);
		a_d[309] = std::sqrt(a_d[309]);
		a_d[310] = std::sqrt(a_d[310]);
		a_d[311] = std::sqrt(a_d[311]);
		a_d[312] = std::sqrt(a_d[312]);
		a_d[313] = std::sqrt(a_d[313]);
		a_d[314] = std::sqrt(a_d[314]);
		a_d[315] = std::sqrt(a_d[315]);
		a_d[316] = std::sqrt(a_d[316]);
		a_d[317] = std::sqrt(a_d[317]);
		a_d[318] = std::sqrt(a_d[318]);
		a_d[319] = std::sqrt(a_d[319]);
		a_d[320] = std::sqrt(a_d[320]);
		a_d[321] = std::sqrt(a_d[321]);
		a_d[322] = std::sqrt(a_d[322]);
		a_d[323] = std::sqrt(a_d[323]);
		a_d[324] = std::sqrt(a_d[324]);
		a_d[325] = std::sqrt(a_d[325]);
		a_d[326] = std::sqrt(a_d[326]);
		a_d[327] = std::sqrt(a_d[327]);
		a_d[328] = std::sqrt(a_d[328]);
		a_d[329] = std::sqrt(a_d[329]);
		a_d[330] = std::sqrt(a_d[330]);
		a_d[331] = std::sqrt(a_d[331]);
		a_d[332] = std::sqrt(a_d[332]);
		a_d[333] = std::sqrt(a_d[333]);
		a_d[334] = std::sqrt(a_d[334]);
		a_d[335] = std::sqrt(a_d[335]);
		a_d[336] = std::sqrt(a_d[336]);
		a_d[337] = std::sqrt(a_d[337]);
		a_d[338] = std::sqrt(a_d[338]);
		a_d[339] = std::sqrt(a_d[339]);
		a_d[340] = std::sqrt(a_d[340]);
		a_d[341] = std::sqrt(a_d[341]);
		a_d[342] = std::sqrt(a_d[342]);
		a_d[343] = std::sqrt(a_d[343]);
		a_d[344] = std::sqrt(a_d[344]);
		a_d[345] = std::sqrt(a_d[345]);
		a_d[346] = std::sqrt(a_d[346]);
		a_d[347] = std::sqrt(a_d[347]);
		a_d[348] = std::sqrt(a_d[348]);
		a_d[349] = std::sqrt(a_d[349]);
		a_d[350] = std::sqrt(a_d[350]);
		a_d[351] = std::sqrt(a_d[351]);
		a_d[352] = std::sqrt(a_d[352]);
		a_d[353] = std::sqrt(a_d[353]);
		a_d[354] = std::sqrt(a_d[354]);
		a_d[355] = std::sqrt(a_d[355]);
		a_d[356] = std::sqrt(a_d[356]);
		a_d[357] = std::sqrt(a_d[357]);
		a_d[358] = std::sqrt(a_d[358]);
		a_d[359] = std::sqrt(a_d[359]);
		a_d[360] = std::sqrt(a_d[360]);
		a_d[361] = std::sqrt(a_d[361]);
		a_d[362] = std::sqrt(a_d[362]);
		a_d[363] = std::sqrt(a_d[363]);
		a_d[364] = std::sqrt(a_d[364]);
		a_d[365] = std::sqrt(a_d[365]);
		a_d[366] = std::sqrt(a_d[366]);
		a_d[367] = std::sqrt(a_d[367]);
		a_d[368] = std::sqrt(a_d[368]);
		a_d[369] = std::sqrt(a_d[369]);
		a_d[370] = std::sqrt(a_d[370]);
		a_d[371] = std::sqrt(a_d[371]);
		a_d[372] = std::sqrt(a_d[372]);
		a_d[373] = std::sqrt(a_d[373]);
		a_d[374] = std::sqrt(a_d[374]);
		a_d[375] = std::sqrt(a_d[375]);
		a_d[376] = std::sqrt(a_d[376]);
		a_d[377] = std::sqrt(a_d[377]);
		a_d[378] = std::sqrt(a_d[378]);
		a_d[379] = std::sqrt(a_d[379]);
		a_d[380] = std::sqrt(a_d[380]);
		a_d[381] = std::sqrt(a_d[381]);
		a_d[382] = std::sqrt(a_d[382]);
		a_d[383] = std::sqrt(a_d[383]);
		a_d[384] = std::sqrt(a_d[384]);
		a_d[385] = std::sqrt(a_d[385]);
		a_d[386] = std::sqrt(a_d[386]);
		a_d[387] = std::sqrt(a_d[387]);
		a_d[388] = std::sqrt(a_d[388]);
		a_d[389] = std::sqrt(a_d[389]);
		a_d[390] = std::sqrt(a_d[390]);
		a_d[391] = std::sqrt(a_d[391]);
		a_d[392] = std::sqrt(a_d[392]);
		a_d[393] = std::sqrt(a_d[393]);
		a_d[394] = std::sqrt(a_d[394]);
		a_d[395] = std::sqrt(a_d[395]);
		a_d[396] = std::sqrt(a_d[396]);
		a_d[397] = std::sqrt(a_d[397]);
		a_d[398] = std::sqrt(a_d[398]);
		a_d[399] = std::sqrt(a_d[399]);
		a_d[400] = std::sqrt(a_d[400]);
		a_d[401] = std::sqrt(a_d[401]);
		a_d[402] = std::sqrt(a_d[402]);
		a_d[403] = std::sqrt(a_d[403]);
		a_d[404] = std::sqrt(a_d[404]);
		a_d[405] = std::sqrt(a_d[405]);
		a_d[406] = std::sqrt(a_d[406]);
		a_d[407] = std::sqrt(a_d[407]);
		a_d[408] = std::sqrt(a_d[408]);
		a_d[409] = std::sqrt(a_d[409]);
		a_d[410] = std::sqrt(a_d[410]);
		a_d[411] = std::sqrt(a_d[411]);
		a_d[412] = std::sqrt(a_d[412]);
		a_d[413] = std::sqrt(a_d[413]);
		a_d[414] = std::sqrt(a_d[414]);
		a_d[415] = std::sqrt(a_d[415]);
		a_d[416] = std::sqrt(a_d[416]);
		a_d[417] = std::sqrt(a_d[417]);
		a_d[418] = std::sqrt(a_d[418]);
		a_d[419] = std::sqrt(a_d[419]);
		a_d[420] = std::sqrt(a_d[420]);
		a_d[421] = std::sqrt(a_d[421]);
		a_d[422] = std::sqrt(a_d[422]);
		a_d[423] = std::sqrt(a_d[423]);
		a_d[424] = std::sqrt(a_d[424]);
		a_d[425] = std::sqrt(a_d[425]);
		a_d[426] = std::sqrt(a_d[426]);
		a_d[427] = std::sqrt(a_d[427]);
		a_d[428] = std::sqrt(a_d[428]);
		a_d[429] = std::sqrt(a_d[429]);
		a_d[430] = std::sqrt(a_d[430]);
		a_d[431] = std::sqrt(a_d[431]);
		a_d[432] = std::sqrt(a_d[432]);
		a_d[433] = std::sqrt(a_d[433]);
		a_d[434] = std::sqrt(a_d[434]);
		a_d[435] = std::sqrt(a_d[435]);
		a_d[436] = std::sqrt(a_d[436]);
		a_d[437] = std::sqrt(a_d[437]);
		a_d[438] = std::sqrt(a_d[438]);
		a_d[439] = std::sqrt(a_d[439]);
		a_d[440] = std::sqrt(a_d[440]);
		a_d[441] = std::sqrt(a_d[441]);
		a_d[442] = std::sqrt(a_d[442]);
		a_d[443] = std::sqrt(a_d[443]);
		a_d[444] = std::sqrt(a_d[444]);
		a_d[445] = std::sqrt(a_d[445]);
		a_d[446] = std::sqrt(a_d[446]);
		a_d[447] = std::sqrt(a_d[447]);
		a_d[448] = std::sqrt(a_d[448]);
		a_d[449] = std::sqrt(a_d[449]);
		a_d[450] = std::sqrt(a_d[450]);
		a_d[451] = std::sqrt(a_d[451]);
		a_d[452] = std::sqrt(a_d[452]);
		a_d[453] = std::sqrt(a_d[453]);
		a_d[454] = std::sqrt(a_d[454]);
		a_d[455] = std::sqrt(a_d[455]);
		a_d[456] = std::sqrt(a_d[456]);
		a_d[457] = std::sqrt(a_d[457]);
		a_d[458] = std::sqrt(a_d[458]);
		a_d[459] = std::sqrt(a_d[459]);
		a_d[460] = std::sqrt(a_d[460]);
		a_d[461] = std::sqrt(a_d[461]);
		a_d[462] = std::sqrt(a_d[462]);
		a_d[463] = std::sqrt(a_d[463]);
		a_d[464] = std::sqrt(a_d[464]);
		a_d[465] = std::sqrt(a_d[465]);
		a_d[466] = std::sqrt(a_d[466]);
		a_d[467] = std::sqrt(a_d[467]);
		a_d[468] = std::sqrt(a_d[468]);
		a_d[469] = std::sqrt(a_d[469]);
		a_d[470] = std::sqrt(a_d[470]);
		a_d[471] = std::sqrt(a_d[471]);
		a_d[472] = std::sqrt(a_d[472]);
		VectorSIMD473 r(a_d);
		return r;
	}

	inline std::ostream& operator<<(std::ostream& os, VectorSIMD473 a){ 
		double ad[473];
		a.convert(ad);
		os << "{" << ad[0] << ","  << ad[1] << ","  << ad[2] << ","  << ad[3] << ","  << ad[4] << ","  << ad[5] << ","  << ad[6] << ","  << ad[7] << ","  << ad[8] << ","  << ad[9] << ","  << ad[10] << ","  << ad[11] << ","  << ad[12] << ","  << ad[13] << ","  << ad[14] << ","  << ad[15] << ","  << ad[16] << ","  << ad[17] << ","  << ad[18] << ","  << ad[19] << ","  << ad[20] << ","  << ad[21] << ","  << ad[22] << ","  << ad[23] << ","  << ad[24] << ","  << ad[25] << ","  << ad[26] << ","  << ad[27] << ","  << ad[28] << ","  << ad[29] << ","  << ad[30] << ","  << ad[31] << ","  << ad[32] << ","  << ad[33] << ","  << ad[34] << ","  << ad[35] << ","  << ad[36] << ","  << ad[37] << ","  << ad[38] << ","  << ad[39] << ","  << ad[40] << ","  << ad[41] << ","  << ad[42] << ","  << ad[43] << ","  << ad[44] << ","  << ad[45] << ","  << ad[46] << ","  << ad[47] << ","  << ad[48] << ","  << ad[49] << ","  << ad[50] << ","  << ad[51] << ","  << ad[52] << ","  << ad[53] << ","  << ad[54] << ","  << ad[55] << ","  << ad[56] << ","  << ad[57] << ","  << ad[58] << ","  << ad[59] << ","  << ad[60] << ","  << ad[61] << ","  << ad[62] << ","  << ad[63] << ","  << ad[64] << ","  << ad[65] << ","  << ad[66] << ","  << ad[67] << ","  << ad[68] << ","  << ad[69] << ","  << ad[70] << ","  << ad[71] << ","  << ad[72] << ","  << ad[73] << ","  << ad[74] << ","  << ad[75] << ","  << ad[76] << ","  << ad[77] << ","  << ad[78] << ","  << ad[79] << ","  << ad[80] << ","  << ad[81] << ","  << ad[82] << ","  << ad[83] << ","  << ad[84] << ","  << ad[85] << ","  << ad[86] << ","  << ad[87] << ","  << ad[88] << ","  << ad[89] << ","  << ad[90] << ","  << ad[91] << ","  << ad[92] << ","  << ad[93] << ","  << ad[94] << ","  << ad[95] << ","  << ad[96] << ","  << ad[97] << ","  << ad[98] << ","  << ad[99] << ","  << ad[100] << ","  << ad[101] << ","  << ad[102] << ","  << ad[103] << ","  << ad[104] << ","  << ad[105] << ","  << ad[106] << ","  << ad[107] << ","  << ad[108] << ","  << ad[109] << ","  << ad[110] << ","  << ad[111] << ","  << ad[112] << ","  << ad[113] << ","  << ad[114] << ","  << ad[115] << ","  << ad[116] << ","  << ad[117] << ","  << ad[118] << ","  << ad[119] << ","  << ad[120] << ","  << ad[121] << ","  << ad[122] << ","  << ad[123] << ","  << ad[124] << ","  << ad[125] << ","  << ad[126] << ","  << ad[127] << ","  << ad[128] << ","  << ad[129] << ","  << ad[130] << ","  << ad[131] << ","  << ad[132] << ","  << ad[133] << ","  << ad[134] << ","  << ad[135] << ","  << ad[136] << ","  << ad[137] << ","  << ad[138] << ","  << ad[139] << ","  << ad[140] << ","  << ad[141] << ","  << ad[142] << ","  << ad[143] << ","  << ad[144] << ","  << ad[145] << ","  << ad[146] << ","  << ad[147] << ","  << ad[148] << ","  << ad[149] << ","  << ad[150] << ","  << ad[151] << ","  << ad[152] << ","  << ad[153] << ","  << ad[154] << ","  << ad[155] << ","  << ad[156] << ","  << ad[157] << ","  << ad[158] << ","  << ad[159] << ","  << ad[160] << ","  << ad[161] << ","  << ad[162] << ","  << ad[163] << ","  << ad[164] << ","  << ad[165] << ","  << ad[166] << ","  << ad[167] << ","  << ad[168] << ","  << ad[169] << ","  << ad[170] << ","  << ad[171] << ","  << ad[172] << ","  << ad[173] << ","  << ad[174] << ","  << ad[175] << ","  << ad[176] << ","  << ad[177] << ","  << ad[178] << ","  << ad[179] << ","  << ad[180] << ","  << ad[181] << ","  << ad[182] << ","  << ad[183] << ","  << ad[184] << ","  << ad[185] << ","  << ad[186] << ","  << ad[187] << ","  << ad[188] << ","  << ad[189] << ","  << ad[190] << ","  << ad[191] << ","  << ad[192] << ","  << ad[193] << ","  << ad[194] << ","  << ad[195] << ","  << ad[196] << ","  << ad[197] << ","  << ad[198] << ","  << ad[199] << ","  << ad[200] << ","  << ad[201] << ","  << ad[202] << ","  << ad[203] << ","  << ad[204] << ","  << ad[205] << ","  << ad[206] << ","  << ad[207] << ","  << ad[208] << ","  << ad[209] << ","  << ad[210] << ","  << ad[211] << ","  << ad[212] << ","  << ad[213] << ","  << ad[214] << ","  << ad[215] << ","  << ad[216] << ","  << ad[217] << ","  << ad[218] << ","  << ad[219] << ","  << ad[220] << ","  << ad[221] << ","  << ad[222] << ","  << ad[223] << ","  << ad[224] << ","  << ad[225] << ","  << ad[226] << ","  << ad[227] << ","  << ad[228] << ","  << ad[229] << ","  << ad[230] << ","  << ad[231] << ","  << ad[232] << ","  << ad[233] << ","  << ad[234] << ","  << ad[235] << ","  << ad[236] << ","  << ad[237] << ","  << ad[238] << ","  << ad[239] << ","  << ad[240] << ","  << ad[241] << ","  << ad[242] << ","  << ad[243] << ","  << ad[244] << ","  << ad[245] << ","  << ad[246] << ","  << ad[247] << ","  << ad[248] << ","  << ad[249] << ","  << ad[250] << ","  << ad[251] << ","  << ad[252] << ","  << ad[253] << ","  << ad[254] << ","  << ad[255] << ","  << ad[256] << ","  << ad[257] << ","  << ad[258] << ","  << ad[259] << ","  << ad[260] << ","  << ad[261] << ","  << ad[262] << ","  << ad[263] << ","  << ad[264] << ","  << ad[265] << ","  << ad[266] << ","  << ad[267] << ","  << ad[268] << ","  << ad[269] << ","  << ad[270] << ","  << ad[271] << ","  << ad[272] << ","  << ad[273] << ","  << ad[274] << ","  << ad[275] << ","  << ad[276] << ","  << ad[277] << ","  << ad[278] << ","  << ad[279] << ","  << ad[280] << ","  << ad[281] << ","  << ad[282] << ","  << ad[283] << ","  << ad[284] << ","  << ad[285] << ","  << ad[286] << ","  << ad[287] << ","  << ad[288] << ","  << ad[289] << ","  << ad[290] << ","  << ad[291] << ","  << ad[292] << ","  << ad[293] << ","  << ad[294] << ","  << ad[295] << ","  << ad[296] << ","  << ad[297] << ","  << ad[298] << ","  << ad[299] << ","  << ad[300] << ","  << ad[301] << ","  << ad[302] << ","  << ad[303] << ","  << ad[304] << ","  << ad[305] << ","  << ad[306] << ","  << ad[307] << ","  << ad[308] << ","  << ad[309] << ","  << ad[310] << ","  << ad[311] << ","  << ad[312] << ","  << ad[313] << ","  << ad[314] << ","  << ad[315] << ","  << ad[316] << ","  << ad[317] << ","  << ad[318] << ","  << ad[319] << ","  << ad[320] << ","  << ad[321] << ","  << ad[322] << ","  << ad[323] << ","  << ad[324] << ","  << ad[325] << ","  << ad[326] << ","  << ad[327] << ","  << ad[328] << ","  << ad[329] << ","  << ad[330] << ","  << ad[331] << ","  << ad[332] << ","  << ad[333] << ","  << ad[334] << ","  << ad[335] << ","  << ad[336] << ","  << ad[337] << ","  << ad[338] << ","  << ad[339] << ","  << ad[340] << ","  << ad[341] << ","  << ad[342] << ","  << ad[343] << ","  << ad[344] << ","  << ad[345] << ","  << ad[346] << ","  << ad[347] << ","  << ad[348] << ","  << ad[349] << ","  << ad[350] << ","  << ad[351] << ","  << ad[352] << ","  << ad[353] << ","  << ad[354] << ","  << ad[355] << ","  << ad[356] << ","  << ad[357] << ","  << ad[358] << ","  << ad[359] << ","  << ad[360] << ","  << ad[361] << ","  << ad[362] << ","  << ad[363] << ","  << ad[364] << ","  << ad[365] << ","  << ad[366] << ","  << ad[367] << ","  << ad[368] << ","  << ad[369] << ","  << ad[370] << ","  << ad[371] << ","  << ad[372] << ","  << ad[373] << ","  << ad[374] << ","  << ad[375] << ","  << ad[376] << ","  << ad[377] << ","  << ad[378] << ","  << ad[379] << ","  << ad[380] << ","  << ad[381] << ","  << ad[382] << ","  << ad[383] << ","  << ad[384] << ","  << ad[385] << ","  << ad[386] << ","  << ad[387] << ","  << ad[388] << ","  << ad[389] << ","  << ad[390] << ","  << ad[391] << ","  << ad[392] << ","  << ad[393] << ","  << ad[394] << ","  << ad[395] << ","  << ad[396] << ","  << ad[397] << ","  << ad[398] << ","  << ad[399] << ","  << ad[400] << ","  << ad[401] << ","  << ad[402] << ","  << ad[403] << ","  << ad[404] << ","  << ad[405] << ","  << ad[406] << ","  << ad[407] << ","  << ad[408] << ","  << ad[409] << ","  << ad[410] << ","  << ad[411] << ","  << ad[412] << ","  << ad[413] << ","  << ad[414] << ","  << ad[415] << ","  << ad[416] << ","  << ad[417] << ","  << ad[418] << ","  << ad[419] << ","  << ad[420] << ","  << ad[421] << ","  << ad[422] << ","  << ad[423] << ","  << ad[424] << ","  << ad[425] << ","  << ad[426] << ","  << ad[427] << ","  << ad[428] << ","  << ad[429] << ","  << ad[430] << ","  << ad[431] << ","  << ad[432] << ","  << ad[433] << ","  << ad[434] << ","  << ad[435] << ","  << ad[436] << ","  << ad[437] << ","  << ad[438] << ","  << ad[439] << ","  << ad[440] << ","  << ad[441] << ","  << ad[442] << ","  << ad[443] << ","  << ad[444] << ","  << ad[445] << ","  << ad[446] << ","  << ad[447] << ","  << ad[448] << ","  << ad[449] << ","  << ad[450] << ","  << ad[451] << ","  << ad[452] << ","  << ad[453] << ","  << ad[454] << ","  << ad[455] << ","  << ad[456] << ","  << ad[457] << ","  << ad[458] << ","  << ad[459] << ","  << ad[460] << ","  << ad[461] << ","  << ad[462] << ","  << ad[463] << ","  << ad[464] << ","  << ad[465] << ","  << ad[466] << ","  << ad[467] << ","  << ad[468] << ","  << ad[469] << ","  << ad[470] << ","  << ad[471] << ","  << ad[472] << "}";
		return os;
		}



